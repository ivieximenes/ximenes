-- Lumis Portal SQL Server Scripts

-----------------------------------------------
-- Generated SQL for: /lumis/portal/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: /lumis/portal/database'
GO

	
CREATE TABLE lum_Principal
(	principalId CHAR(32) NOT NULL,shortId NVARCHAR(100) NOT NULL,name NVARCHAR(255) NOT NULL,type INT NOT NULL,subType INT NOT NULL,channelId NVARCHAR(32) NULL,
	CONSTRAINT LUM_PK_PRINCIPAL PRIMARY KEY (principalId),
	CONSTRAINT LUM_UN_PRINCIPAL UNIQUE (shortId)
)
GO

	
CREATE TABLE lum_AccessControlList
(	accessControlListId CHAR(32) NOT NULL,inheritAccessControl INT CONSTRAINT LUM_DF_ACCESSCONTROLLIST1 DEFAULT 0 NOT NULL,parentId CHAR(32) NULL,
	CONSTRAINT LUM_PK_ACCESSCONTROLLIST PRIMARY KEY (accessControlListId),
	CONSTRAINT LUM_FK_ACCESSCONTROLLISTPARENT FOREIGN KEY (parentId) REFERENCES lum_AccessControlList(accessControlListId)
)
GO

	
CREATE INDEX LUM_IDX_ACCESSCONTROLLIST1 ON lum_AccessControlList(parentId)
GO

	
	
CREATE TABLE lum_AccessControlEntry
(	accessControlListId CHAR(32) NOT NULL,principalId CHAR(32) NOT NULL,inherited INT NOT NULL,allowPermissions INT NOT NULL,denyPermissions INT NOT NULL,
	CONSTRAINT LUM_PK_ACCESSCONTROLENTRY PRIMARY KEY (principalId,accessControlListId),
	CONSTRAINT LUM_FK_ACCESSCONTROLENTRY FOREIGN KEY (accessControlListId) REFERENCES lum_AccessControlList(accessControlListId) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_ACCESSCONTROLENTRY2 FOREIGN KEY (principalId) REFERENCES lum_Principal(principalId) ON DELETE CASCADE 
)
GO

	
CREATE INDEX LUM_IDX_ACCESSCONTROLENTRY1 ON lum_AccessControlEntry(accessControlListId)
GO

	
	
CREATE TABLE lum_PBPropertyBag
(	id CHAR(32) NOT NULL,parentPropertyBagId CHAR(32) NULL,
	CONSTRAINT LUM_PK_PBPROPERTYBAG PRIMARY KEY (id),
	CONSTRAINT LUM_FK_PBPROPERTYBAG1 FOREIGN KEY (parentPropertyBagId) REFERENCES lum_PBPropertyBag(id)
)
GO

	
CREATE TABLE lum_PBPropertyDefault
(	id CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_PBPROPERTYDEFAULT PRIMARY KEY (id)
)
GO

	
CREATE TABLE lum_PBProperty
(	id CHAR(32) NOT NULL,propertyBagId CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,isPrivate TINYINT NOT NULL,propertyDefaultId CHAR(32) NULL,inheritMode INT NOT NULL,
	CONSTRAINT LUM_PK_PBPROPERTY PRIMARY KEY (id),
	CONSTRAINT LUM_FK_PBPROPERTY1 FOREIGN KEY (propertyBagId) REFERENCES lum_PBPropertyBag(id),
	CONSTRAINT LUM_FK_PBPROPERTY2 FOREIGN KEY (propertyDefaultId) REFERENCES lum_PBPropertyDefault(id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_PBPROPERTY1 ON lum_PBProperty(propertyBagId,name)
GO

	
CREATE TABLE lum_PBPropertyDefValue
(	propertyDefaultId CHAR(32) NOT NULL,position INT NOT NULL,value NTEXT NULL,
	CONSTRAINT LUM_FK_PBPROPERTYDEFVALUE1 FOREIGN KEY (propertyDefaultId) REFERENCES lum_PBPropertyDefault(id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_PBPROPERTYDEFVALUE1 ON lum_PBPropertyDefValue(propertyDefaultId,position)
GO

	
	
CREATE TABLE lum_Channel
(	channelId NVARCHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,description NVARCHAR(255) NULL,type INT CONSTRAINT LUM_DF_CHANNEL1 DEFAULT 0 NOT NULL,parentId NVARCHAR(32) NULL,hidden INT CONSTRAINT LUM_DF_CHANNEL2 DEFAULT 0 NOT NULL,position INT NULL,isTemplate INT CONSTRAINT LUM_DF_CHANNEL3 DEFAULT 0 NOT NULL,parentTemplateId NVARCHAR(32) NULL,pageTemplateId CHAR(32) NULL,protocol INT CONSTRAINT LUM_DF_CHANNEL4 DEFAULT 0 NOT NULL,inheritStylesheet INT CONSTRAINT LUM_DF_CHANNEL5 DEFAULT 1 NOT NULL,accessControlListId CHAR(32) NOT NULL,centerPages INT CONSTRAINT LUM_DF_CHANNEL6 DEFAULT 2 NOT NULL,layoutPagesType INT CONSTRAINT LUM_DF_CHANNEL13 DEFAULT 0 NOT NULL,localGroups INT CONSTRAINT LUM_DF_CHANNEL7 DEFAULT 0 NOT NULL,localGroupPrefix NVARCHAR(50) NULL,templateLocalGroupPrefix NVARCHAR(255) NULL,cachePages INT CONSTRAINT LUM_DF_CHANNEL8 DEFAULT 3 NOT NULL,friendlyPathType INT CONSTRAINT LUM_DF_CHANNEL9 DEFAULT 0 NOT NULL,friendlyPathUserDefined NVARCHAR(255) NULL,inheritPageTemplate INT CONSTRAINT LUM_DF_CHANNEL10 DEFAULT 1 NOT NULL,inheritMetaTags INT CONSTRAINT LUM_DF_CHANNEL11 DEFAULT 1 NOT NULL,propertyBagId CHAR(32) NOT NULL,pageWebResDataProvType INT CONSTRAINT LUM_DF_CHANNEL12 DEFAULT 0 NOT NULL,pageWebResDataProv NVARCHAR(255) NULL,friendlyURLPattern NVARCHAR(255) NULL,friendlyURLPatternEnabled TINYINT CONSTRAINT LUM_DF_CHANNEL14 DEFAULT 0 NOT NULL,friendlyId NVARCHAR(50) NOT NULL,automaticFriendlyId TINYINT NOT NULL,ignoreOnExportImport TINYINT NOT NULL,
	CONSTRAINT LUM_PK_CHANNEL PRIMARY KEY (channelId),
	CONSTRAINT LUM_FK_CHANNEL FOREIGN KEY (accessControlListId) REFERENCES lum_AccessControlList(accessControlListId),
	CONSTRAINT LUM_FK_CHANNEL2 FOREIGN KEY (parentId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_CHANNEL3 FOREIGN KEY (parentTemplateId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_CHANNEL4 FOREIGN KEY (propertyBagId) REFERENCES lum_PBPropertyBag(id)
)
GO

	
CREATE INDEX LUM_IDX_CHANNEL1 ON lum_Channel(parentId,position,name)
GO

	
CREATE INDEX LUM_IDX_CHANNEL2 ON lum_Channel(parentId,friendlyId)
GO

	
	
ALTER TABLE lum_Principal ADD CONSTRAINT LUM_FK_PRINCIPAL FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId)
GO

	
CREATE TABLE lum_ChannelTemplateLinks
(	linkId CHAR(32) NOT NULL,templateChannelId NVARCHAR(32) NOT NULL,destinationChannelId NVARCHAR(32) NOT NULL,sourceId NVARCHAR(255) NOT NULL,destinationId NVARCHAR(255) NOT NULL,itemType INT NOT NULL,linked INT CONSTRAINT LUM_DF_TEMPLATELINKS DEFAULT 1 NOT NULL,
	CONSTRAINT LUM_PK_CHANNELTMPLLINKS PRIMARY KEY (linkId),
	CONSTRAINT LUM_FK_CHANNELTMPLLINKS1 FOREIGN KEY (templateChannelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_CHANNELTMPLLINKS2 FOREIGN KEY (destinationChannelId) REFERENCES lum_Channel(channelId)
)
GO

	
CREATE INDEX LUM_IDX_CHANNELTMPLLINKS1 ON lum_ChannelTemplateLinks(destinationChannelId,itemType,linked)
GO

	
CREATE UNIQUE INDEX LUM_IDX_CHANNELTMPLLINKS2 ON lum_ChannelTemplateLinks(sourceId,destinationChannelId)
GO

	
CREATE UNIQUE INDEX LUM_IDX_CHANNELTMPLLINKS3 ON lum_ChannelTemplateLinks(destinationId)
GO

	
	
CREATE TABLE lum_Page
(	pageId NVARCHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,channelId NVARCHAR(32) NULL,position INT NULL,layout NTEXT NULL,isTemplate INT CONSTRAINT LUM_DF_PAGE1 DEFAULT 0 NOT NULL,hidden INT CONSTRAINT LUM_DF_PAGE2 DEFAULT 0 NOT NULL,parentTemplateId CHAR(32) NULL,pageTitle NVARCHAR(255) NULL,cachePage INT CONSTRAINT LUM_DF_PAGE3 DEFAULT 3 NOT NULL,inheritStylesheet INT CONSTRAINT LUM_DF_PAGE4 DEFAULT 1 NULL,type INT CONSTRAINT LUM_DF_PAGE5 DEFAULT 0 NOT NULL,accessControlListId CHAR(32) NOT NULL,centerPage INT CONSTRAINT LUM_DF_PAGE6 DEFAULT 2 NOT NULL,layoutType INT CONSTRAINT LUM_DF_PAGE12 DEFAULT 0 NOT NULL,inheritMetaTags INT CONSTRAINT LUM_DF_PAGE7 DEFAULT 1 NOT NULL,overrideSsi INT CONSTRAINT LUM_DF_PAGE9 DEFAULT 0 NOT NULL,ssiType INT CONSTRAINT LUM_DF_PAGE10 DEFAULT 0 NOT NULL,protocol INT CONSTRAINT LUM_DF_PAGE8 DEFAULT 0 NOT NULL,propertyBagId CHAR(32) NOT NULL,pageWebResDataProvType INT CONSTRAINT LUM_DF_PAGE11 DEFAULT 0 NOT NULL,pageWebResDataProv NVARCHAR(255) NULL,friendlyId NVARCHAR(50) NOT NULL,automaticFriendlyId TINYINT NOT NULL,keywords NTEXT NULL,description NTEXT NULL,
	CONSTRAINT LUM_PK_PAGE PRIMARY KEY (pageId),
	CONSTRAINT LUM_FK_PAGE1 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_PAGE2 FOREIGN KEY (accessControlListId) REFERENCES lum_AccessControlList(accessControlListId),
	CONSTRAINT LUM_FK_PAGE3 FOREIGN KEY (propertyBagId) REFERENCES lum_PBPropertyBag(id)
)
GO

	
CREATE INDEX LUM_IDX_PAGE1 ON lum_Page(channelId,position,name,isTemplate)
GO

	
CREATE INDEX LUM_IDX_PAGE2 ON lum_Page(channelId,friendlyId)
GO

	
	
CREATE TABLE lum_Service
(	serviceId NVARCHAR(255) NOT NULL,name NVARCHAR(255) NOT NULL,description NVARCHAR(255) NULL,baseUrl NVARCHAR(255) NULL,stringsUrlPrefix NVARCHAR(255) NULL,image NVARCHAR(255) NULL,definition NTEXT NULL,accessControlListId CHAR(32) NOT NULL,isInstantiable INT CONSTRAINT LUM_DF_SERVICE2 DEFAULT 1 NULL,isSocialProfile TINYINT CONSTRAINT LUM_DF_SERVICE3 DEFAULT 0 NOT NULL,
	CONSTRAINT LUM_PK_Service PRIMARY KEY (serviceId),
	CONSTRAINT LUM_FK_SERVICE FOREIGN KEY (accessControlListId) REFERENCES lum_AccessControlList(accessControlListId)
)
GO

	
CREATE TABLE lum_ServiceInstance
(	serviceInstanceId CHAR(32) NOT NULL,serviceId NVARCHAR(255) NOT NULL,channelId NVARCHAR(32) NULL,name NVARCHAR(255) NULL,description NVARCHAR(255) NULL,inheritAccessControl INT CONSTRAINT LUM_DF_SERVICEINSTANCE1 DEFAULT 1 NOT NULL,isSearchable INT CONSTRAINT LUM_DF_SERVICEINSTANCE2 DEFAULT 1 NOT NULL,accessControlListId CHAR(32) NULL,usesPublicFileStorage INT CONSTRAINT LUM_DF_SERVICEINSTANCE3 DEFAULT 0 NOT NULL,friendlyId NVARCHAR(50) NOT NULL,automaticFriendlyId TINYINT NOT NULL,usesFileTransformation INT CONSTRAINT LUM_DF_SERVICEINSTANCE5 DEFAULT 0 NOT NULL,propertyBagId CHAR(32) NOT NULL,restShortName NVARCHAR(255) NOT NULL,restEnabled INT CONSTRAINT LUM_DF_SERVICEINSTANCE6 DEFAULT 0 NOT NULL,disableInContextEdit INT CONSTRAINT LUM_DF_SERVICEINSTANCE4 DEFAULT 0 NOT NULL,
	CONSTRAINT LUM_PK_SERVICEINSTANCE PRIMARY KEY (serviceInstanceId),
	CONSTRAINT LUM_FK_SERVICEINSTANCE FOREIGN KEY (accessControlListId) REFERENCES lum_AccessControlList(accessControlListId),
	CONSTRAINT LUM_FK_SERVICEINSTANCE2 FOREIGN KEY (serviceId) REFERENCES lum_Service(serviceId),
	CONSTRAINT LUM_FK_SERVICEINSTANCE3 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_SERVICEINSTANCE4 FOREIGN KEY (propertyBagId) REFERENCES lum_PBPropertyBag(id)
)
GO

	
CREATE INDEX LUM_IDX_SERVICEINSTANCE1 ON lum_ServiceInstance(channelId,friendlyId)
GO

	
CREATE UNIQUE INDEX LUM_IDX_SERVICEINSTANCE2 ON lum_ServiceInstance(restShortName)
GO

	
CREATE INDEX LUM_IDX_SERVICEINSTANCE3 ON lum_ServiceInstance(serviceId)
GO

	
	
CREATE TABLE lum_ServiceInstanceDependency
(	id CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,dependentServiceInstanceId CHAR(32) NOT NULL,dependencyType NVARCHAR(50) NOT NULL,
	CONSTRAINT LUM_PK_SERVICEINSTANCEDEP PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SERVICEINSTANCEDEP FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId),
	CONSTRAINT LUM_FK_SERVICEINSTANCEDEP2 FOREIGN KEY (dependentServiceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId),
	CONSTRAINT LUM_UN_SERVICEINSTANCEDEP UNIQUE (serviceInstanceId,dependentServiceInstanceId,dependencyType),
	CONSTRAINT LUM_UN_SERVICEINSTANCEDEP2 UNIQUE (dependentServiceInstanceId,dependencyType,serviceInstanceId)
)
GO

	
CREATE TABLE lum_Interface
(	interfaceId NVARCHAR(255) NOT NULL,name NVARCHAR(255) NOT NULL,title NVARCHAR(255) NULL,description NVARCHAR(255) NULL,baseUrl NVARCHAR(255) NULL,stringsUrlPrefix NVARCHAR(255) NULL,serviceId NVARCHAR(255) NOT NULL,isRuntimeOnly INT CONSTRAINT LUM_DF_INTERFACE1 DEFAULT 0 NOT NULL,isAdministration INT CONSTRAINT LUM_DF_INTERFACE2 DEFAULT 0 NOT NULL,isDetails INT CONSTRAINT LUM_DF_INTERFACE6 DEFAULT 0 NOT NULL,isPrintable INT CONSTRAINT LUM_DF_INTERFACE3 DEFAULT 0 NOT NULL,renderAs INT CONSTRAINT LUM_DF_INTERFACE4 DEFAULT 0 NOT NULL,enableCache INT CONSTRAINT LUM_DF_INTERFACE5 DEFAULT 0 NOT NULL,cacheLevel INT CONSTRAINT LUM_DF_INTERFACE7 DEFAULT 0 NOT NULL,cachePersonalization INT CONSTRAINT LUM_DF_INTERFACE8 DEFAULT 0 NOT NULL,cacheServerSideInclude INT CONSTRAINT LUM_DF_INTERFACE9 DEFAULT 0 NOT NULL,definition NTEXT NULL,defaultInterfaceStyleId NVARCHAR(100) NULL,customDefaultInterfaceStyleId NVARCHAR(100) NULL,previewSupported INT CONSTRAINT LUM_DF_INTERFACE10 DEFAULT 0 NOT NULL,isWidget INT CONSTRAINT LUM_DF_INTERFACE11 DEFAULT 0 NOT NULL,usesSocialProfileInformation TINYINT CONSTRAINT LUM_DF_INTERFACE13 DEFAULT 0 NOT NULL,openerWindowRequired TINYINT CONSTRAINT LUM_DF_INTERFACE14 DEFAULT 1 NOT NULL,inContextEditSupported INT CONSTRAINT LUM_DF_INTERFACE12 DEFAULT 1 NOT NULL,
	CONSTRAINT LUM_PK_INTERFACE PRIMARY KEY (interfaceId),
	CONSTRAINT LUM_FK_INTERFACE FOREIGN KEY (serviceId) REFERENCES lum_Service(serviceId)
)
GO

	
CREATE INDEX LUM_IDX_INTERFACE1 ON lum_Interface(serviceId)
GO

	
	
CREATE TABLE lum_InterfaceStyle
(	interfaceStyleId NVARCHAR(100) NOT NULL,interfaceId NVARCHAR(255) NOT NULL,name NVARCHAR(255) NOT NULL,description NVARCHAR(255) NULL,filePath NVARCHAR(255) NOT NULL,isFromDefinition INT CONSTRAINT LUM_DF_INTERFACESTYLE1 DEFAULT 0 NOT NULL,isWidgetDefault INT CONSTRAINT LUM_DF_INTERFACESTYLE2 DEFAULT 0 NOT NULL,isolationLevel INT CONSTRAINT LUM_DF_INTERFACESTYLE3 DEFAULT 0 NOT NULL,
	CONSTRAINT LUM_PK_INTERFACESTYLE PRIMARY KEY (interfaceStyleId,interfaceId),
	CONSTRAINT LUM_FK_INTERFACESTYLE FOREIGN KEY (interfaceId) REFERENCES lum_Interface(interfaceId)
)
GO

	
CREATE INDEX LUM_IDX_INTERFACESTYLE1 ON lum_InterfaceStyle(interfaceId)
GO

	
CREATE INDEX LUM_IDX_INTERFACESTYLE2 ON lum_InterfaceStyle(isolationLevel)
GO

	
ALTER TABLE lum_Interface ADD CONSTRAINT LUM_FK_INTERFACE2 FOREIGN KEY (defaultInterfaceStyleId,interfaceId) REFERENCES lum_InterfaceStyle(interfaceStyleId,interfaceId)
GO

	
ALTER TABLE lum_Interface ADD CONSTRAINT LUM_FK_INTERFACE3 FOREIGN KEY (customDefaultInterfaceStyleId,interfaceId) REFERENCES lum_InterfaceStyle(interfaceStyleId,interfaceId)
GO

	
	
CREATE TABLE lum_InterfaceInstance
(	interfaceInstanceId CHAR(32) NOT NULL,interfaceId NVARCHAR(255) NOT NULL,serviceInstanceId CHAR(32) NULL,pageId NVARCHAR(32) NULL,parentInterfaceId CHAR(32) NULL,isCreatedRunTime INT CONSTRAINT LUM_DF_INTERFACEINSTANCE1 DEFAULT 0 NOT NULL,createRuntimeOnly INT CONSTRAINT LUM_DF_INTERFACEINSTANCE2 DEFAULT 0 NOT NULL,interfaceStyleId NVARCHAR(100) NULL,title NVARCHAR(300) NULL,width NVARCHAR(10) NULL,height NVARCHAR(10) NULL,paddingLeft NVARCHAR(10) NULL,paddingRight NVARCHAR(10) NULL,paddingTop NVARCHAR(10) NULL,paddingBottom NVARCHAR(10) NULL,colspan INT NULL,rowspan INT NULL,isPrintable INT CONSTRAINT LUM_DF_INTERFACEINSTANCE3 DEFAULT 2 NOT NULL,renderAs INT CONSTRAINT LUM_DF_INTERFACEINSTANCE4 DEFAULT 2 NOT NULL,enableCache INT CONSTRAINT LUM_DF_INTERFACEINSTANCE5 DEFAULT 2 NOT NULL,cacheLevel INT CONSTRAINT LUM_DF_INTERFACEINSTANCE7 DEFAULT 2 NOT NULL,cachePersonalization INT CONSTRAINT LUM_DF_INTERFACEINSTANCE8 DEFAULT 3 NOT NULL,cacheServerSideInclude INT CONSTRAINT LUM_DF_INTERFACEINSTANCE9 DEFAULT 2 NOT NULL,holderPriority INT NULL,showTitleBar INT CONSTRAINT LUM_DF_INTERFACEINSTANCE10 DEFAULT 0 NOT NULL,displayName NVARCHAR(100) NULL,owner NVARCHAR(255) NULL,disableInContextEdit INT CONSTRAINT LUM_DF_INTERFACEINSTANCE11 DEFAULT 0 NOT NULL,
	CONSTRAINT LUM_PK_INTERFACEINSTANCE PRIMARY KEY (interfaceInstanceId),
	CONSTRAINT LUM_FK_INTERFACEINSTANCE FOREIGN KEY (interfaceId) REFERENCES lum_Interface(interfaceId),
	CONSTRAINT LUM_FK_INTERFACEINSTANCE2 FOREIGN KEY (pageId) REFERENCES lum_Page(pageId),
	CONSTRAINT LUM_FK_INTERFACEINSTANCE3 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId),
	CONSTRAINT LUM_FK_INTERFACEINSTANCE4 FOREIGN KEY (interfaceStyleId,interfaceId) REFERENCES lum_InterfaceStyle(interfaceStyleId,interfaceId)
)
GO

	
CREATE INDEX LUM_IDX_INTERFACEINSTANCE1 ON lum_InterfaceInstance(pageId,isCreatedRunTime)
GO

	
CREATE INDEX LUM_IDX_INTERFACEINSTANCE2 ON lum_InterfaceInstance(interfaceId,interfaceStyleId)
GO

	
CREATE INDEX LUM_IDX_INTERFACEINSTANCE3 ON lum_InterfaceInstance(interfaceId,serviceInstanceId,isCreatedRunTime)
GO

	
CREATE INDEX LUM_IDX_INTERFACEINSTANCE4 ON lum_InterfaceInstance(serviceInstanceId,isCreatedRunTime,interfaceId,pageId)
GO

	
CREATE VIEW lum_vwInterfaceInstanceStyle AS
(
	SELECT a.interfaceInstanceId, b.interfaceId, ISNULL(a.interfaceStyleId, b.defaultInterfaceStyleId) as interfaceStyleId FROM lum_InterfaceInstance a, lum_Interface b WHERE a.interfaceId = b.interfaceId
)
GO


	
CREATE TABLE lum_ISAllowedConsumers
(	id CHAR(32) NOT NULL,interfaceStyleId NVARCHAR(100) NOT NULL,interfaceId NVARCHAR(255) NOT NULL,serviceInstanceId CHAR(32) NULL,interfaceInstanceId CHAR(32) NULL,
	CONSTRAINT LUM_PK_ISALLOWEDCONSUMERS PRIMARY KEY (id),
	CONSTRAINT LUM_FK_ISALLOWEDCONSUMERS1 FOREIGN KEY (interfaceStyleId,interfaceId) REFERENCES lum_InterfaceStyle(interfaceStyleId,interfaceId),
	CONSTRAINT LUM_FK_ISALLOWEDCONSUMERS2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId),
	CONSTRAINT LUM_FK_ISALLOWEDCONSUMERS3 FOREIGN KEY (interfaceInstanceId) REFERENCES lum_InterfaceInstance(interfaceInstanceId)
)
GO

	
CREATE INDEX LUM_IX_ISALLOWEDCONSUMERS1 ON lum_ISAllowedConsumers(interfaceStyleId,interfaceId,serviceInstanceId)
GO

	
CREATE INDEX LUM_IX_ISALLOWEDCONSUMERS2 ON lum_ISAllowedConsumers(interfaceInstanceId)
GO

	
CREATE INDEX LUM_IX_ISALLOWEDCONSUMERS3 ON lum_ISAllowedConsumers(serviceInstanceId)
GO

	
	
CREATE TABLE lum_User
(	userId CHAR(32) NOT NULL,login NVARCHAR(100) NOT NULL,password NVARCHAR(255) NULL,firstName NVARCHAR(100) NOT NULL,middleName NVARCHAR(100) NULL,lastName NVARCHAR(100) NULL,email NVARCHAR(255) NULL,lastLogin DATETIME NULL,createdDate DATETIME CONSTRAINT LUM_DF_USER1 DEFAULT  GETDATE()  NOT NULL,disabled INT CONSTRAINT LUM_DF_USER2 DEFAULT 0 NOT NULL,channelId NVARCHAR(32) NULL,type INT CONSTRAINT LUM_DF_USER3 DEFAULT 0 NOT NULL,multiSession INT CONSTRAINT LUM_DF_USER4 DEFAULT 0 NOT NULL,origin NVARCHAR(255) NULL,portalLogin INT CONSTRAINT LUM_DF_USER5 DEFAULT 1 NULL,attributes NTEXT NULL,
	CONSTRAINT LUM_PK_USER PRIMARY KEY (userId),
	CONSTRAINT LUM_FK_USER FOREIGN KEY (userId) REFERENCES lum_Principal(principalId),
	CONSTRAINT LUM_FK_USER2 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_UN_USER_LOGIN UNIQUE (login)
)
GO

	
	

	
CREATE VIEW lum_vwUser AS
(
	SELECT userId, firstName + isnull(' ' + middleName, '') +  isnull(' ' + lastName, '') AS fullName, login, lastLogin, createdDate, channelId FROM lum_User
)
GO

	
	
CREATE TABLE lum_UserAlternativeLogin
(	id CHAR(32) NOT NULL,userId CHAR(32) NOT NULL,login NVARCHAR(255) NOT NULL,
	CONSTRAINT LUM_PK_USERALTERNATIVELOGIN PRIMARY KEY (id),
	CONSTRAINT LUM_FK_USERALTERNATIVELOGIN FOREIGN KEY (userId) REFERENCES lum_User(userId) ON DELETE CASCADE ,
	CONSTRAINT LUM_UN_USERALTLOG_LOGIN UNIQUE (login)
)
GO

	
	
CREATE TABLE lum_GroupType
(	id NVARCHAR(100) NOT NULL,name NVARCHAR(50) NOT NULL,description NVARCHAR(255) NULL,groupMembershipProvider NVARCHAR(100) NOT NULL,
	CONSTRAINT LUM_PK_GROUPTYPE PRIMARY KEY (id)
)
GO

	
	
CREATE TABLE lum_Group
(	groupId CHAR(32) NOT NULL,alias NVARCHAR(255) NOT NULL,name NVARCHAR(255) NOT NULL,description NVARCHAR(255) NULL,type INT CONSTRAINT LUM_DF_GROUP1 DEFAULT 0 NOT NULL,channelId NVARCHAR(32) NULL,accessControlListId CHAR(32) NOT NULL,origin NVARCHAR(255) NULL,groupTypeId NVARCHAR(100) NOT NULL,
	CONSTRAINT LUM_PK_GROUP PRIMARY KEY (groupId),
	CONSTRAINT LUM_FK_GROUP FOREIGN KEY (groupId) REFERENCES lum_Principal(principalId),
	CONSTRAINT LUM_FK_GROUP2 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_GROUP3 FOREIGN KEY (accessControlListId) REFERENCES lum_AccessControlList(accessControlListId),
	CONSTRAINT LUM_FK_GROUP4 FOREIGN KEY (groupTypeId) REFERENCES lum_GroupType(id),
	CONSTRAINT LUM_UN_GROUP_ALIAS UNIQUE (alias)
)
GO

	
CREATE INDEX LUM_IDX_GROUP1 ON lum_Group(channelId)
GO

	
CREATE INDEX LUM_IDX_GROUP2 ON lum_Group(groupTypeId)
GO

	
	
CREATE VIEW lum_vwGlobalGroups AS
(
	select * from lum_Group where channelId is null and type=0
)
GO

	
	
CREATE TABLE lum_GroupMember
(	groupId CHAR(32) NOT NULL,principalId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_GROUPMEMBER PRIMARY KEY (groupId,principalId),
	CONSTRAINT LUM_FK_GROUPMEMBERS FOREIGN KEY (groupId) REFERENCES lum_Group(groupId),
	CONSTRAINT LUM_FK_GROUPMEMBERS2 FOREIGN KEY (principalId) REFERENCES lum_Principal(principalId)
)
GO

	
CREATE INDEX LUM_IDX_GROUPMEMBER ON lum_GroupMember(principalId,groupId)
GO

	
	
CREATE TABLE lum_GroupDbVwGrpTypeCfg
(	id CHAR(32) NOT NULL,connectionId NVARCHAR(50) NULL,viewName NVARCHAR(50) NOT NULL,principalShortIdField NVARCHAR(50) NOT NULL,cacheMaxAgeSeconds INT NOT NULL,groupTypeId NVARCHAR(100) NOT NULL,
	CONSTRAINT LUM_PK_GROUPDBVWGRPTYPECFG PRIMARY KEY (id),
	CONSTRAINT LUM_FK_GROUPDBVWGRPTYPECFG1 FOREIGN KEY (groupTypeId) REFERENCES lum_GroupType(id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_GROUPDBVWGRPTYPECFG1 ON lum_GroupDbVwGrpTypeCfg(groupTypeId)
GO

	
	
CREATE TABLE lum_GroupDbVwField
(	id CHAR(32) NOT NULL,columnName NVARCHAR(50) NOT NULL,dataType NVARCHAR(50) NOT NULL,groupTypeConfigId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_GROUPDBVWFIELD PRIMARY KEY (id),
	CONSTRAINT LUM_FK_GROUPDBVWFIELD1 FOREIGN KEY (groupTypeConfigId) REFERENCES lum_GroupDbVwGrpTypeCfg(id) ON DELETE CASCADE 
)
GO

	
CREATE INDEX LUM_IX_GROUPDBVWFIELD1 ON lum_GroupDbVwField(groupTypeConfigId)
GO

	
	
CREATE TABLE lum_GroupDbVwGrpCfg
(	id CHAR(32) NOT NULL,groupId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_GROUPDBVWGRPCFG PRIMARY KEY (id),
	CONSTRAINT LUM_FK_GROUPDBVWGRPCFG1 FOREIGN KEY (groupId) REFERENCES lum_Group(groupId)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_GROUPDBVWGRPCFG1 ON lum_GroupDbVwGrpCfg(groupId)
GO


	
CREATE TABLE lum_GroupDbVwFormulaEntry
(	id CHAR(32) NOT NULL,leftParentheses NVARCHAR(10) NULL,fieldId CHAR(32) NOT NULL,operator NVARCHAR(11) NOT NULL,value NVARCHAR(255) NULL,rightParentheses NVARCHAR(10) NULL,logicalOperator NVARCHAR(3) NOT NULL,position INT NOT NULL,groupConfigId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_GROUPDBVWFORMULAENTRY PRIMARY KEY (id),
	CONSTRAINT LUM_FK_GROUPDBVWFORMULAENTRY1 FOREIGN KEY (groupConfigId) REFERENCES lum_GroupDbVwGrpCfg(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_GROUPDBVWFORMULAENTRY2 FOREIGN KEY (fieldId) REFERENCES lum_GroupDbVwField(id)
)
GO

	
CREATE INDEX LUM_IX_GROUPDBVWFORMULAENTRY1 ON lum_GroupDbVwFormulaEntry(groupConfigId,position)
GO


	
CREATE TABLE lum_UserSession
(	userSessionId CHAR(32) NOT NULL,userId CHAR(32) NOT NULL,lastAccessDate DATETIME NOT NULL,
	CONSTRAINT LUM_PK_USERSESSION PRIMARY KEY (userSessionId),
	CONSTRAINT LUM_FK_AUTHENTICATEDUSERS FOREIGN KEY (userId) REFERENCES lum_User(userId)
)
GO

	
	
CREATE INDEX LUM_IDX_USERSESSION1 ON lum_UserSession(userId)
GO

	
CREATE INDEX LUM_IDX_USERSESSION2 ON lum_UserSession(lastAccessDate)
GO

	
CREATE TABLE lum_ServiceType
(	serviceTypeId NVARCHAR(255) NOT NULL,serviceType NVARCHAR(255) NOT NULL,serviceClass NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_SERVICETYPE PRIMARY KEY (serviceTypeId)
)
GO

	
CREATE TABLE lum_ServiceInterfaceType
(	interfaceTypeId NVARCHAR(255) NOT NULL,interfaceType NVARCHAR(255) NOT NULL,interfaceClass NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_SERVICEINTERFACETYPE PRIMARY KEY (interfaceTypeId)
)
GO

	
CREATE TABLE lum_Css
(	cssId CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,description NVARCHAR(255) NULL,filePath NVARCHAR(255) NOT NULL,
	CONSTRAINT LUM_PK_CSS PRIMARY KEY (cssId),
	CONSTRAINT LUM_UN_CSS UNIQUE (filePath)
)
GO

	
	
CREATE VIEW lum_vwCss AS
(
	 SELECT a.cssId, a.name + ' (' + a.filePath + ')' as name, a.description, a.filePath FROM lum_Css a
)
GO


	
CREATE TABLE lum_ChannelCss
(	cssId CHAR(32) NOT NULL,channelId NVARCHAR(32) NOT NULL,position INT NULL,
	CONSTRAINT LUM_PK_CHANNELCSS PRIMARY KEY (cssId,channelId),
	CONSTRAINT LUM_FK_CHANNELSTYLESHEETS FOREIGN KEY (cssId) REFERENCES lum_Css(cssId),
	CONSTRAINT LUM_FK_CHANNELSTYLESHEETS2 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId)
)
GO

	
CREATE INDEX LUM_IDX_CHANNELSTYLESHEETS1 ON lum_ChannelCss(channelId,position)
GO

	
	
CREATE VIEW lum_vwChannelCss AS
(
	SELECT b.cssId, a.channelId, a.position, b.name + ' (' + b.filePath + ')' as name, b.description, b.filePath FROM lum_ChannelCss a, lum_Css b WHERE a.cssId = b.cssId
)
GO


	
CREATE TABLE lum_PageCss
(	cssId CHAR(32) NOT NULL,pageId NVARCHAR(32) NOT NULL,position INT NULL,
	CONSTRAINT LUM_PK_PAGECSS PRIMARY KEY (cssId,pageId),
	CONSTRAINT LUM_FK_PAGESTYLESHEETS FOREIGN KEY (cssId) REFERENCES lum_Css(cssId),
	CONSTRAINT LUM_FK_PAGESTYLESHEETS2 FOREIGN KEY (pageId) REFERENCES lum_Page(pageId)
)
GO

	
CREATE INDEX LUM_IDX_PAGESTYLESHEETS1 ON lum_PageCss(pageId,position)
GO

	
	
CREATE VIEW lum_vwPageCss AS
(
	SELECT b.cssId, a.pageId, a.position, b.name + ' (' + b.filePath + ')' as name, b.description, b.filePath FROM lum_PageCss a, lum_Css b WHERE a.cssId = b.cssId
)
GO


	
CREATE TABLE lum_MetaTag
(	metaTagId CHAR(32) NOT NULL,parentChannelId NVARCHAR(32) NULL,parentPageId NVARCHAR(32) NULL,position INT NOT NULL,content NVARCHAR(1000) NOT NULL,
	CONSTRAINT LUM_PK_METATAG PRIMARY KEY (metaTagId),
	CONSTRAINT LUM_FK_METATAG FOREIGN KEY (parentChannelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_METATAG2 FOREIGN KEY (parentPageId) REFERENCES lum_Page(pageId)
)
GO

	
CREATE INDEX LUM_IX_METATAG1 ON lum_MetaTag(parentChannelId,position)
GO

	
CREATE INDEX LUM_IX_METATAG2 ON lum_MetaTag(parentPageId,position)
GO

	
	
CREATE TABLE lum_Clock
(	clockId NVARCHAR(255) NOT NULL,clockClass NVARCHAR(255) NOT NULL,serviceId NVARCHAR(255) NULL,startTime DATETIME NOT NULL,stopTime DATETIME NULL,tickIntervalType INT NOT NULL,tickInterval INT NOT NULL,runOnlyOnServer NVARCHAR(100) NULL,lastTick DATETIME NULL,enabled INT NOT NULL,nextScheduleDate DATETIME NOT NULL,running INT NOT NULL,maxRunTime INT NOT NULL,lastTickStart DATETIME NULL,
	CONSTRAINT LUM_PK_PORTALCLOCK PRIMARY KEY (clockId),
	CONSTRAINT LUM_FK_PORTALCLOCK1 FOREIGN KEY (serviceId) REFERENCES lum_Service(serviceId)
)
GO

	
	
CREATE INDEX LUM_IDX_PORTALCLOCK ON lum_Clock(enabled,running,nextScheduleDate,runOnlyOnServer)
GO

	
	
CREATE TABLE lum_CustomString
(	customStringId CHAR(32) NOT NULL,stringId NVARCHAR(100) COLLATE Latin1_General_BIN NOT NULL,string NVARCHAR(1000) NOT NULL,resourcePath NVARCHAR(255) NOT NULL,localeCode NVARCHAR(50) NOT NULL,status INT NOT NULL,
	CONSTRAINT LUM_PK_CUSTOMSTRING PRIMARY KEY (customStringId),
	CONSTRAINT LUM_UN_CUSTOMSTRING UNIQUE (stringId,resourcePath,localeCode)
)
GO

	
CREATE TABLE lum_LRResource
(	id NVARCHAR(255) NOT NULL,
	CONSTRAINT LUM_PK_LRRESOURCE PRIMARY KEY (id)
)
GO

	
CREATE TABLE lum_LRResourceLock
(	id CHAR(32) NOT NULL,resourceId NVARCHAR(255) NOT NULL,owner CHAR(32) NOT NULL,deadline DATETIME NOT NULL,type NVARCHAR(5) NOT NULL,
	CONSTRAINT LUM_PK_LRRESOURCELOCK PRIMARY KEY (id)
)
GO

	
CREATE INDEX LUM_IX_LRRESOURCELOCK1 ON lum_LRResourceLock(resourceId,owner)
GO

	
CREATE INDEX LUM_IX_LRRESOURCELOCK2 ON lum_LRResourceLock(deadline)
GO

	
CREATE INDEX LUM_IX_LRRESOURCELOCK3 ON lum_LRResourceLock(resourceId,type)
GO

	
CREATE TABLE lum_Website
(	id CHAR(32) NOT NULL,name NVARCHAR(50) NOT NULL,webRootPath NVARCHAR(255) NULL,rootChannelId NVARCHAR(32) NULL,defaultWebsite TINYINT NOT NULL,forceMainURLsNavigation TINYINT NOT NULL,priority INT NOT NULL,
	CONSTRAINT LUM_PK_WEBSITE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WEBSITE1 FOREIGN KEY (rootChannelId) REFERENCES lum_Channel(channelId)
)
GO

	
CREATE INDEX LUM_IX_WEBSITE1 ON lum_Website(rootChannelId)
GO

	
CREATE UNIQUE INDEX LUM_IX_WEBSITE2 ON lum_Website(name)
GO

	
CREATE INDEX LUM_IX_WEBSITE3 ON lum_Website(priority)
GO

	
CREATE TABLE lum_WebsiteBaseURL
(	id CHAR(32) NOT NULL,domain NVARCHAR(120) NOT NULL,port INT NOT NULL,path NVARCHAR(100) NULL,secure TINYINT NULL,type NVARCHAR(1) NOT NULL,websiteId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_WEBSITEBASEURL PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WEBSITEBASEURL1 FOREIGN KEY (websiteId) REFERENCES lum_Website(id) ON DELETE CASCADE 
)
GO

	
CREATE UNIQUE INDEX LUM_IX_WEBSITEBASEURL1 ON lum_WebsiteBaseURL(domain,port,path)
GO

	
CREATE INDEX LUM_IX_WEBSITEBASEURL2 ON lum_WebsiteBaseURL(websiteId,type,secure)
GO
	
	
CREATE TABLE lum_PageLink
(	pageLinkId CHAR(32) NOT NULL,pageId NVARCHAR(32) NOT NULL,type INT CONSTRAINT LUM_DF_PAGELINK1 DEFAULT 0 NOT NULL,channelId NVARCHAR(32) NULL,capabilities NTEXT NULL,priority INT NOT NULL,name NVARCHAR(100) NOT NULL,websiteId CHAR(32) NOT NULL,usesAllWebsiteBaseURLs TINYINT NOT NULL,
	CONSTRAINT LUM_PK_PAGELINK PRIMARY KEY (pageLinkId),
	CONSTRAINT LUM_FK_PAGELINK FOREIGN KEY (pageId) REFERENCES lum_Page(pageId),
	CONSTRAINT LUM_FK_PAGELINK2 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_PAGELINK3 FOREIGN KEY (websiteId) REFERENCES lum_Website(id)
)
GO

	
CREATE INDEX LUM_IX_PAGELINK1 ON lum_PageLink(websiteId,priority)
GO


	
CREATE TABLE lum_PageLinkWebsiteBaseURL
(	pageLinkId CHAR(32) NOT NULL,websiteBaseURLId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_PAGELINKWEBSITEBASEURL PRIMARY KEY (pageLinkId,websiteBaseURLId),
	CONSTRAINT LUM_FK_PAGELINKWEBSITEBASEURL1 FOREIGN KEY (pageLinkId) REFERENCES lum_PageLink(pageLinkId),
	CONSTRAINT LUM_FK_PAGELINKWEBSITEBASEURL2 FOREIGN KEY (websiteBaseURLId) REFERENCES lum_WebsiteBaseURL(id)
)
GO

	
CREATE INDEX LUM_IX_PAGELINKWEBSITEBASEURL1 ON lum_PageLinkWebsiteBaseURL(websiteBaseURLId)
GO

	
	
CREATE TABLE lum_ServiceMenuType
(	menuTypeId NVARCHAR(255) NOT NULL,name NVARCHAR(255) NOT NULL,definition NTEXT NULL,
	CONSTRAINT LUM_PK_SERVICEMENUTYPE PRIMARY KEY (menuTypeId)
)
GO

	
CREATE TABLE lum_BuildInformation
(	buildId CHAR(32) NOT NULL,majorVersion INT NOT NULL,minorVersion INT NOT NULL,releaseVersion INT NOT NULL,buildNumber NVARCHAR(6) NOT NULL,buildSequence INT NOT NULL,steps INT NOT NULL,status INT NOT NULL,userResponse INT NOT NULL,upgradeDate DATETIME CONSTRAINT LUM_DF_BUILDINFORMATION DEFAULT  GETDATE()  NOT NULL,area NVARCHAR(50) NULL,userId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_BUILDINFORMATION PRIMARY KEY (buildId)
)
GO


	
	
	
CREATE TABLE lum_PostUpgradeStatus
(	id CHAR(32) NOT NULL,lastExecutedNumber INT NOT NULL,upgradeExecuted TINYINT CONSTRAINT LUM_DF_POSTUPGRADESTATUS1 DEFAULT 0 NOT NULL,
	CONSTRAINT LUM_PK_POSTUPGRADESTATUS PRIMARY KEY (id)
)
GO

	
	
CREATE TABLE lum_IntfInstCustomProperty
(	customPropertyId CHAR(32) NOT NULL,interfaceInstanceId CHAR(32) NOT NULL,name NVARCHAR(100) NOT NULL,value NTEXT NOT NULL,
	CONSTRAINT LUM_PK_INTFINSTCUSTOMPROPERTY PRIMARY KEY (customPropertyId),
	CONSTRAINT LUM_UN_INTFINSTCUSTOMPROPERTY UNIQUE (interfaceInstanceId,name),
	CONSTRAINT LUM_FK_INTFINSTCUSTOMPROPERTY FOREIGN KEY (interfaceInstanceId) REFERENCES lum_InterfaceInstance(interfaceInstanceId)
)
GO

	
CREATE TABLE lum_SvcInstCustomProperty
(	customPropertyId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,name NVARCHAR(100) NOT NULL,value NTEXT NOT NULL,
	CONSTRAINT LUM_PK_SVCINSTCUSTOMPROPERTY PRIMARY KEY (customPropertyId),
	CONSTRAINT LUM_UN_SVCINSTCUSTOMPROPERTY UNIQUE (serviceInstanceId,name),
	CONSTRAINT LUM_FK_SVCINSTCUSTOMPROPERTY FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
)
GO

	
CREATE TABLE lum_InterfaceMenuItem
(	menuItemId NVARCHAR(255) NOT NULL,type NVARCHAR(200) NOT NULL,className NVARCHAR(200) NOT NULL,definition NTEXT NULL,
	CONSTRAINT LUM_PK_INTERFACEMENUITEM PRIMARY KEY (menuItemId)
)
GO

	
CREATE TABLE lum_InterfaceMenuGroup
(	menuGroupId NVARCHAR(255) NOT NULL,type NVARCHAR(200) NOT NULL,definition NTEXT NOT NULL,
	CONSTRAINT LUM_PK_INTERFACEMENUGROUP PRIMARY KEY (menuGroupId)
)
GO


	
CREATE TABLE lum_Locale
(	localeId CHAR(32) NOT NULL,locale VARCHAR(10) NOT NULL,name NVARCHAR(255) NOT NULL,
	CONSTRAINT LUM_PK_LOCALE PRIMARY KEY (localeId),
	CONSTRAINT LUM_UN_LOCALE1 UNIQUE (locale)
)
GO

	
	
CREATE TABLE lum_WebResource
(	id CHAR(32) NOT NULL,pageId NVARCHAR(32) NULL,channelId NVARCHAR(32) NULL,locale VARCHAR(10) NOT NULL,dynamicPath VARCHAR(400) COLLATE Latin1_General_BIN NOT NULL,friendlyPath VARCHAR(400) COLLATE Latin1_General_BIN NULL,createdDateTime DATETIME NOT NULL,type NVARCHAR(1) NOT NULL,cachedPageId NVARCHAR(255) NULL,websiteId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_WEBRESOURCE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WEBRESOURCE1 FOREIGN KEY (pageId) REFERENCES lum_Page(pageId),
	CONSTRAINT LUM_FK_WEBRESOURCE2 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_WEBRESOURCE3 FOREIGN KEY (locale) REFERENCES lum_Locale(locale),
	CONSTRAINT LUM_FK_WEBRESOURCE4 FOREIGN KEY (websiteId) REFERENCES lum_Website(id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_WEBRESOURCE1 ON lum_WebResource(dynamicPath,locale)
GO

	
CREATE INDEX LUM_IX_WEBRESOURCE2 ON lum_WebResource(friendlyPath)
GO

	
CREATE INDEX LUM_IX_WEBRESOURCE3 ON lum_WebResource(pageId,locale)
GO

	
CREATE INDEX LUM_IX_WEBRESOURCE4 ON lum_WebResource(channelId,locale)
GO

	
CREATE INDEX LUM_IX_WEBRESOURCE5 ON lum_WebResource(cachedPageId)
GO

	
CREATE INDEX LUM_IX_WEBRESOURCE6 ON lum_WebResource(websiteId)
GO

	
	
CREATE TABLE lum_WebResPageParam
(	id CHAR(32) NOT NULL,webResourceId CHAR(32) NOT NULL,name NVARCHAR(100) NOT NULL,
	CONSTRAINT LUM_PK_WEBRESPAGEPARAM PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WEBRESPAGEPARAM1 FOREIGN KEY (webResourceId) REFERENCES lum_WebResource(id) ON DELETE CASCADE 
)
GO

	
CREATE UNIQUE INDEX LUM_IX_WEBRESPAGEPARAM1 ON lum_WebResPageParam(webResourceId,name)
GO

	
	
CREATE TABLE lum_WebResPageParamValue
(	parameterId CHAR(32) NOT NULL,position INT NOT NULL,parameterValue NVARCHAR(300) NOT NULL,
	CONSTRAINT LUM_PK_WEBRESPAGEPARAMVALUE PRIMARY KEY (parameterId,position),
	CONSTRAINT LUM_FK_WEBRESPAGEPARAMVALUE1 FOREIGN KEY (parameterId) REFERENCES lum_WebResPageParam(id) ON DELETE CASCADE 
)
GO

	
	
CREATE INDEX LUM_IX_WEBRESPAGEPARAMVALUE1 ON lum_WebResPageParamValue(parameterValue,parameterId)
GO

	
	
CREATE TABLE lum_CachedPage
(	cachedPageId NVARCHAR(255) NOT NULL,webResourceId CHAR(32) NOT NULL,createdDateTime DATETIME NOT NULL,cachedDate DATETIME NULL,expiredDate DATETIME NULL,status INT CONSTRAINT LUM_DF_CACHEDPAGE2 DEFAULT 0 NOT NULL,priority INT CONSTRAINT LUM_DF_CACHEDPAGE4 DEFAULT 0 NOT NULL,initialPriority INT CONSTRAINT LUM_DF_CACHEDPAGE5 DEFAULT 0 NOT NULL,resourcePriority INT NOT NULL,numErrors INT CONSTRAINT LUM_DF_CACHEDPAGE6 DEFAULT 0 NOT NULL,filePath VARCHAR(400) COLLATE Latin1_General_BIN NOT NULL,serverId NVARCHAR(100) NULL,queueId NVARCHAR(50) NOT NULL,generationStartDate DATETIME NULL,nextGenerationDate DATETIME NULL,
	CONSTRAINT LUM_PK_CACHEDPAGE PRIMARY KEY (cachedPageId),
	CONSTRAINT LUM_FK_CACHEDPAGE1 FOREIGN KEY (webResourceId) REFERENCES lum_WebResource(id) ON DELETE CASCADE 
)
GO

	
CREATE UNIQUE INDEX LUM_IDX_CACHEDPAGE1 ON lum_CachedPage(filePath,webResourceId)
GO

	
CREATE INDEX LUM_IDX_CACHEDPAGE2 ON lum_CachedPage(status,priority desc,resourcePriority desc,queueId,initialPriority,nextGenerationDate)
GO

	
CREATE UNIQUE INDEX LUM_IDX_CACHEDPAGE3 ON lum_CachedPage(webResourceId)
GO

	
CREATE INDEX LUM_IDX_CACHEDPAGE5 ON lum_CachedPage(queueId,status,priority desc,resourcePriority desc,initialPriority,nextGenerationDate)
GO

	
-- Index for optimizing PageCacheManager.resetExpiredGeneratingPages.
CREATE INDEX LUM_IDX_CACHEDPAGE6 ON lum_CachedPage(status,generationStartDate)
GO

		
	
	
	
	
CREATE TABLE lum_PageCacheGenerator
(	id CHAR(32) NOT NULL,state INT NOT NULL,
	CONSTRAINT LUM_PK_PAGECACHEGENERATOR PRIMARY KEY (id)
)
GO


	
CREATE TABLE lum_PCQueue
(	id CHAR(32) NOT NULL,queueId NVARCHAR(50) NOT NULL,onDemandOnly TINYINT NOT NULL,deleteOutdated TINYINT NOT NULL,shadowCacheEnabled TINYINT NOT NULL,isolated TINYINT NOT NULL,maxErrorCount INT NOT NULL,errorPriorityDecrement INT NOT NULL,errorGenerationDelay INT NOT NULL,autoBulkExpiration TINYINT NOT NULL,
	CONSTRAINT LUM_PK_PCQUEUE PRIMARY KEY (id)
)
GO

	
CREATE INDEX LUM_IX_PCQUEUE1 ON lum_PCQueue(isolated,queueId)
GO

	
CREATE UNIQUE INDEX LUM_IX_PCQUEUE2 ON lum_PCQueue(queueId)
GO

	
	
CREATE TABLE lum_PCGeneratorProfile
(	id CHAR(32) NOT NULL,displayName NVARCHAR(50) NOT NULL,delayBetweenGenerations INT NOT NULL,delayAfterStabilization INT NOT NULL,numberOfThreads INT NOT NULL,numberOfThreadsIU INT NOT NULL,threadPriority INT NOT NULL,
	CONSTRAINT LUM_PK_PCGENERATORPROFILE PRIMARY KEY (id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_PCGENERATORPROFILE1 ON lum_PCGeneratorProfile(displayName)
GO

	
	
CREATE TABLE lum_PCGeneratorConfig
(	id CHAR(32) NOT NULL,displayName NVARCHAR(50) NOT NULL,generateOtherQueues TINYINT NOT NULL,generatorProfileId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_PCGENERATORCONFIG PRIMARY KEY (id),
	CONSTRAINT LUM_FK_PCGENERATORCONFIG1 FOREIGN KEY (generatorProfileId) REFERENCES lum_PCGeneratorProfile(id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_PCGENERATORCONFIG1 ON lum_PCGeneratorConfig(displayName)
GO

	
	
CREATE TABLE lum_PCGCQueue
(	id CHAR(32) NOT NULL,generatorConfigId CHAR(32) NOT NULL,queueId NVARCHAR(50) NOT NULL,
	CONSTRAINT LUM_PK_PCGCQUEUE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_PCGCQUEUE1 FOREIGN KEY (generatorConfigId) REFERENCES lum_PCGeneratorConfig(id) ON DELETE CASCADE 
)
GO

	
CREATE UNIQUE INDEX LUM_IX_PCGCQUEUE1 ON lum_PCGCQueue(generatorConfigId,queueId)
GO

	
	
CREATE TABLE lum_PCGCServer
(	id CHAR(32) NOT NULL,generatorConfigId CHAR(32) NOT NULL,serverId NVARCHAR(50) NOT NULL,
	CONSTRAINT LUM_PK_PCGCSERVER PRIMARY KEY (id),
	CONSTRAINT LUM_FK_PCGCSERVER1 FOREIGN KEY (generatorConfigId) REFERENCES lum_PCGeneratorConfig(id) ON DELETE CASCADE 
)
GO

	
CREATE UNIQUE INDEX LUM_IX_PCGCSERVER1 ON lum_PCGCServer(generatorConfigId,serverId)
GO

	
	
CREATE TABLE lum_XslCache
(	fileName NVARCHAR(255) NOT NULL,enabled INT NOT NULL,cached INT CONSTRAINT LUM_DF_XSLCACHE DEFAULT 1 NOT NULL,
	CONSTRAINT LUM_PK_XSLCACHE PRIMARY KEY (fileName)
)
GO

	
CREATE TABLE lum_File
(	fileId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,fullPath NVARCHAR(500) NOT NULL,contentType NVARCHAR(100) NOT NULL,fileSize INT NOT NULL,type INT NOT NULL,height INT NULL,width INT NULL,duration BIGINT NULL,format NVARCHAR(255) NULL,macroType NVARCHAR(10) NOT NULL,colorDepth INT NULL,videoFrameRate DOUBLE PRECISION NULL,audioBitRate DOUBLE PRECISION NULL,audioSamplingRate INT NULL,audioChannels INT NULL,
	CONSTRAINT LUM_PK_FILE PRIMARY KEY (fileId),
	CONSTRAINT LUM_FK_FILE FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
)
GO

	
CREATE TABLE lum_FileMimeType
(	id CHAR(32) NOT NULL,mimeType NVARCHAR(100) NOT NULL,icon NVARCHAR(255) NOT NULL,
	CONSTRAINT LUM_PK_FILEMIMETYPE PRIMARY KEY (id),
	CONSTRAINT LUM_UN_FILEMIMETYPE UNIQUE (mimeType)
)
GO

	
CREATE TABLE lum_Files
(	filesId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_FILES PRIMARY KEY (filesId)
)
GO

	
CREATE TABLE lum_FilesList
(	id CHAR(32) NOT NULL,filesId CHAR(32) NOT NULL,fileId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_FILESLIST PRIMARY KEY (id),
	CONSTRAINT LUM_FK_FILESLIST FOREIGN KEY (filesId) REFERENCES lum_Files(filesId),
	CONSTRAINT LUM_FK_FILESLIST2 FOREIGN KEY (fileId) REFERENCES lum_File(fileId) ON DELETE CASCADE 
)
GO

	
CREATE TABLE lum_FTTransformationPrm
(	id CHAR(32) NOT NULL,name NVARCHAR(32) NOT NULL,builder NVARCHAR(128) NULL,
	CONSTRAINT LUM_PK_FTTRANSFORMATIONPRM PRIMARY KEY (id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_FTTRANSFORMATIONPRM1 ON lum_FTTransformationPrm(name)
GO

	
	
CREATE TABLE lum_FTTransformationFile
(	id CHAR(32) NOT NULL,filePrefix NVARCHAR(10) NULL,fileSufix NVARCHAR(10) NULL,serviceInstanceId CHAR(32) NOT NULL,contentType NVARCHAR(64) NOT NULL,name NVARCHAR(64) NOT NULL,displayName NVARCHAR(255) NOT NULL,extension NVARCHAR(10) NULL,
	CONSTRAINT LUM_PK_FTTRANSFORMATIONFILE PRIMARY KEY (id)
)
GO

	
CREATE INDEX LUM_IX_FTTRANSFORMATIONFILE1 ON lum_FTTransformationFile(serviceInstanceId)
GO

	
CREATE UNIQUE INDEX LUM_IX_FTTRANSFORMATIONFILE2 ON lum_FTTransformationFile(name,serviceInstanceId)
GO

	
	
CREATE TABLE lum_FTTransformationPrmValues
(	id CHAR(32) NOT NULL,tnsfPrmId CHAR(32) NOT NULL,fileTransformationId CHAR(32) NOT NULL,value NVARCHAR(64) NOT NULL,
	CONSTRAINT LUM_PK_FTTRANSFORMATIONPRMVLS PRIMARY KEY (id),
	CONSTRAINT LUM_FK_FTTRANSFORMATIONPRMVLS1 FOREIGN KEY (tnsfPrmId) REFERENCES lum_FTTransformationPrm(id),
	CONSTRAINT LUM_FK_FTTRANSFORMATIONPRMVLS2 FOREIGN KEY (fileTransformationId) REFERENCES lum_FTTransformationFile(id)
)
GO

	
CREATE INDEX LUM_IX_FTTRANSFORMATIONPRMVLS1 ON lum_FTTransformationPrmValues(fileTransformationId,tnsfPrmId)
GO

	
CREATE TABLE lum_FTTransformedFile
(	transformedFileId CHAR(32) NOT NULL,fileTnsfId CHAR(32) NOT NULL,fileConfigId CHAR(32) NOT NULL,fullPath NVARCHAR(500) NOT NULL,contentType NVARCHAR(100) NOT NULL,name NVARCHAR(255) NOT NULL,fileSize INT NOT NULL,height INT NULL,width INT NULL,duration BIGINT NULL,format NVARCHAR(10) NULL,macroType NVARCHAR(10) NOT NULL,colorDepth INT NULL,videoFrameRate DOUBLE PRECISION NULL,audioBitRate DOUBLE PRECISION NULL,audioSamplingRate INT NULL,audioChannels INT NULL,
	CONSTRAINT LUM_PK_FTTRANSFORMEDFILE PRIMARY KEY (transformedFileId),
	CONSTRAINT LUM_FK_FTTRANSFORMEDFILE1 FOREIGN KEY (fileTnsfId) REFERENCES lum_FTTransformationFile(id)
)
GO

	
CREATE INDEX LUM_IX_FTTRANSFORMEDFILE1 ON lum_FTTransformedFile(fileConfigId)
GO

	
CREATE TABLE lum_Observer
(	observerId CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,className NVARCHAR(255) NOT NULL,enabled INT CONSTRAINT LUM_DF_OBSERVER1 DEFAULT 1 NOT NULL,
	CONSTRAINT LUM_PK_OBSERVER PRIMARY KEY (observerId)
)
GO

	
CREATE TABLE lum_MailConfig
(	id CHAR(32) NOT NULL,smtpHost NVARCHAR(255) NOT NULL,smtpPort INT NOT NULL,smtpUser NVARCHAR(255) NULL,smtpPassword NVARCHAR(255) NULL,sendInterval INT NOT NULL,maxSendThreads INT NOT NULL,blockSize INT NOT NULL,blockInterval INT NOT NULL,removeMailsSent INT NOT NULL,queueLockTimeout INT NOT NULL,mailSenderClass NVARCHAR(255) NOT NULL,defaultFromAddress NVARCHAR(255) NULL,cryptographicProtocol NVARCHAR(4) CONSTRAINT LUM_DF_CRYPTOGRAPHICPROTOCOL DEFAULT 'NONE' NOT NULL,socketTimeout INT CONSTRAINT LUM_DF_TIMEOUT DEFAULT 0 NOT NULL,socketConnectionTimeout INT CONSTRAINT LUM_DF_CONNECTIONTIMEOUT DEFAULT 0 NOT NULL,
	CONSTRAINT LUM_PK_MAILCONFIG PRIMARY KEY (id)
)
GO

	
CREATE TABLE lum_MailBody
(	id CHAR(32) NOT NULL,textMsg NTEXT NULL,htmlMsg NTEXT NULL,
	CONSTRAINT LUM_PK_MAILBODY PRIMARY KEY (id)
)
GO

	
CREATE TABLE lum_Mail
(	id CHAR(32) NOT NULL,mailQueueId CHAR(32) NOT NULL,mailBodyId CHAR(32) NULL,charset NVARCHAR(50) NOT NULL,subject NVARCHAR(255) NULL,fromAddress NVARCHAR(255) NULL,toAddress NVARCHAR(255) NULL,ccAddress NVARCHAR(255) NULL,bccAddress NVARCHAR(255) NULL,replyToAddress NVARCHAR(255) NULL,requestDateTime DATETIME NOT NULL,sourceComponent NVARCHAR(255) NULL,sourceComponentStringsUrl NVARCHAR(255) NULL,sentDateTime DATETIME NULL,status INT NOT NULL,errorMessage NVARCHAR(500) NULL,
	CONSTRAINT LUM_PK_MAIL PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MAIL1 FOREIGN KEY (mailBodyId) REFERENCES lum_MailBody(id)
)
GO


	
CREATE INDEX LUM_IDX_MAIL1 ON lum_Mail(mailQueueId,requestDateTime)
GO

	
CREATE INDEX LUM_IDX_MAIL3 ON lum_Mail(mailBodyId)
GO

	
	
CREATE TABLE lum_MailDestination
(	id CHAR(32) NOT NULL,mailId CHAR(32) NOT NULL,emailAddress NVARCHAR(255) NOT NULL,name NVARCHAR(255) NULL,sentDateTime DATETIME NULL,status INT NOT NULL,errorMessage NVARCHAR(2000) NULL,
	CONSTRAINT LUM_PK_MAILDESTINATION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MAILDESTINATION1 FOREIGN KEY (mailId) REFERENCES lum_Mail(id)
)
GO

	
CREATE INDEX LUM_IDX_MAILDESTINATION1 ON lum_MailDestination(mailId,status)
GO

	
CREATE TABLE lum_MailAttachment
(	id CHAR(32) NOT NULL,mailBodyId CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,description NTEXT NULL,contentType NVARCHAR(100) NOT NULL,content IMAGE NOT NULL,
	CONSTRAINT LUM_PK_MAILATTACHMENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MAILATTACHMENT FOREIGN KEY (mailBodyId) REFERENCES lum_MailBody(id)
)
GO

	
CREATE INDEX LUM_IDX_MAILATTACHMENT1 ON lum_MailAttachment(mailBodyId)
GO

	
CREATE TABLE lum_MailQueue
(	id CHAR(32) NOT NULL,locked INT NOT NULL,lockExpirationDateTime DATETIME NULL,requestDateTime DATETIME NULL,
	CONSTRAINT LUM_PK_MAILQUEUE PRIMARY KEY (id)
)
GO

	
	
CREATE INDEX LUM_IDX_MAILQUEUE1 ON lum_MailQueue(requestDateTime,lockExpirationDateTime,locked)
GO

	
	
CREATE TABLE lum_Preferences
(	id CHAR(32) NOT NULL,resourceId CHAR(32) NOT NULL,resourceType INT NOT NULL,
	CONSTRAINT LUM_PK_PREFERENCES PRIMARY KEY (id),
	CONSTRAINT LUM_UN_PREFERENCES1 UNIQUE (resourceId,resourceType)
)
GO

	
CREATE TABLE lum_PrefPrinc
(	id CHAR(32) NOT NULL,preferencesId CHAR(32) NOT NULL,principalId CHAR(32) NULL,
	CONSTRAINT LUM_PK_PREFPRINC PRIMARY KEY (id),
	CONSTRAINT LUM_UN_PREFPRINC1 UNIQUE (preferencesId,principalId),
	CONSTRAINT LUM_FK_PREFPRINC1 FOREIGN KEY (preferencesId) REFERENCES lum_Preferences(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_PREFPRINC2 FOREIGN KEY (principalId) REFERENCES lum_Principal(principalId) ON DELETE CASCADE 
)
GO

	
CREATE TABLE lum_PrefPrincEntry
(	id CHAR(32) NOT NULL,prefPrincId CHAR(32) NOT NULL,entryKey NVARCHAR(255) NOT NULL,readOnly INT NOT NULL,
	CONSTRAINT LUM_PK_PREFPRINCENTRY PRIMARY KEY (id),
	CONSTRAINT LUM_UN_PREFPRINCENTRY1 UNIQUE (prefPrincId,entryKey),
	CONSTRAINT LUM_FK_PREFPRINCENTRY1 FOREIGN KEY (prefPrincId) REFERENCES lum_PrefPrinc(id) ON DELETE CASCADE 
)
GO

	
CREATE TABLE lum_PrefPrincEntryValue
(	prefPrincEntryId CHAR(32) NOT NULL,value NVARCHAR(255) NULL,position INT NOT NULL,
	CONSTRAINT LUM_PK_PREFPRINCENTRYVALUE PRIMARY KEY (prefPrincEntryId,position),
	CONSTRAINT LUM_FK_PREFPRINCENTRYVALUE1 FOREIGN KEY (prefPrincEntryId) REFERENCES lum_PrefPrincEntry(id) ON DELETE CASCADE 
)
GO

	
CREATE TABLE lum_Progress
(	id CHAR(32) NOT NULL,processId CHAR(32) NOT NULL,createdDateTime BIGINT NOT NULL,lastMessage INT NOT NULL,type INT NOT NULL,overallMax INT NULL,overallValue INT NULL,itemMax INT NULL,itemValue INT NULL,message NTEXT NULL,elapsedTime INT NULL,innerProgressId CHAR(32) NULL,
	CONSTRAINT LUM_PK_PROGRESS PRIMARY KEY (id)
)
GO
	
	
CREATE INDEX LUM_IDX_PROGRESS1 ON lum_Progress(processId,type)
GO

	
CREATE INDEX LUM_IDX_PROGRESS2 ON lum_Progress(processId,createdDateTime)
GO

	
CREATE INDEX LUM_IDX_PROGRESS3 ON lum_Progress(createdDateTime)
GO

	
CREATE TABLE lum_Cache
(	id NVARCHAR(255) NOT NULL,capacity INT NOT NULL,
	CONSTRAINT LUM_PK_CACHE PRIMARY KEY (id)
)
GO
	
	
CREATE TABLE lum_RepType
(	id NVARCHAR(255) NOT NULL,reportPath NVARCHAR(255) NOT NULL,baseUrl NVARCHAR(255) NULL,configParametersDef NTEXT NULL,runtimeParametersDef NTEXT NULL,dataSourceProvider NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_REPTYPE PRIMARY KEY (id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_REPTYPE ON lum_RepType(baseUrl)
GO


	
CREATE TABLE lum_RepTypeParameter
(	id CHAR(32) NOT NULL,reportTypeId NVARCHAR(255) NOT NULL,name NVARCHAR(100) NOT NULL,type NVARCHAR(255) NULL,value NTEXT NULL,
	CONSTRAINT LUM_PK_REPTYPEPARAM PRIMARY KEY (id),
	CONSTRAINT LUM_FK_REPTYPEPARAM1 FOREIGN KEY (reportTypeId) REFERENCES lum_RepType(Id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_REPTYPEPARAMETER ON lum_RepTypeParameter(reportTypeId,name)
GO

	
	
CREATE TABLE lum_RepReport
(	id CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,description NVARCHAR(255) NULL,reportTypeId NVARCHAR(255) NOT NULL,
	CONSTRAINT LUM_PK_REPREPORT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_REPREPORT1 FOREIGN KEY (reportTypeId) REFERENCES lum_RepType(Id)
)
GO

	
CREATE INDEX LUM_IX_REPREPORT ON lum_RepReport(reportTypeId)
GO

	
	
CREATE TABLE lum_RepParameter
(	id CHAR(32) NOT NULL,reportId CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,value NVARCHAR(255) NOT NULL,
	CONSTRAINT LUM_PK_REPPARAMETER PRIMARY KEY (id),
	CONSTRAINT LUM_FK_REPPARAMETER1 FOREIGN KEY (reportId) REFERENCES lum_RepReport(Id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_REPPARAMETER ON lum_RepParameter(reportId,name)
GO

	
CREATE TABLE lum_DEPackage
(	id CHAR(32) NOT NULL,userId CHAR(32) NOT NULL,outcome NVARCHAR(50) NOT NULL,installDate DATETIME NULL,packageFile NVARCHAR(255) NOT NULL,
	CONSTRAINT LUM_PK_DEPACKAGE PRIMARY KEY (id)
)
GO
	
	
CREATE TABLE lum_DEModule
(	id NVARCHAR(50) NOT NULL,displayName NVARCHAR(50) NOT NULL,description NTEXT NULL,deploymentDateTime DATETIME NOT NULL,type INT NOT NULL,checksum NCHAR(28) NULL,numErrors INT NOT NULL,numWarnings INT NOT NULL,deployMessage NTEXT NULL,version NVARCHAR(30) NULL,status NVARCHAR(20) NOT NULL,resolved TINYINT NOT NULL,sourceDir NVARCHAR(255) NULL,metadata IMAGE NULL,
	CONSTRAINT LUM_PK_DEMODULE PRIMARY KEY (id)
)
GO

	
CREATE INDEX LUM_IX_DEMODULE1 ON lum_DEModule(type)
GO

	
CREATE INDEX LUM_IX_DEMODULE2 ON lum_DEModule(status)
GO

	
CREATE TABLE lum_DEComponent
(	id NVARCHAR(255) NOT NULL,moduleId NVARCHAR(50) NOT NULL,version NVARCHAR(30) NULL,description NTEXT NULL,channelId NVARCHAR(32) NULL,sourcePath NVARCHAR(255) NULL,checksum NCHAR(28) NULL,status NVARCHAR(20) NOT NULL,numErrors INT NOT NULL,numWarnings INT NOT NULL,deployMessage NTEXT NULL,deploymentDateTime DATETIME NOT NULL,resolved TINYINT NOT NULL,lastUpgradeStepExecuted NVARCHAR(30) NULL,metadata IMAGE NULL,
	CONSTRAINT LUM_PK_DECOMPONENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_DECOMPONENT1 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_DECOMPONENT2 FOREIGN KEY (moduleId) REFERENCES lum_DEModule(Id)
)
GO

	
CREATE INDEX LUM_IX_DECOMPONENT1 ON lum_DEComponent(channelId)
GO

	
CREATE INDEX LUM_IX_DECOMPONENT2 ON lum_DEComponent(status)
GO

	
CREATE VIEW lum_vwChannelComponent AS
(
	
			SELECT
				ch.*,
				co.id componentId,
				co.sourcePath,
				mo.sourceDir as moduleSourceDir
			FROM
				lum_Channel ch
			LEFT OUTER JOIN lum_DEComponent co
				ON ch.channelId = co.channelId
			LEFT OUTER JOIN lum_DEModule mo
				ON co.moduleId = mo.id
		
)
GO

	
CREATE TABLE lum_DELastDeployment
(	id CHAR(32) NOT NULL,installInProgress TINYINT NOT NULL,
	CONSTRAINT LUM_PK_DELASTDEPLOYMENT PRIMARY KEY (id)
)
GO

	
CREATE TABLE lum_DEDeploymentMessage
(	id CHAR(32) NOT NULL,objectId NVARCHAR(255) NOT NULL,objectType NCHAR(1) NOT NULL,messageLevel NVARCHAR(10) NOT NULL,title NVARCHAR(255) NOT NULL,message NTEXT NOT NULL,
	CONSTRAINT LUM_PK_DEDEPLOYMENTMESSAGE PRIMARY KEY (id)
)
GO

	
CREATE INDEX LUM_IX_DEDEPLOYMENTMESSAGE1 ON lum_DEDeploymentMessage(objectType,objectId)
GO

	
	
CREATE TABLE lum_CrySymmetricCipher
(	id CHAR(32) NOT NULL,cipherKey VARCHAR(100) NOT NULL,iv VARCHAR(100) NOT NULL,macKey VARCHAR(100) NOT NULL,
	CONSTRAINT LUM_PK_CRYSYMMETRICCIPHER PRIMARY KEY (id)
)
GO

	
	
CREATE TABLE lum_AuditCategory
(	categoryId CHAR(32) NOT NULL,auditCategoryKey NVARCHAR(100) NOT NULL,name NVARCHAR(50) NOT NULL,description NTEXT NOT NULL,enabled TINYINT NOT NULL,
	CONSTRAINT LUM_PK_AUDITCATEGORY PRIMARY KEY (categoryId)
)
GO

	
CREATE UNIQUE INDEX LUM_IDX_AUDITCATEGORY1 ON lum_AuditCategory(auditCategoryKey)
GO


	
CREATE TABLE lum_AuditEntryType
(	auditEntryTypeId CHAR(32) NOT NULL,auditEntryTypeKey NVARCHAR(100) NOT NULL,name NVARCHAR(50) NOT NULL,description NTEXT NOT NULL,enabled TINYINT NOT NULL,categoryId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_AUDITENTRYTYPE PRIMARY KEY (auditEntryTypeId),
	CONSTRAINT LUM_FK_AUDITENTRYTYPE1 FOREIGN KEY (categoryId) REFERENCES lum_AuditCategory(categoryId)
)
GO

	
CREATE UNIQUE INDEX LUM_IDX_AUDITENTRYTYPE1 ON lum_AuditEntryType(auditEntryTypeKey)
GO

	
CREATE INDEX LUM_IDX_AUDITENTRYTYPE2 ON lum_AuditEntryType(categoryId)
GO


	
CREATE TABLE lum_AuditEntry
(	auditEntryId CHAR(32) NOT NULL,entryDate DATETIME NOT NULL,serverId NVARCHAR(50) NOT NULL,entryUserLogin NVARCHAR(100) NOT NULL,title NVARCHAR(255) NOT NULL,description NTEXT NOT NULL,categoryId CHAR(32) NOT NULL,auditEntryTypeId CHAR(32) NOT NULL,parentEntryId CHAR(32) NULL,entryUserId NVARCHAR(32) NOT NULL,entryState INT NOT NULL,
	CONSTRAINT LUM_PK_AUDITENTRY PRIMARY KEY (auditEntryId),
	CONSTRAINT LUM_FK_AUDITENTRY1 FOREIGN KEY (categoryId) REFERENCES lum_AuditCategory(categoryId),
	CONSTRAINT LUM_FK_AUDITENTRY2 FOREIGN KEY (auditEntryTypeId) REFERENCES lum_AuditEntryType(auditEntryTypeId),
	CONSTRAINT LUM_FK_AUDITENTRY3 FOREIGN KEY (parentEntryId) REFERENCES lum_AuditEntry(auditEntryId)
)
GO

	
CREATE INDEX LUM_IDX_AUDITENTRY1 ON lum_AuditEntry(entryDate,categoryId,auditEntryTypeId)
GO

	
CREATE INDEX LUM_IDX_AUDITENTRY2 ON lum_AuditEntry(categoryId,auditEntryTypeId,entryDate)
GO
	
	
CREATE TABLE lum_AuditConfig
(	auditConfigId CHAR(32) NOT NULL,cleanInterval INT NOT NULL,
	CONSTRAINT LUM_PK_AUDITCONFIG PRIMARY KEY (auditConfigId)
)
GO


	
CREATE TABLE lum_WFRType
(	id CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,fileReplicatorClassName NVARCHAR(255) NOT NULL,
	CONSTRAINT LUM_PK_WFRTYPE PRIMARY KEY (id)
)
GO
	
	
CREATE TABLE lum_WFRProperty
(	id CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,dataType NVARCHAR(255) NOT NULL,type CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_WFRPROPERTY PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WFRPROPERTY1 FOREIGN KEY (type) REFERENCES lum_WFRType(id)
)
GO

	
CREATE TABLE lum_WFReplication
(	id CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,type CHAR(32) NOT NULL,filterChannelId NVARCHAR(32) NULL,filterPath NTEXT NULL,websiteId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_WFREPLICATION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WFREPLICATION1 FOREIGN KEY (type) REFERENCES lum_WFRType(id),
	CONSTRAINT LUM_FK_WFREPLICATION2 FOREIGN KEY (filterChannelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_WFREPLICATION3 FOREIGN KEY (websiteId) REFERENCES lum_Website(id)
)
GO

	
	
-- Index to filter lum_WFReplication.
CREATE INDEX LUM_IX_WFREPLICATION1 ON lum_WFReplication(websiteId)
GO

		
	
CREATE TABLE lum_WFRPropValue
(	id CHAR(32) NOT NULL,replicationId CHAR(32) NOT NULL,propertyId CHAR(32) NOT NULL,value NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_WFRPROPVALUE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WFRPROPVALUE1 FOREIGN KEY (replicationId) REFERENCES lum_WFReplication(id),
	CONSTRAINT LUM_FK_WFRPROPVALUE2 FOREIGN KEY (propertyId) REFERENCES lum_WFRProperty(id)
)
GO

	
	
-- Index for navigation from lum_WFReplication to lum_WFRPropValue.
CREATE INDEX LUM_IX_WFRPROPVALUE1 ON lum_WFRPropValue(replicationId)
GO

	
	
CREATE TABLE lum_SISocialNetwork
(	id CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,permissions NVARCHAR(255) NULL,messageMaxLength INT NOT NULL,
	CONSTRAINT LUM_PK_SISOCIALNETWORK PRIMARY KEY (id)
)
GO

	
CREATE TABLE lum_SIApplication
(	id CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,publicSocialNetworkId CHAR(32) NOT NULL,enabled TINYINT NOT NULL,consumerKey NVARCHAR(64) NOT NULL,consumerKeySecret NVARCHAR(64) NOT NULL,
	CONSTRAINT LUM_PK_SIAPPLICATION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SIAPPLICATION1 FOREIGN KEY (publicSocialNetworkId) REFERENCES lum_SISocialNetwork(id)
)
GO

	
CREATE INDEX LUM_IX_SIAPPLICATION1 ON lum_SIApplication(publicSocialNetworkId)
GO

	
CREATE TABLE lum_SIApplicationAccount
(	id CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,socialNetworkApplicationId CHAR(32) NOT NULL,enabled TINYINT NOT NULL,authenticationResponse NVARCHAR(255) NOT NULL,allServiceInstances TINYINT NOT NULL,serviceInstanceId CHAR(32) NOT NULL,publicationDestination NVARCHAR(255) NOT NULL,publicationToken NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_SIAPPLICATIONACCOUNT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SIAPPLICATIONACCOUNT1 FOREIGN KEY (socialNetworkApplicationId) REFERENCES lum_SIApplication(id),
	CONSTRAINT LUM_FK_SIAPPLICATIONACCOUNT2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
)
GO

	
CREATE INDEX LUM_IX_SIAPPLICATIONACCOUNT1 ON lum_SIApplicationAccount(socialNetworkApplicationId)
GO

	
CREATE INDEX LUM_IX_SIAPPLICATIONACCOUNT2 ON lum_SIApplicationAccount(serviceInstanceId)
GO

	
CREATE TABLE lum_SIMessage
(	id CHAR(32) NOT NULL,remoteId NVARCHAR(50) NULL,messageContent NTEXT NOT NULL,accountId CHAR(32) NOT NULL,publishDate DATETIME NULL,status INT NOT NULL,
	CONSTRAINT LUM_PK_SIMESSAGE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SIMESSAGE1 FOREIGN KEY (accountId) REFERENCES lum_SIApplicationAccount(id) ON DELETE CASCADE 
)
GO

	
CREATE INDEX LUM_IX_SIMESSAGE1 ON lum_SIMessage(accountId,status)
GO

	
	
CREATE TABLE lum_SIRemoteMessageId
(	messageId CHAR(32) NOT NULL,remoteId NVARCHAR(50) NULL,accountId CHAR(32) NULL,
	CONSTRAINT LUM_PK_SIREMOTEMESSAGEID PRIMARY KEY (messageId),
	CONSTRAINT LUM_FK_SIREMOTEMESSAGEID1 FOREIGN KEY (accountId) REFERENCES lum_SIApplicationAccount(id) ON DELETE CASCADE 
)
GO

	
CREATE INDEX LUM_IX_SIREMOTEMESSAGEID1 ON lum_SIRemoteMessageId(accountId)
GO

	
	
CREATE TABLE lum_SIQueue
(	messageId CHAR(32) NOT NULL,status INT NOT NULL,processId CHAR(32) NOT NULL,publishDateTime DATETIME NOT NULL,messageContent NTEXT NOT NULL,accountId CHAR(32) NOT NULL,action NVARCHAR(1) NOT NULL,locale NVARCHAR(5) NULL,
	CONSTRAINT LUM_PK_SIQUEUE PRIMARY KEY (processId),
	CONSTRAINT LUM_FK_SIQUEUE1 FOREIGN KEY (accountId) REFERENCES lum_SIApplicationAccount(id) ON DELETE CASCADE 
)
GO

	
CREATE INDEX LUM_IX_SIQUEUE1 ON lum_SIQueue(messageId,publishDateTime desc)
GO

	
CREATE INDEX LUM_IX_SIQUEUE2 ON lum_SIQueue(publishDateTime desc)
GO

	
CREATE INDEX LUM_IX_SIQUEUE3 ON lum_SIQueue(accountId,publishDateTime desc)
GO

	
	
CREATE TABLE lum_PQQueueServerConfig
(	id CHAR(32) NOT NULL,serverId NVARCHAR(128) NOT NULL,threads INT NOT NULL,
	CONSTRAINT LUM_PK_PQQUEUESERVERCONFIG PRIMARY KEY (id)
)
GO

	
	
CREATE UNIQUE INDEX LUM_IDX_PQQUEUESERVERCONFIG1 ON lum_PQQueueServerConfig(serverId)
GO

	
	
CREATE TABLE lum_PQQueueTaskProcess
(	id CHAR(32) NOT NULL,title NVARCHAR(128) NULL,status INT NOT NULL,queued DATETIME NOT NULL,scheduled DATETIME NULL,scheduledTimeMillis BIGINT NOT NULL,started DATETIME NULL,finished DATETIME NULL,task IMAGE NOT NULL,ownerId CHAR(32) NULL
)
GO


	
	
	ALTER TABLE lum_PQQueueTaskProcess ADD taskOrder BIGINT NOT NULL IDENTITY, CONSTRAINT LUM_PK_PQQUEUETASKPROCESS PRIMARY KEY (taskOrder)
GO

	
	
	
	
	
	
CREATE INDEX LUM_IX_PQQUEUETASKPROCESS1 ON lum_PQQueueTaskProcess(scheduledTimeMillis,status,taskOrder,id)
GO

	
CREATE UNIQUE INDEX LUM_IX_PQQUEUETASKPROCESS2 ON lum_PQQueueTaskProcess(id)
GO

	
CREATE INDEX LUM_IX_PQQUEUETASKPROCESS3 ON lum_PQQueueTaskProcess(status,id)
GO

	
CREATE INDEX LUM_IX_PQQUEUETASKPROCESS4 ON lum_PQQueueTaskProcess(ownerId)
GO

	
	
	
	
CREATE TABLE lum_PQTaskProcessLock
(	id CHAR(32) NOT NULL,taskProcessId CHAR(32) NOT NULL,lockId NVARCHAR(100) NOT NULL,lockType INT NOT NULL,
	CONSTRAINT LUM_PK_PQTASKPROCESSLOCK PRIMARY KEY (id),
	CONSTRAINT LUM_FK_PQTASKPROCESSLOCK1 FOREIGN KEY (taskProcessId) REFERENCES lum_PQQueueTaskProcess(id) ON DELETE CASCADE 
)
GO

	
CREATE INDEX LUM_IX_PQTASKPROCESSLOCK1 ON lum_PQTaskProcessLock(taskProcessId,lockId,lockType)
GO

	
	
CREATE TABLE lum_SNSocialNetwork
(	socialNetworkId CHAR(32) NOT NULL,name NVARCHAR(150) NOT NULL,creationDate DATETIME NOT NULL,channelBaseId NVARCHAR(32) NOT NULL,personalPageId NVARCHAR(32) NOT NULL,socialProfileServiceInstanceId CHAR(32) NULL,socialProfileSourceId NVARCHAR(255) NULL,socialProfileUserFieldId NVARCHAR(255) NULL,socialProfileClassName NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_SNSOCIALNETWORK PRIMARY KEY (socialNetworkId),
	CONSTRAINT LUM_FK_SNSOCIALNETWORK1 FOREIGN KEY (channelBaseId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_SNSOCIALNETWORK2 FOREIGN KEY (personalPageId) REFERENCES lum_Page(pageId),
	CONSTRAINT LUM_FK_SNSOCIALNETWORK3 FOREIGN KEY (socialProfileServiceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
)
GO

	
CREATE INDEX LUM_IX_SNSOCIALNETWORK1 ON lum_SNSocialNetwork(channelBaseId)
GO

	
CREATE UNIQUE INDEX LUM_IX_SNSOCIALNETWORK2 ON lum_SNSocialNetwork(name)
GO

	
CREATE INDEX LUM_IX_SNSOCIALNETWORK3 ON lum_SNSocialNetwork(personalPageId)
GO

	
CREATE INDEX LUM_IX_SNSOCIALNETWORK4 ON lum_SNSocialNetwork(socialProfileServiceInstanceId)
GO

	
	
CREATE TABLE lum_Theme
(	id NVARCHAR(100) NOT NULL,name NVARCHAR(50) NOT NULL,description NVARCHAR(255) NULL,openRtInterfaceBehavior NVARCHAR(10) NULL,openRtIntfBehaviorAcPar NVARCHAR(10) NULL,
	CONSTRAINT LUM_PK_THEME PRIMARY KEY (id)
)
GO

	
-- Theme usage view
CREATE VIEW lum_vwThemeUsage AS
(
	
			select 
				c.channelId as channelId, 
				c.name as channelName, 
				pag.pageId as pageId, 
				pag.name as pageName, 
				convert(nvarchar(100),pdv.value) as themeId
			from 
				lum_PBPropertyBag pb 
				inner join 
					lum_PBProperty p 
					on pb.id = p.propertyBagId 
				inner join 
					lum_PBPropertyDefault pd 
					on p.propertyDefaultId = pd.id 
				inner join 
					lum_PBPropertyDefValue pdv
					on pdv.propertyDefaultId = pd.id
				left outer join
					lum_Channel c 
					on c.propertyBagId = pb.id 
				left outer join
					lum_Page pag
					on pag.propertyBagId = pb.id 
			where 
				p.name = 'lumis.portal.themes'
		
)
GO

	
	
CREATE TABLE lum_SRRelationshipType
(	id NVARCHAR(128) NOT NULL,name NVARCHAR(64) NOT NULL,reverseName NVARCHAR(64) NOT NULL,bidirectional TINYINT NOT NULL,
	CONSTRAINT LUM_PK_SRRELATIONSHIPTYPE PRIMARY KEY (id)
)
GO

	
	
CREATE TABLE lum_SRNodeTypeSource
(	id CHAR(32) NOT NULL,relationshipTypeId NVARCHAR(128) NOT NULL,typeName NVARCHAR(128) NOT NULL,
	CONSTRAINT LUM_PK_SRNODETYPESOUCE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SRNODETYPESOURCE FOREIGN KEY (relationshipTypeId) REFERENCES lum_SRRelationshipType(id)
)
GO

	
	
CREATE TABLE lum_SRNodeTypeTarget
(	id CHAR(32) NOT NULL,relationshipTypeId NVARCHAR(128) NOT NULL,typeName NVARCHAR(128) NOT NULL,
	CONSTRAINT LUM_PK_SRNODETYPETARGET PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SRNODETYPETARGET FOREIGN KEY (relationshipTypeId) REFERENCES lum_SRRelationshipType(id)
)
GO

	
	
CREATE TABLE lum_SRRelatableNode
(	id CHAR(32) NOT NULL,creationDate DATETIME NOT NULL,type NVARCHAR(128) NOT NULL,objectId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_SRRELATABLENODE PRIMARY KEY (id)
)
GO

	
	
CREATE TABLE lum_SRRelationshipNode
(	id CHAR(32) NOT NULL,source CHAR(32) NOT NULL,target CHAR(32) NOT NULL,relationshipTypeId NVARCHAR(128) NOT NULL,creationDate DATETIME NOT NULL,
	CONSTRAINT LUM_PK_SRRELATIONSHIPNODE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SRRELATIONSHIPNODE FOREIGN KEY (source) REFERENCES lum_SRRelatableNode(id),
	CONSTRAINT LUM_FK_SRRELATIONSHIPNODE1 FOREIGN KEY (target) REFERENCES lum_SRRelatableNode(id),
	CONSTRAINT LUM_FK_SRRELATIONSHIPNODE2 FOREIGN KEY (relationshipTypeId) REFERENCES lum_SRRelationshipType(id)
)
GO

	
	
CREATE TABLE lum_FMMacrotypeMap
(	id CHAR(32) NOT NULL,expression NVARCHAR(255) NOT NULL,fileMetadataType NVARCHAR(10) NOT NULL,position INT NOT NULL,
	CONSTRAINT LUM_PK_FMMACROTYPEMAP PRIMARY KEY (id)
)
GO

	
CREATE TABLE lum_BCBusinessContext
(	id NVARCHAR(255) NOT NULL,name NVARCHAR(255) NOT NULL,content NTEXT NOT NULL,
	CONSTRAINT LUM_PK_BCBUSINESSCONTEXT PRIMARY KEY (id)
)
GO

	
CREATE TABLE lum_IPProcess
(	id CHAR(32) NOT NULL,title NVARCHAR(255) NOT NULL,lastExecutedStep INT NULL,processState NVARCHAR(50) NOT NULL,owner CHAR(32) NULL,ownerUserId NVARCHAR(255) NULL,callbackHandler IMAGE NULL,creationDate DATETIME NULL,lastExecutedStepDate DATETIME NULL,
	CONSTRAINT LUM_PK_IPPROCESS PRIMARY KEY (id)
)
GO

	
CREATE TABLE lum_IPStep
(	id CHAR(32) NOT NULL,stepNumber INT NOT NULL,processId CHAR(32) NOT NULL,executable IMAGE NOT NULL,mandatory TINYINT NOT NULL,ignoredDate DATETIME NULL,ignoredUserId NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_IPSTEP PRIMARY KEY (id),
	CONSTRAINT LUM_FK_IPSTEP1 FOREIGN KEY (processId) REFERENCES lum_IPProcess(id)
)
GO

	
-- Index for searching steps of a process.
CREATE INDEX LUM_IX_IPSTEP1 ON lum_IPStep(processId)
GO

	
CREATE TABLE lum_IPStepOutcome
(	stepId CHAR(32) NOT NULL,message NTEXT NULL,outcomeStatus NVARCHAR(50) NULL,
	CONSTRAINT LUM_PK_IPSTEPOUTCOME PRIMARY KEY (stepId),
	CONSTRAINT LUM_FK_IPSTEPOUTCOME1 FOREIGN KEY (stepId) REFERENCES lum_IPStep(id)
)
GO

	
CREATE TABLE lum_IPStepEnvironment
(	id CHAR(32) NOT NULL,environmentTag NVARCHAR(255) NULL,environmentType NVARCHAR(25) NULL,stepId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_IPSTEPENVIRONMENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_IPSTEPENVIRONMENT1 FOREIGN KEY (stepId) REFERENCES lum_IPStep(id)
)
GO

	
-- Index for searching environment restrictions of a step.
CREATE INDEX LUM_IX_IPSTEPENVIRONMENT1 ON lum_IPStepEnvironment(stepId)
GO

	
CREATE TABLE lum_CfgEnvironmentConf
(	id CHAR(32) NOT NULL,type NVARCHAR(25) NOT NULL,fileSystemImplementation NVARCHAR(255) NULL,javaMelodyEnabled TINYINT CONSTRAINT LUM_DF_CFGENVIRONMENTCONF1 DEFAULT 1 NOT NULL,bigDataRepositoryType NVARCHAR(30) CONSTRAINT LUM_DF_CFGENVIRONMENTCONF2 DEFAULT 'ELASTICSEARCH_EMBEDDED' NOT NULL,bigDataRepositoryClassName NVARCHAR(255) NULL,esClusterName NVARCHAR(50) NULL,esConnectionAddresses NTEXT NULL,esIndexNamePrefix NVARCHAR(80) NULL,esBulkConcurrentRequests INT NOT NULL,
	CONSTRAINT LUM_PK_CFGENVIRONMENTCONF PRIMARY KEY (id)
)
GO

	
CREATE TABLE lum_CfgEnvironmentTag
(	environmentId CHAR(32) NOT NULL,tag NVARCHAR(255) NOT NULL,
	CONSTRAINT LUM_PK_CFGENVIRONMENTTAG PRIMARY KEY (environmentId,tag),
	CONSTRAINT LUM_FK_CFGENVIRONMENTTAG1 FOREIGN KEY (environmentId) REFERENCES lum_CfgEnvironmentConf(id)
)
GO

	
CREATE TABLE lum_CfgServerConf
(	serverId NVARCHAR(255) NOT NULL,baseSourcePath NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_CFGSERVERCONF PRIMARY KEY (serverId)
)
GO

	
-- Area Tags usage view
CREATE VIEW lum_vwAreaTagsUsage AS
(
	
			select 
				c.channelId as channelId, 
				c.name as channelName, 
				si.serviceInstanceId as serviceInstanceId, 
				si.name as serviceInstanceName, 
				convert(nvarchar(100),pdv.value) as tag
			from 
				lum_PBPropertyBag pb 
				inner join 
					lum_PBProperty p 
					on pb.id = p.propertyBagId 
				inner join 
					lum_PBPropertyDefault pd 
					on p.propertyDefaultId = pd.id 
				inner join 
					lum_PBPropertyDefValue pdv
					on pdv.propertyDefaultId = pd.id
				left outer join
					lum_Channel c 
					on c.propertyBagId = pb.id 
				left outer join
					lum_ServiceInstance si
					on si.propertyBagId = pb.id 
			where 
				p.name = 'lumis.portal.areatag'
		
)
GO


-----------------------------------------------
-- Generated SQL for: /lumis/doui/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: /lumis/doui/database'
GO

	
CREATE TABLE lum_DouiDefinition
(	serviceId NVARCHAR(255) NOT NULL,definition NTEXT NOT NULL,
	CONSTRAINT LUM_PK_DOUIDEFINITION PRIMARY KEY (serviceId),
	CONSTRAINT LUM_FK_DOUIDEFINITION FOREIGN KEY (serviceId) REFERENCES lum_Service(serviceId)
)
GO

	
CREATE TABLE lum_DouiControl
(	controlId NVARCHAR(255) NOT NULL,controlType NVARCHAR(255) NOT NULL,controlClass NVARCHAR(255) NULL,
	CONSTRAINT LUM_PF_DOUICONTROL PRIMARY KEY (controlId)
)
GO

	
CREATE TABLE lum_DouiSource
(	sourceId NVARCHAR(255) NOT NULL,sourceType NVARCHAR(255) NOT NULL,sourceClass NVARCHAR(255) NULL,dataProviderClass NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_DOUISOURCE PRIMARY KEY (sourceId)
)
GO

	
CREATE TABLE lum_DouiProcessAction
(	processActionId NVARCHAR(255) NOT NULL,processActionType NVARCHAR(255) NOT NULL,processActionClass NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_DOUIPROCESSACT PRIMARY KEY (processActionId)
)
GO


-----------------------------------------------
-- Generated SQL for: /lumis/content/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: /lumis/content/database'
GO


	
CREATE TABLE lum_Content
(	id CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,sourceId NVARCHAR(255) NOT NULL,defaultLocale NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_CONTENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CONTENT1 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
)
GO

	
CREATE INDEX LUM_IDX_CONTENT1 ON lum_Content(serviceInstanceId,sourceId)
GO


	
CREATE TABLE lum_ContentVersion
(	id CHAR(32) NOT NULL,itemId CHAR(32) NOT NULL,versionNumber INT NOT NULL,primaryName NVARCHAR(255) NULL,introduction NTEXT NULL,contentLocaleId CHAR(32) NOT NULL,lastModifiedBy CHAR(32) NOT NULL,lastModifiedDateTime DATETIME NOT NULL,
	CONSTRAINT LUM_PK_CONTENTVERSION PRIMARY KEY (id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_CONTENTVERSION1 ON lum_ContentVersion(itemId)
GO

	
CREATE UNIQUE INDEX LUM_IX_CONTENTVERSION2 ON lum_ContentVersion(contentLocaleId,versionNumber)
GO

	
	
CREATE TABLE lum_ContentLocale
(	id CHAR(32) NOT NULL,contentId CHAR(32) NOT NULL,locale NVARCHAR(10) NOT NULL,createdDateTime DATETIME NOT NULL,createdBy CHAR(32) NOT NULL,activeVersionId CHAR(32) NULL,publishedVersionId CHAR(32) NULL,dirty TINYINT CONSTRAINT LUM_DF_CONTENTLOCALE1 DEFAULT 0 NOT NULL,lockType NVARCHAR(10) NULL,lockedBy CHAR(32) NULL,lockedDate DATETIME NULL,
	CONSTRAINT LUM_PK_CONTENTLOCALE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CONTENTLOCALE1 FOREIGN KEY (contentId) REFERENCES lum_Content(id),
	CONSTRAINT LUM_FK_CONTENTLOCALE2 FOREIGN KEY (activeVersionId) REFERENCES lum_ContentVersion(id),
	CONSTRAINT LUM_FK_CONTENTLOCALE3 FOREIGN KEY (publishedVersionId) REFERENCES lum_ContentVersion(id)
)
GO


	
CREATE UNIQUE INDEX LUM_IX_CONTENTLOCALE1 ON lum_ContentLocale(contentId,locale)
GO

	
	
CREATE INDEX LUM_IX_CONTENTLOCALE2 ON lum_ContentLocale(locale)
GO


	
CREATE INDEX LUM_IX_CONTENTLOCALE3 ON lum_ContentLocale(dirty)
GO

	
	
-- Optimize navigation from ContentVersion to ContentLocale or Content based on activeVersionId.
CREATE INDEX LUM_IX_CONTENTLOCALE4 ON lum_ContentLocale(activeVersionId,contentId)
GO

	
	
-- Optimize navigation from ContentVersion to ContentLocale or Content based on publishedVersionId.
CREATE INDEX LUM_IX_CONTENTLOCALE5 ON lum_ContentLocale(publishedVersionId,contentId)
GO

	
	
CREATE TABLE lum_ContentComment
(	id CHAR(32) NOT NULL,contentLocaleId CHAR(32) NOT NULL,createdBy CHAR(32) NOT NULL,createdDateTime DATETIME NOT NULL,commentText NTEXT NOT NULL,
	CONSTRAINT LUM_PK_CONTENTCOMMENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CONTENTCOMMENT1 FOREIGN KEY (contentLocaleId) REFERENCES lum_ContentLocale(id)
)
GO

	
	
CREATE TABLE lum_ContentAssociation
(	id CHAR(32) NOT NULL,contentVersionId CHAR(32) NOT NULL,associatedContentId CHAR(32) NOT NULL,type NVARCHAR(255) NOT NULL,
	CONSTRAINT LUM_PK_CONTENTASSOCIATION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CONTENTASSOCIATION1 FOREIGN KEY (contentVersionId) REFERENCES lum_ContentVersion(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_CONTENTASSOCIATION2 FOREIGN KEY (associatedContentId) REFERENCES lum_Content(id) ON DELETE CASCADE 
)
GO

	
	
CREATE TABLE lum_ContentPublication
(	id CHAR(32) NOT NULL,contentVersionId CHAR(32) NULL,highlight INT NOT NULL,highlightEndDateTime DATETIME NULL,publishStartDateTime DATETIME NULL,publishEndDateTime DATETIME NULL,published INT NOT NULL,waitingForExpiration INT NOT NULL,waitingForPublishing INT NOT NULL,
	CONSTRAINT LUM_PK_CONTENTPUBLICATION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CONTENTPUBLICATION1 FOREIGN KEY (contentVersionId) REFERENCES lum_ContentVersion(id)
)
GO

	
	
-- Used for updating published state in ContentClock.
CREATE INDEX LUM_IX_CONTENTPUBLICATION1 ON lum_ContentPublication(published,waitingForPublishing,publishStartDateTime,publishEndDateTime)
GO

	
	
-- Used for updating published state in ContentClock.
CREATE INDEX LUM_IX_CONTENTPUBLICATION2 ON lum_ContentPublication(published,waitingForExpiration,publishStartDateTime,publishEndDateTime)
GO

	
	
-- Used for updating highlight state in ContentClock.
CREATE INDEX LUM_IX_CONTENTPUBLICATION3 ON lum_ContentPublication(highlight,highlightEndDateTime)
GO

	
	
-- Used on default lists, to filter versions that are currently published (and optionally highlighted), and generic queries by content version.
CREATE INDEX LUM_IX_CONTENTPUBLICATION4 ON lum_ContentPublication(contentVersionId,published,highlight)
GO

	
	
CREATE TABLE lum_ContentPubPrincipal
(	id CHAR(32) NOT NULL,contentPublicationId CHAR(32) NOT NULL,principalId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_CONTENTPUBPRINCIPAL PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CONTENTPUBPRINCIPAL1 FOREIGN KEY (contentPublicationId) REFERENCES lum_ContentPublication(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_CONTENTPUBPRINCIPAL2 FOREIGN KEY (principalId) REFERENCES lum_Principal(principalId) ON DELETE CASCADE 
)
GO

	
CREATE UNIQUE INDEX LUM_IDX_CONTENTPUBPRINCIPAL1 ON lum_ContentPubPrincipal(contentPublicationId,principalId)
GO

	
	
CREATE TABLE lum_ContentPubServiceInst
(	id CHAR(32) NOT NULL,contentPublicationId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_CONTENTPUBSERVICEINST PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CONTENTPUBSERVICEINST1 FOREIGN KEY (contentPublicationId) REFERENCES lum_ContentPublication(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_CONTENTPUBSERVICEINST2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId) ON DELETE CASCADE 
)
GO

	
CREATE UNIQUE INDEX LUM_IDX_CONTENTPUBSERVICEINST1 ON lum_ContentPubServiceInst(contentPublicationId,serviceInstanceId)
GO

	
CREATE TABLE lum_ContentTag
(	id CHAR(32) NOT NULL,name NVARCHAR(30) NOT NULL,normalizedName NVARCHAR(40) NOT NULL,
	CONSTRAINT LUM_PK_CONTENT_TAG PRIMARY KEY (id)
)
GO

	
CREATE INDEX LUM_IDX_CONTENT_TAG ON lum_ContentTag(normalizedName)
GO

	
CREATE TABLE lum_ContentLocaleTag
(	id CHAR(32) NOT NULL,tagContentId CHAR(32) NOT NULL,contentLocaleId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_LOCALE_CONTENT_TAG PRIMARY KEY (id),
	CONSTRAINT LUM_FK_TAG_CONTENT_ID FOREIGN KEY (tagContentId) REFERENCES lum_Content(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_CONTENT_LOCALE_ID FOREIGN KEY (contentLocaleId) REFERENCES lum_ContentLocale(id) ON DELETE CASCADE 
)
GO

	
CREATE UNIQUE INDEX LUM_IDX_CONTENT_LOCALE_TAG ON lum_ContentLocaleTag(tagContentId,contentLocaleId)
GO

	
CREATE UNIQUE INDEX LUM_IDX_CONTENT_LOCALE_TAG_1 ON lum_ContentLocaleTag(contentLocaleId,tagContentId)
GO

	
CREATE TABLE lum_SIAccountServiceInstance
(	id CHAR(32) NOT NULL,accountId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_SIACCOUNTSVCINSTANCE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SIACCOUNTSVCINSTANCE1 FOREIGN KEY (accountId) REFERENCES lum_SIApplicationAccount(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_SIACCOUNTSVCINSTANCE2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId) ON DELETE CASCADE 
)
GO

	
CREATE INDEX LUM_IX_SIACCOUNTSVCINSTANCE1 ON lum_SIAccountServiceInstance(accountId)
GO

	
CREATE INDEX LUM_IX_SIACCOUNTSVCINSTANCE2 ON lum_SIAccountServiceInstance(serviceInstanceId)
GO

	
CREATE TABLE lum_SIContentMessage
(	id CHAR(32) NOT NULL,contentLocaleId CHAR(32) NOT NULL,messageId CHAR(32) NOT NULL,isDefault TINYINT NOT NULL,
	CONSTRAINT LUM_PK_SICONTENTMESSAGE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SICONTENTMESSAGE1 FOREIGN KEY (contentLocaleId) REFERENCES lum_ContentLocale(id),
	CONSTRAINT LUM_FK_SICONTENTMESSAGE2 FOREIGN KEY (messageId) REFERENCES lum_SIMessage(id) ON DELETE CASCADE 
)
GO

	
CREATE INDEX LUM_IX_SICONTENTMESSAGE1 ON lum_SIContentMessage(contentLocaleId)
GO

	
CREATE INDEX LUM_IX_SICONTENTMESSAGE2 ON lum_SIContentMessage(messageId)
GO


-----------------------------------------------
-- Generated SQL for: /lumis/workflow/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: /lumis/workflow/database'
GO

	
CREATE TABLE lum_Workflow
(	workflowId NVARCHAR(255) NOT NULL,name NVARCHAR(255) NOT NULL,description NVARCHAR(255) NULL,baseUrl NVARCHAR(255) NULL,stringsUrlPrefix NVARCHAR(255) NULL,definition NTEXT NULL,
	CONSTRAINT LUM_PK_WORKFLOW PRIMARY KEY (workflowId)
)
GO

	
CREATE TABLE lum_WorkflowMetaData
(	workflowMetaDataId CHAR(32) NOT NULL,contentLocaleId CHAR(32) NOT NULL,stateId NVARCHAR(100) NOT NULL,assignedTo CHAR(32) NULL,
	CONSTRAINT LUM_PK_WORKFLOWMD PRIMARY KEY (workflowMetaDataId),
	CONSTRAINT LUM_FK_WORKFLOWMD FOREIGN KEY (contentLocaleId) REFERENCES lum_ContentLocale(id)
)
GO


	
CREATE UNIQUE INDEX LUM_IX_WORKFLOWMD ON lum_WorkflowMetaData(contentLocaleId)
GO

	
	
CREATE TABLE lum_WorkflowServiceInstance
(	id CHAR(32) NOT NULL,workflowId NVARCHAR(255) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_WORKFLOWSI PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WORKFLOWSI FOREIGN KEY (workflowId) REFERENCES lum_Workflow(workflowId),
	CONSTRAINT LUM_FK_WORKFLOWSI2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
)
GO

	
	
CREATE UNIQUE INDEX LUM_IX_WORKFLOWSI ON lum_WorkflowServiceInstance(serviceInstanceId)
GO

	
	
CREATE TABLE lum_WorkflowPermission
(	id CHAR(32) NOT NULL,workflowServiceInstanceId CHAR(32) NOT NULL,principalId CHAR(32) NOT NULL,role NVARCHAR(100) NOT NULL,type INT NOT NULL,
	CONSTRAINT LUM_PK_WORKFLOW_PERM PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WORKFLOW_PERM FOREIGN KEY (workflowServiceInstanceId) REFERENCES lum_WorkflowServiceInstance(id),
	CONSTRAINT LUM_FK_WORKFLOW_PERM2 FOREIGN KEY (principalId) REFERENCES lum_Principal(principalId) ON DELETE CASCADE 
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/portal/cluster/multiserver/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/portal/cluster/multiserver/database'
GO

	
CREATE TABLE lum_ClusterTrans
(	transmissionId CHAR(32) NOT NULL,sender NVARCHAR(50) NOT NULL,content IMAGE NOT NULL,sendDateTime DATETIME CONSTRAINT LUM_DF_CLUSTERMESSAGE1 DEFAULT  GETDATE()  NOT NULL,
	CONSTRAINT LUM_PK_CLUSTERTRANS PRIMARY KEY (transmissionId)
)
GO

	
	
	
	
-- For optimizing removal of expired transmissions.
CREATE INDEX LUM_IX_CLUSTERTRANS ON lum_ClusterTrans(sendDateTime)
GO

	
	
CREATE TABLE lum_ClusterTransAck
(	serverId NVARCHAR(255) NOT NULL,lastTransmissionOrder BIGINT NULL,
	CONSTRAINT LUM_PK_CLUSTERTRANSACK PRIMARY KEY (serverId)
)
GO

	
	
CREATE TABLE lum_ClusterTransOrder
(	transmissionId CHAR(32) NOT NULL,
	CONSTRAINT LUM_FK_CLUSTERTRANSORDER FOREIGN KEY (transmissionId) REFERENCES lum_ClusterTrans(transmissionId) ON DELETE CASCADE 
)
GO

	
	
CREATE UNIQUE INDEX LUM_IX_CLUSTERTRANSORDER ON lum_ClusterTransOrder(transmissionId)
GO

	
	
	
	
	ALTER TABLE lum_ClusterTransOrder ADD transmissionOrder BIGINT NOT NULL IDENTITY, CONSTRAINT LUM_PK_CLUSTERTRANSORDER PRIMARY KEY(transmissionOrder)
GO

	
	
	
	
CREATE TABLE lum_ClusterConfig
(	id CHAR(32) NOT NULL,durableMessageTimeToLive INT NOT NULL,
	CONSTRAINT LUM_PK_CLUSTERCONFIG PRIMARY KEY (id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/portal/monitor/impl/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/portal/monitor/impl/database'
GO


	
CREATE TABLE lum_MonCategory
(	id CHAR(32) NOT NULL,name NVARCHAR(50) NOT NULL,description NTEXT NULL,stringResourcePath NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_MONCATEGORY PRIMARY KEY (id)
)
GO

	
	
CREATE TABLE lum_MonEvent
(	id CHAR(32) NOT NULL,categoryId CHAR(32) NOT NULL,eventKey NVARCHAR(255) NOT NULL,name NVARCHAR(50) NOT NULL,description NTEXT NULL,stringResourcePath NVARCHAR(255) NULL,enabled TINYINT NOT NULL,duration BIGINT NOT NULL,
	CONSTRAINT LUM_PK_MONEVENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MONEVENT1 FOREIGN KEY (categoryId) REFERENCES lum_MonCategory(id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_MONEVENT1 ON lum_MonEvent(eventKey)
GO

	
CREATE INDEX LUM_IX_MONEVENT2 ON lum_MonEvent(categoryId)
GO

	
	
CREATE TABLE lum_MonEventData
(	id CHAR(32) NOT NULL,eventId CHAR(32) NOT NULL,startOfPeriod DATETIME NULL,endOfPeriod DATETIME NULL,startOfPeriodMillis BIGINT NULL,endOfPeriodMillis BIGINT NULL,
	CONSTRAINT LUM_PK_MONEVENTDATA PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MONEVENTDATA1 FOREIGN KEY (eventId) REFERENCES lum_MonEvent(id)
)
GO

	
CREATE INDEX LUM_IX_MONEVENTDATA1 ON lum_MonEventData(eventId,startOfPeriodMillis,endOfPeriodMillis)
GO

	
CREATE INDEX LUM_IX_MONEVENTDATA2 ON lum_MonEventData(eventId,startOfPeriod,endOfPeriod)
GO

	
	
CREATE TABLE lum_MonAggregationType
(	id CHAR(32) NOT NULL,aggregationTypeKey NVARCHAR(255) NOT NULL,name NVARCHAR(50) NOT NULL,description NTEXT NULL,stringResourcePath NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_MONAGGREGATIONTYPE PRIMARY KEY (id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_MONAGGREGATIONTYPE1 ON lum_MonAggregationType(aggregationTypeKey)
GO

	
	
CREATE TABLE lum_MonEventAggregType
(	id CHAR(32) NOT NULL,eventId CHAR(32) NOT NULL,aggregationTypeId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_MONEVENTAGGREGTYPE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MONEVENTAGGREGTYPE1 FOREIGN KEY (eventId) REFERENCES lum_MonEvent(id),
	CONSTRAINT LUM_FK_MONEVENTAGGREGTYPE2 FOREIGN KEY (aggregationTypeId) REFERENCES lum_MonAggregationType(id)
)
GO

	
CREATE INDEX LUM_IX_MONEVENTAGGREGTYPE1 ON lum_MonEventAggregType(eventId)
GO

	
CREATE INDEX LUM_IX_MONEVENTAGGREGTYPE2 ON lum_MonEventAggregType(aggregationTypeId)
GO

	
	
CREATE TABLE lum_MonEventDataAggregation
(	id CHAR(32) NOT NULL,eventDataId CHAR(32) NOT NULL,aggregationTypeId CHAR(32) NOT NULL,value NVARCHAR(1000) NULL,
	CONSTRAINT LUM_PK_MONEVENTDATAAGGREG PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MONEVENTDATAAGGREG1 FOREIGN KEY (eventDataId) REFERENCES lum_MonEventData(id),
	CONSTRAINT LUM_FK_MONEVENTDATAAGGREG2 FOREIGN KEY (aggregationTypeId) REFERENCES lum_MonAggregationType(id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_MONEVENTDATAAGGREG1 ON lum_MonEventDataAggregation(eventDataId,aggregationTypeId)
GO

	
	
CREATE TABLE lum_MonMeasureType
(	id CHAR(32) NOT NULL,measureTypeKey NVARCHAR(255) NOT NULL,name NVARCHAR(50) NOT NULL,description NTEXT NULL,unit NVARCHAR(50) NOT NULL,stringResourcePath NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_MONMEASURETYPE PRIMARY KEY (id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_MONMEASURETYPE1 ON lum_MonMeasureType(measureTypeKey)
GO

	
	
CREATE TABLE lum_MonEventDataMeasure
(	id CHAR(32) NOT NULL,eventDataId CHAR(32) NOT NULL,measureTypeId CHAR(32) NOT NULL,sumOfValues DOUBLE PRECISION NOT NULL,minValue DOUBLE PRECISION NOT NULL,maximumValue DOUBLE PRECISION NOT NULL,lastValue DOUBLE PRECISION NOT NULL,sumOfSquares DOUBLE PRECISION NOT NULL,hits BIGINT NOT NULL,firstUpdate DATETIME NOT NULL,lastUpdate DATETIME NOT NULL,
	CONSTRAINT LUM_PK_MONEVENTDATAMEASURE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MONEVENTDATAMEASURE1 FOREIGN KEY (eventDataId) REFERENCES lum_MonEventData(id),
	CONSTRAINT LUM_FK_MONEVENTDATAMEASURE2 FOREIGN KEY (measureTypeId) REFERENCES lum_MonMeasureType(id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_MONEVENTDATAMEASURE1 ON lum_MonEventDataMeasure(eventDataId,measureTypeId)
GO

	

-----------------------------------------------
-- Generated SQL for: lumis/service/activitystream/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/activitystream/database'
GO

	
CREATE TABLE lum_ASAction
(	id NVARCHAR(100) NOT NULL,stringResourcePaths NTEXT NULL,displayName NVARCHAR(50) NOT NULL,
	CONSTRAINT LUM_PK_ASACTIONTYPE PRIMARY KEY (id)
)
GO

	
CREATE TABLE lum_ASObjectType
(	id NVARCHAR(100) NOT NULL,stringResourcePaths NTEXT NULL,displayName NVARCHAR(50) NOT NULL,
	CONSTRAINT LUM_PK_ASOBJECTTYPE PRIMARY KEY (id)
)
GO

	
CREATE TABLE lum_ASActivity
(	id CHAR(32) NOT NULL,streamServiceInstanceId CHAR(32) NOT NULL,originServiceInstanceId CHAR(32) NOT NULL,createdDateTimeMillis BIGINT NOT NULL,createdBy CHAR(32) NOT NULL,customData NTEXT NULL,objectId NVARCHAR(255) NULL,objectTypeId NVARCHAR(100) NULL,objectDisplayName NVARCHAR(255) NULL,objectIntroduction NTEXT NULL,objectImageUrl NVARCHAR(255) NULL,objectUrl NVARCHAR(255) NULL,actor CHAR(32) NULL,actionId NVARCHAR(100) NULL,
	CONSTRAINT LUM_PK_ASACTIVITY PRIMARY KEY (id),
	CONSTRAINT LUM_FK_ASACTIVITY1 FOREIGN KEY (objectTypeId) REFERENCES lum_ASObjectType(id),
	CONSTRAINT LUM_FK_ASACTIVITY2 FOREIGN KEY (actionId) REFERENCES lum_ASAction(id),
	CONSTRAINT LUM_FK_ASACTIVITY3 FOREIGN KEY (streamServiceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId),
	CONSTRAINT LUM_FK_ASACTIVITY4 FOREIGN KEY (originServiceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId) ON DELETE CASCADE 
)
GO

	
CREATE INDEX LUM_IX_ASACTIVITY1 ON lum_ASActivity(actionId)
GO

	
CREATE INDEX LUM_IX_ASACTIVITY2 ON lum_ASActivity(objectTypeId)
GO

	
CREATE INDEX LUM_IX_ASACTIVITY3 ON lum_ASActivity(originServiceInstanceId)
GO

	
CREATE INDEX LUM_IX_ASACTIVITY4 ON lum_ASActivity(streamServiceInstanceId,originServiceInstanceId,createdDateTimeMillis)
GO

	
CREATE INDEX LUM_IX_ASACTIVITY5 ON lum_ASActivity(createdDateTimeMillis,streamServiceInstanceId,originServiceInstanceId)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/album/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/album/database'
GO

	
CREATE TABLE lum_Album
(	albumId CHAR(32) NOT NULL,title NVARCHAR(255) NOT NULL,description NTEXT NULL,imageFile CHAR(32) NULL,
	CONSTRAINT LUM_PK_ALBUM PRIMARY KEY (albumId)
)
GO

	
CREATE TABLE lum_AlbumPhotograph
(	photographId CHAR(32) NOT NULL,albumContentId CHAR(32) NOT NULL,imageFile CHAR(32) NOT NULL,thumbnailImageFile CHAR(32) NULL,title NVARCHAR(255) NULL,credits NVARCHAR(255) NULL,legend NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_ALBUMPHOTOGRAPH PRIMARY KEY (photographId),
	CONSTRAINT LUM_FK_ALBUMPHOTOGRAPH FOREIGN KEY (albumContentId) REFERENCES lum_Content(id)
)
GO

	
CREATE INDEX LUM_IX_ALBUMPHOTOGRAPH ON lum_AlbumPhotograph(albumContentId)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/announcement/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/announcement/database'
GO

	
CREATE TABLE lum_Announcement
(	announcementId CHAR(32) NOT NULL,title NVARCHAR(255) NOT NULL,introduction NTEXT NOT NULL,content NTEXT NULL,priority INT NOT NULL,linkType INT NOT NULL,linkUrl NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_ANNOUNCEMENT PRIMARY KEY (announcementId)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/banner/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/banner/database'
GO

	
CREATE TABLE lum_BannerCategory
(	bannerCategoryId CHAR(32) NOT NULL,name NVARCHAR(100) NOT NULL,description NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_BANNERCAT PRIMARY KEY (bannerCategoryId)
)
GO

	
CREATE TABLE lum_Banner
(	bannerId CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,description NVARCHAR(255) NOT NULL,categoryId CHAR(32) NULL,type INT NOT NULL,pointWeight INT CONSTRAINT LUM_DF_BANNER DEFAULT 1 NOT NULL,htmlContent NTEXT NULL,onClickLinkType INT NULL,onClickPageId NVARCHAR(32) NULL,onClickUrl NVARCHAR(1000) NULL,onClickPopup INT CONSTRAINT LUM_DF_BANNER2 DEFAULT 0 NULL,onClickPopupProperties NVARCHAR(255) NULL,width INT NULL,height INT NULL,image CHAR(32) NULL,
	CONSTRAINT LUM_PK_BANNER PRIMARY KEY (bannerId),
	CONSTRAINT LUM_FK_BANNERCAT FOREIGN KEY (categoryId) REFERENCES lum_BannerCategory(bannerCategoryId)
)
GO

	
CREATE INDEX LUM_IX_BANNER1 ON lum_Banner(categoryId)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/blog/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/blog/database'
GO

	
	
CREATE TABLE lum_Blog
(	id CHAR(32) NOT NULL,title NVARCHAR(255) NOT NULL,introduction NTEXT NULL,owner CHAR(32) NOT NULL,postsperpage INT CONSTRAINT LUM_DF_BLOG_PST_PAG DEFAULT 10 NOT NULL,
	CONSTRAINT LUM_PK_BLOG PRIMARY KEY (id)
)
GO

	
	
CREATE INDEX LUM_IX_BLOG1 ON lum_Blog(owner)
GO

	
	
CREATE TABLE lum_BlogPost
(	id CHAR(32) NOT NULL,blogContentId CHAR(32) NULL,title NVARCHAR(255) NULL,content NTEXT NOT NULL,contentImages CHAR(32) NULL,numberOfComments INT NULL,
	CONSTRAINT LUM_PK_BLOGPOST PRIMARY KEY (id),
	CONSTRAINT LUM_FK_BLOGPOST1 FOREIGN KEY (blogContentId) REFERENCES lum_Content(id)
)
GO

	
	
CREATE INDEX LUM_IX_BLOGPOST1 ON lum_BlogPost(blogContentId)
GO

	
	
CREATE TABLE lum_BlogPostComment
(	id CHAR(32) NOT NULL,blogPostContentId CHAR(32) NULL,commentText NTEXT NOT NULL,
	CONSTRAINT LUM_PK_BLOGPOSTCOMMENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_BLOGPOSTCOMMENT1 FOREIGN KEY (blogPostContentId) REFERENCES lum_Content(id)
)
GO

	
	
CREATE INDEX LUM_IX_BLOGPOSTCOMMENT1 ON lum_BlogPostComment(blogPostContentId)
GO

	

-----------------------------------------------
-- Generated SQL for: lumis/service/callcenteronline/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/callcenteronline/database'
GO

	
	
CREATE TABLE lum_COLAttendingHours
(	id CHAR(32) NOT NULL,dayOfWeek INT NOT NULL,startTime DATETIME NOT NULL,endTime DATETIME NOT NULL,
	CONSTRAINT LUM_PK_COLATTENDINGHOURS PRIMARY KEY (id)
)
GO

	
	
CREATE TABLE lum_COLStandardMessage
(	id CHAR(32) NOT NULL,message NVARCHAR(255) NOT NULL,
	CONSTRAINT LUM_PK_COLSTANDARDMESSAGE PRIMARY KEY (id)
)
GO

	
	
CREATE TABLE lum_COLRequest
(	id CHAR(32) NOT NULL,firstMessage NVARCHAR(255) NOT NULL,clientId CHAR(32) NOT NULL,attendantId CHAR(32) NULL,state INT NOT NULL,chatConversationId CHAR(32) NOT NULL,requestTime DATETIME NOT NULL,attendedTime DATETIME NULL,
	CONSTRAINT LUM_PK_COLREQUEST PRIMARY KEY (id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/categorization/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/categorization/database'
GO

	
CREATE TABLE lum_CategorizationTerm
(	termId CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,description NTEXT NULL,parentTermContentId CHAR(32) NULL,
	CONSTRAINT LUM_PK_CATEGORIZATIONTERM PRIMARY KEY (termId),
	CONSTRAINT LUM_FK_CATEGORIZATIONTERM FOREIGN KEY (parentTermContentId) REFERENCES lum_Content(id)
)
GO

	
	
CREATE INDEX LUM_IX_CATEGORIZATIONTERM ON lum_CategorizationTerm(parentTermContentId)
GO

	

-----------------------------------------------
-- Generated SQL for: lumis/collaboration/chat/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/collaboration/chat/database'
GO

	
	
CREATE TABLE lum_ChatConversation
(	id CHAR(32) NOT NULL,state INT NOT NULL,moderated TINYINT NOT NULL,moderator CHAR(32) NULL,userLimit INT NULL,startTime DATETIME NULL,endTime DATETIME NULL,
	CONSTRAINT LUM_PK_CHATCONVERSATION PRIMARY KEY (id)
)
GO

	
	
CREATE TABLE lum_ChatUser
(	id CHAR(32) NOT NULL,userId CHAR(32) NOT NULL,userSessionId CHAR(32) NOT NULL,conversationId CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,state TINYINT NOT NULL,lastAccessDate DATETIME NOT NULL,blocked TINYINT NOT NULL,
	CONSTRAINT LUM_PK_CHATUSER PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CHATUSER FOREIGN KEY (conversationId) REFERENCES lum_ChatConversation(id)
)
GO

	
	
CREATE TABLE lum_ChatMessage
(	id CHAR(32) NOT NULL,conversationId CHAR(32) NOT NULL,fromUserId CHAR(32) NULL,toUserId CHAR(32) NULL,type INT NOT NULL,tone INT NOT NULL,privateMessage TINYINT NOT NULL,style NVARCHAR(255) NULL,message NTEXT NOT NULL,sentTime DATETIME NOT NULL,moderated TINYINT NOT NULL,approved INT NOT NULL,
	CONSTRAINT LUM_PK_CHATMESSAGE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CHATMESSAGE FOREIGN KEY (conversationId) REFERENCES lum_ChatConversation(id),
	CONSTRAINT LUM_FK_CHATMESSAGE2 FOREIGN KEY (fromUserId) REFERENCES lum_ChatUser(id),
	CONSTRAINT LUM_FK_CHATMESSAGE3 FOREIGN KEY (toUserId) REFERENCES lum_ChatUser(id)
)
GO

	
	
CREATE INDEX LUM_IDX_CHATMSG1 ON lum_ChatMessage(sentTime)
GO

	
	
CREATE INDEX LUM_IDX_CHATMSG2 ON lum_ChatMessage(moderated)
GO

	
	
CREATE INDEX LUM_IDX_CHATMSG3 ON lum_ChatMessage(approved)
GO


	
CREATE INDEX LUM_IDX_CHATMSG4 ON lum_ChatMessage(privateMessage)
GO


	
CREATE INDEX LUM_IDX_CHATMSG5 ON lum_ChatMessage(toUserId)
GO



-----------------------------------------------
-- Generated SQL for: lumis/service/chatroom/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/chatroom/database'
GO

	
	
CREATE TABLE lum_ChatRoom
(	id CHAR(32) NOT NULL,title NVARCHAR(255) NOT NULL,introduction NTEXT NULL,chatConversationId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_CHATROOM PRIMARY KEY (id)
)
GO

	
	
-- join between a chat room and chat conversation
CREATE VIEW lum_vwChatRoom AS
(
	SELECT A.id, A.title, A.introduction, A.chatConversationId, B.state, B.moderated, B.moderator, B.userLimit, B.startTime, B.endTime FROM lum_ChatRoom A, lum_ChatConversation B where A.chatConversationId = B.id
)
GO

	
	

-----------------------------------------------
-- Generated SQL for: lumis/service/comment/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/comment/database'
GO


CREATE TABLE lum_Comment
(	commentId CHAR(32) NOT NULL,targetContentLocaleId CHAR(32) NOT NULL,commentText NTEXT NULL,grade INT NULL,status INT NOT NULL,
	CONSTRAINT LUM_PK_COMMENT PRIMARY KEY (commentId),
	CONSTRAINT LUM_FK_COMMENT FOREIGN KEY (targetContentLocaleId) REFERENCES lum_ContentLocale(id) ON DELETE CASCADE 
)
GO


CREATE INDEX LUM_IX_COMMENT ON lum_Comment(status,targetContentLocaleId)
GO


CREATE TABLE lum_CommentTotal
(	id CHAR(32) NOT NULL,targetContentLocaleId CHAR(32) NOT NULL,averageGrade DOUBLE PRECISION NOT NULL,numberOfComments INT NOT NULL,
	CONSTRAINT LUM_PK_COMMENTTOTAL PRIMARY KEY (id),
	CONSTRAINT LUM_FK_COMMENTTOTAL FOREIGN KEY (targetContentLocaleId) REFERENCES lum_ContentLocale(id) ON DELETE CASCADE 
)
GO


CREATE INDEX LUM_IX_COMMENTTOTAL ON lum_CommentTotal(targetContentLocaleId)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/community/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/community/database'
GO

	
CREATE TABLE lum_Community
(	id CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,description NTEXT NULL,image CHAR(32) NULL,privacy INT NOT NULL,channelId NVARCHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_COMMUNITY PRIMARY KEY (id),
	CONSTRAINT LUM_FK_COMMUNITY1 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_COMMUNITY1 ON lum_Community(channelId)
GO

	
CREATE INDEX LUM_IX_COMMUNITY2 ON lum_Community(privacy,name)
GO

	
	
CREATE TABLE lum_CommMembershipRequest
(	id CHAR(32) NOT NULL,communityId CHAR(32) NOT NULL,requester CHAR(32) NOT NULL,createdDateTime DATETIME NOT NULL,
	CONSTRAINT LUM_PK_COMMMEMBERSHIPREQUEST PRIMARY KEY (id),
	CONSTRAINT LUM_FK_COMMMEMBERSHIPREQUEST1 FOREIGN KEY (communityId) REFERENCES lum_Community(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_COMMMEMBERSHIPREQUEST2 FOREIGN KEY (requester) REFERENCES lum_User(userId) ON DELETE CASCADE 
)
GO

	
CREATE UNIQUE INDEX LUM_IX_COMMMEMBERSHIPREQUEST1 ON lum_CommMembershipRequest(communityId,requester)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/contact/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/contact/database'
GO

	
CREATE TABLE lum_Contact
(	id CHAR(32) NOT NULL,firstName NVARCHAR(255) NOT NULL,lastName NVARCHAR(255) NULL,title NVARCHAR(255) NULL,company NVARCHAR(255) NULL,email NVARCHAR(255) NULL,telephoneHome NVARCHAR(255) NULL,telephoneWork NVARCHAR(255) NULL,telephoneCell NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_CONTACT PRIMARY KEY (id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/contactus/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/contactus/database'
GO

	
CREATE TABLE lum_ContactUs
(	id CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,email NVARCHAR(255) NOT NULL,subject NVARCHAR(255) NOT NULL,message NTEXT NOT NULL,state INT NOT NULL,categoryContentId CHAR(32) NULL,
	CONSTRAINT LUM_PK_CONTACTUS PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CONTACTUS FOREIGN KEY (categoryContentId) REFERENCES lum_Content(id)
)
GO

	
CREATE INDEX LUM_IX_CONTACTUS ON lum_ContactUs(categoryContentId)
GO

	
CREATE TABLE lum_ContactUsCategory
(	id CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,
	CONSTRAINT LUM_PK_CONTACTUSCATEGORY PRIMARY KEY (id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/event/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/event/database'
GO

	
CREATE TABLE lum_Event
(	id CHAR(32) NOT NULL,title NVARCHAR(255) NOT NULL,introduction NTEXT NULL,introductionImage CHAR(32) NULL,content NTEXT NOT NULL,contentImage CHAR(32) NULL,locale NVARCHAR(255) NULL,eventStartDateTime DATETIME NOT NULL,eventEndDateTime DATETIME NULL,
	CONSTRAINT LUM_PK_EVENT PRIMARY KEY (id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/document/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/document/database'
GO

	
CREATE TABLE lum_Document
(	id CHAR(32) NOT NULL,type INT NOT NULL,documentFile CHAR(32) NULL,parentFolder CHAR(32) NULL,title NVARCHAR(255) NULL,description NVARCHAR(500) NULL,
	CONSTRAINT LUM_PK_DOCUMENT PRIMARY KEY (id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/faq/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/faq/database'
GO

	
CREATE TABLE lum_Faq
(	faqId CHAR(32) NOT NULL,question NVARCHAR(255) NOT NULL,answer NTEXT NULL,priority INT NULL,
	CONSTRAINT LUM_PK_FAQ PRIMARY KEY (faqId)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/forum/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/forum/database'
GO

	
CREATE TABLE lum_ForumCategory
(	id CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,description NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_FORUMCATEGORY PRIMARY KEY (id)
)
GO

	
CREATE TABLE lum_Forum
(	id CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,description NTEXT NULL,state INT NOT NULL,moderator CHAR(32) NULL,numberOfTopics INT NULL,numberOfMessages INT NULL,lastMessageDate DATETIME NULL,lastMessageUser CHAR(32) NULL,categoryContentId CHAR(32) NULL,
	CONSTRAINT LUM_PK_FORUM PRIMARY KEY (id),
	CONSTRAINT LUM_FK_FORUM1 FOREIGN KEY (categoryContentId) REFERENCES lum_Content(id)
)
GO

	
CREATE TABLE lum_ForumTopic
(	id CHAR(32) NOT NULL,topic NVARCHAR(255) NOT NULL,state INT NOT NULL,numberOfMessages INT NOT NULL,lastMessageDate DATETIME NULL,lastMessageUser CHAR(32) NULL,numberOfViews INT NULL,firstMessageId CHAR(32) NULL,forumContentId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_FORUMTOPIC PRIMARY KEY (id),
	CONSTRAINT LUM_FK_FORUMTOPIC1 FOREIGN KEY (forumContentId) REFERENCES lum_Content(id)
)
GO

	
CREATE TABLE lum_ForumMessage
(	id CHAR(32) NOT NULL,subject NVARCHAR(255) NULL,message NTEXT NOT NULL,datePosted DATETIME NOT NULL,postedByUser CHAR(32) NOT NULL,dateEdited DATETIME NULL,topicContentId CHAR(32) NOT NULL,attachmentFiles CHAR(32) NULL,messageImages CHAR(32) NULL,
	CONSTRAINT LUM_PK_FORUMMESSAGE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_FORUMMESSAGE1 FOREIGN KEY (topicContentId) REFERENCES lum_Content(id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/hierarchicalcontent/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/hierarchicalcontent/database'
GO

	
CREATE TABLE lum_HierarchicalContent
(	id CHAR(32) NOT NULL,title NVARCHAR(255) NOT NULL,introduction NTEXT NULL,image CHAR(32) NULL,parentContentId CHAR(32) NULL,position INT NOT NULL,type INT NOT NULL,linkContent NTEXT NULL,linkDocumentId CHAR(32) NULL,linkOpeningType INT NULL,linkPageId NVARCHAR(32) NULL,linkUrl NVARCHAR(255) NULL,linkPopUpProperties NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_HIERARCHICALCONTENT PRIMARY KEY (id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/htmlcontent/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/htmlcontent/database'
GO

	
CREATE TABLE lum_HCHtmlContent
(	id CHAR(32) NOT NULL,title NVARCHAR(255) NOT NULL,content NTEXT NOT NULL,
	CONSTRAINT LUM_PK_HCHTMLCONTENT PRIMARY KEY (id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/link/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/link/database'
GO

	
CREATE TABLE lum_LinkCategory
(	linkCategoryId CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,description NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_LINK_CATEGORY PRIMARY KEY (linkCategoryId)
)
GO

	
CREATE TABLE lum_Link
(	linkId CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,introduction NTEXT NULL,image CHAR(32) NULL,categoryId CHAR(32) NULL,content NTEXT NULL,priority INT NOT NULL,linkType INT NOT NULL,linkUrl NVARCHAR(255) NULL,linkPageId NVARCHAR(32) NULL,linkClickPopup INT CONSTRAINT LUM_DF_LINK DEFAULT 0 NOT NULL,linkPopupProperties NVARCHAR(255) NULL,linkDocumentId CHAR(32) NULL,
	CONSTRAINT LUM_PK_LINK PRIMARY KEY (linkId),
	CONSTRAINT LUM_FK_LINKCAT FOREIGN KEY (categoryId) REFERENCES lum_LinkCategory(linkCategoryId)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/mailmarketing/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/mailmarketing/database'
GO

	
	
CREATE TABLE lum_MMktgCategory
(	id CHAR(32) NOT NULL,name NVARCHAR(100) NOT NULL,description NVARCHAR(255) NULL,position INT NOT NULL,
	CONSTRAINT LUM_PK_MMKTGCATEGORY PRIMARY KEY (id)
)
GO


	
CREATE TABLE lum_MMktgSubscription
(	id CHAR(32) NOT NULL,userId CHAR(32) NULL,email NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_MMKTGSUBSCRIPTION PRIMARY KEY (id)
)
GO

	
	
CREATE TABLE lum_MMktgSubscriptionCat
(	id CHAR(32) NOT NULL,subscriptionId CHAR(32) NOT NULL,categoryId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_MMKTGCATSUBSCRIPTION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MMKTGCATSUBSCRIPTION1 FOREIGN KEY (subscriptionId) REFERENCES lum_MMktgSubscription(id),
	CONSTRAINT LUM_FK_MMKTGCATSUBSCRIPTION2 FOREIGN KEY (categoryId) REFERENCES lum_MMktgCategory(id)
)
GO

	
	
CREATE TABLE lum_MMktgBulletin
(	id CHAR(32) NOT NULL,senderEmail NVARCHAR(255) NOT NULL,title NVARCHAR(255) NOT NULL,subject NVARCHAR(255) NOT NULL,content NTEXT NOT NULL,sendDateTime DATETIME NOT NULL,status INT NOT NULL,
	CONSTRAINT LUM_PK_MMKTGBULLETIN PRIMARY KEY (id)
)
GO

	
	
CREATE TABLE lum_MMktgBulletinCat
(	id CHAR(32) NOT NULL,bulletinId CHAR(32) NOT NULL,categoryId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_MMKTGBULLETINCAT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MMKTGBULLETINCAT1 FOREIGN KEY (bulletinId) REFERENCES lum_MMktgBulletin(id),
	CONSTRAINT LUM_FK_MMKTGBULLETINCAT2 FOREIGN KEY (categoryId) REFERENCES lum_MMktgCategory(id)
)
GO

	
	
	

-----------------------------------------------
-- Generated SQL for: lumis/service/media/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/media/database'
GO

	
CREATE TABLE lum_Media
(	id CHAR(32) NOT NULL,type INT NOT NULL,mediaFile CHAR(32) NULL,parentFolder CHAR(32) NULL,title NVARCHAR(255) NULL,credits NVARCHAR(255) NULL,legend NVARCHAR(255) NULL,description NTEXT NULL,
	CONSTRAINT LUM_PK_MEDIA PRIMARY KEY (id)
)
GO

	
CREATE INDEX LUM_IX_MEDIA1 ON lum_Media(parentFolder)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/mediaalbum/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/mediaalbum/database'
GO

	
CREATE TABLE lum_MAAlbum
(	albumId CHAR(32) NOT NULL,title NVARCHAR(255) NOT NULL,description NTEXT NULL,imageFile CHAR(32) NULL,
	CONSTRAINT LUM_PK_MAALBUM PRIMARY KEY (albumId)
)
GO

	
CREATE TABLE lum_MAMedia
(	mediaId CHAR(32) NOT NULL,albumContentId CHAR(32) NOT NULL,mediaFile CHAR(32) NOT NULL,thumbnailMediaFile CHAR(32) NULL,title NVARCHAR(255) NOT NULL,position INT NOT NULL,credits NVARCHAR(255) NULL,legend NVARCHAR(255) NULL,lastModifiedDateTime BIGINT NOT NULL,approved TINYINT NOT NULL,
	CONSTRAINT LUM_PK_MAMEDIA PRIMARY KEY (mediaId),
	CONSTRAINT LUM_FK_MAMEDIA1 FOREIGN KEY (albumContentId) REFERENCES lum_Content(id)
)
GO

	
CREATE INDEX LUM_IX_MAMEDIA1 ON lum_MAMedia(albumContentId,position,lastModifiedDateTime)
GO

	
CREATE VIEW lum_vwMAAlbum AS
(
	
			SELECT
				a.albumId,
				a.imageFile,
				a.title,
				a.description
			FROM
				lum_MAAlbum a
			INNER JOIN
				lum_ContentVersion cv
				ON cv.itemId = a.albumId
			INNER JOIN
				lum_ContentLocale cl
				ON cv.id = cl.publishedVersionId
			WHERE 
				EXISTS 
					(SELECT 
						* 
					FROM 
						lum_MAMedia m 
					WHERE 
						m.albumContentId = cl.contentId 
						AND m.approved = 1)
		
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/navigation/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/navigation/database'
GO

	
CREATE TABLE lum_Navigation
(	navigationId CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,description NVARCHAR(255) NULL,position INT CONSTRAINT LUM_DF_NAVIGATION1 DEFAULT 0 NOT NULL,parentId CHAR(32) NULL,type INT CONSTRAINT LUM_DF_NAVIGATION2 DEFAULT 1 NOT NULL,typeClassName NVARCHAR(255) NULL,openingType INT CONSTRAINT LUM_DF_NAVIGATION3 DEFAULT 0 NOT NULL,popUpProperties NVARCHAR(255) NULL,url NVARCHAR(255) NULL,channelId NVARCHAR(32) NULL,channelTreeMaxLevels INT NULL,hideRootChannel INT CONSTRAINT LUM_DF_NAVIGATION5 DEFAULT 0 NOT NULL,image CHAR(32) NULL,
	CONSTRAINT LUM_PK_NAVIGATION PRIMARY KEY (navigationId)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/news/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/news/database'
GO

	
CREATE TABLE lum_News
(	id CHAR(32) NOT NULL,title NVARCHAR(255) NOT NULL,introduction NTEXT NULL,introductionImage CHAR(32) NULL,content NTEXT NOT NULL,contentImage CHAR(32) NULL,
	CONSTRAINT LUM_PK_NEWS PRIMARY KEY (id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/newsletter/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/newsletter/database'
GO

	
CREATE TABLE lum_NLCategory
(	id CHAR(32) NOT NULL,name NVARCHAR(100) NOT NULL,description NVARCHAR(255) NULL,position INT NOT NULL,maxItems INT NOT NULL,serviceId NVARCHAR(250) NOT NULL,sourceId NVARCHAR(250) NOT NULL,catServiceInstId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_NLCATEGORY PRIMARY KEY (id)
)
GO

	
	
CREATE TABLE lum_NLModel
(	id CHAR(32) NOT NULL,name NVARCHAR(100) NOT NULL,description NTEXT NULL,senderEmail NVARCHAR(100) NOT NULL,subject NVARCHAR(200) NOT NULL,introduction NTEXT NULL,xslTextMode NVARCHAR(255) NOT NULL,xslHtmlMode NVARCHAR(255) NOT NULL,website NVARCHAR(255) NULL,introductionText NTEXT NULL,locale VARCHAR(10) NOT NULL,
	CONSTRAINT LUM_PK_NLMODEL PRIMARY KEY (id),
	CONSTRAINT LUM_FK_NLMODEL1 FOREIGN KEY (locale) REFERENCES lum_Locale(locale)
)
GO

	
	
CREATE TABLE lum_NLModelCat
(	id CHAR(32) NOT NULL,modelId CHAR(32) NOT NULL,categoryId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_NLMODELCAT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_NLMODELCAT1 FOREIGN KEY (modelId) REFERENCES lum_NLModel(id),
	CONSTRAINT LUM_FK_NLMODELCAT2 FOREIGN KEY (categoryId) REFERENCES lum_NLCategory(id)
)
GO

	
	
CREATE TABLE lum_NLSchedule
(	id CHAR(32) NOT NULL,modelId CHAR(32) NOT NULL,status INT NOT NULL,executionStatus INT CONSTRAINT LUM_DF_SCHED1 DEFAULT 0 NOT NULL,startDate DATETIME NOT NULL,endDate DATETIME NULL,processTime DATETIME NOT NULL,lastProcessDateTime DATETIME NULL,nextProcessDateTime DATETIME NULL,scheduleType INT NOT NULL,scheduleWeekDay INT NULL,scheduleMonthDay INT NULL,
	CONSTRAINT LUM_PK_NLSCHEDULE PRIMARY KEY (id)
)
GO

	
	
CREATE TABLE lum_NLSubscription
(	id CHAR(32) NOT NULL,userId CHAR(32) NULL,emailFormat INT NOT NULL,email NVARCHAR(255) NULL,locale VARCHAR(10) NOT NULL,
	CONSTRAINT LUM_PK_NLSUBSCRIPTION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_NLSUBSCRIPTION1 FOREIGN KEY (locale) REFERENCES lum_Locale(locale)
)
GO

	
	
CREATE TABLE lum_NLSubscriptionCat
(	id CHAR(32) NOT NULL,subscriptionId CHAR(32) NOT NULL,categoryId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_NLCATSUBSCRIPTION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_NLCATSUBSCRIPTION1 FOREIGN KEY (subscriptionId) REFERENCES lum_NLSubscription(id),
	CONSTRAINT LUM_FK_NLCATSUBSCRIPTION2 FOREIGN KEY (categoryId) REFERENCES lum_NLCategory(id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/pagepersonalization/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/pagepersonalization/database'
GO

	
CREATE TABLE lum_PPWidget
(	id CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,description NTEXT NULL,icon CHAR(32) NULL,interfaceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_PPWIDGET PRIMARY KEY (id),
	CONSTRAINT LUM_FK_PPWIDGET1 FOREIGN KEY (interfaceInstanceId) REFERENCES lum_InterfaceInstance(interfaceInstanceId)
)
GO

	
	
CREATE TABLE lum_PPWidgetTmpDef
(	holderInstanceId CHAR(32) NOT NULL,typeOfConf NVARCHAR(1) NOT NULL,widgets NTEXT NULL,
	CONSTRAINT LUM_PK_PPWIDGETTMPDEF PRIMARY KEY (holderInstanceId,typeOfConf)
)
GO

	
	
CREATE TABLE lum_PPIIToBeDeleted
(	interfaceInstanceId CHAR(32) NOT NULL,whenToDelete DATETIME NOT NULL,
	CONSTRAINT LUM_PK_PPIITOBEDELETED PRIMARY KEY (interfaceInstanceId),
	CONSTRAINT LUM_FK_PPIITOBEDELETED1 FOREIGN KEY (interfaceInstanceId) REFERENCES lum_InterfaceInstance(interfaceInstanceId)
)
GO

	

-----------------------------------------------
-- Generated SQL for: lumis/service/portalmanagement/importprincipal/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/portalmanagement/importprincipal/database'
GO

	
CREATE TABLE lum_ImpPrincReader
(	id CHAR(32) NOT NULL,origin NVARCHAR(255) NOT NULL,configFile NVARCHAR(255) NOT NULL,outputFile NVARCHAR(255) NOT NULL,lastRun DATETIME NULL,schedule TINYINT CONSTRAINT LUM_DF_IMPPRINCREADER1 DEFAULT 0 NOT NULL,
	CONSTRAINT LUM_PK_IMPPRINCREADER PRIMARY KEY (id)
)
GO

	
CREATE TABLE lum_ImpPrincWriter
(	id CHAR(32) NOT NULL,origin NVARCHAR(255) NOT NULL,inputFile NVARCHAR(255) NOT NULL,lastRun DATETIME NULL,ifExistsInDestination INT NULL,ifDoesNotExistInDestination INT NULL,ifDoesNotExistInSource INT NULL,schedule TINYINT CONSTRAINT LUM_DF_IMPPRINCWRITER1 DEFAULT 0 NOT NULL,
	CONSTRAINT LUM_PK_IMPPRINCWRITER PRIMARY KEY (id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/questionnaire/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/questionnaire/database'
GO

	
	
CREATE TABLE lum_QUQuestionnaire
(	id CHAR(32) NOT NULL,title NVARCHAR(255) NOT NULL,allowAnswerMoreThanOnce TINYINT NOT NULL,anonymous TINYINT NOT NULL,
	CONSTRAINT LUM_PK_QUQUESTIONNAIRE PRIMARY KEY (id)
)
GO

	
	
CREATE TABLE lum_QUQuestion
(	id CHAR(32) NOT NULL,title NVARCHAR(255) NOT NULL,questionnaireId CHAR(32) NOT NULL,type NVARCHAR(20) NOT NULL,configuration NTEXT NULL,position INT NOT NULL,required TINYINT NOT NULL,
	CONSTRAINT LUM_PK_QUQUESTION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_QUQUESTION1 FOREIGN KEY (questionnaireId) REFERENCES lum_QUQuestionnaire(id)
)
GO

	
	
CREATE TABLE lum_QUAnswer
(	id CHAR(32) NOT NULL,answerDate DATETIME NOT NULL,userId CHAR(32) NOT NULL,answerValues NTEXT NOT NULL,questionnaireId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_QUANSWER PRIMARY KEY (id),
	CONSTRAINT LUM_FK_QUANSWER1 FOREIGN KEY (questionnaireId) REFERENCES lum_QUQuestionnaire(id)
)
GO

	

-----------------------------------------------
-- Generated SQL for: lumis/service/report/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/report/database'
GO

	
CREATE TABLE lum_RepReportServInst
(	id CHAR(32) NOT NULL,reportId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_REPREPORTSERVINST PRIMARY KEY (id),
	CONSTRAINT LUM_FK_REPREPORTSERVINST1 FOREIGN KEY (reportId) REFERENCES lum_RepReport(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_REPREPORTSERVINST2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_REPREPORTSERVINST1 ON lum_RepReportServInst(serviceInstanceId,reportId)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/resourcescheduler/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/resourcescheduler/database'
GO


	
CREATE TABLE lum_ResSchdResource
(	id CHAR(32) NOT NULL,name NVARCHAR(100) NOT NULL,description NTEXT NULL,resourceType INT NOT NULL,
	CONSTRAINT LUM_PK_RESSCHDRESOURCE PRIMARY KEY (id)
)
GO


	
CREATE TABLE lum_ResSchdSchedule
(	id CHAR(32) NOT NULL,title NVARCHAR(100) NOT NULL,description NTEXT NULL,roomId CHAR(32) NOT NULL,startDateTime DATETIME NOT NULL,endDateTime DATETIME NOT NULL,principalId CHAR(32) NULL,
	CONSTRAINT LUM_PK_RESSCHDSCHEDULE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_RESSCHDSCHEDULE1 FOREIGN KEY (roomId) REFERENCES lum_ResSchdResource(id)
)
GO


	
CREATE TABLE lum_ResSchdScheduleRes
(	id CHAR(32) NOT NULL,scheduleId CHAR(32) NOT NULL,resourceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_RESSCHDSCHEDULERES PRIMARY KEY (id),
	CONSTRAINT LUM_FK_RESSCHDSCHEDULERES1 FOREIGN KEY (scheduleId) REFERENCES lum_ResSchdSchedule(id),
	CONSTRAINT LUM_FK_RESSCHDSCHEDULERES2 FOREIGN KEY (resourceId) REFERENCES lum_ResSchdResource(id)
)
GO



-----------------------------------------------
-- Generated SQL for: lumis/service/rss/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/rss/database'
GO

	
CREATE TABLE lum_Rss
(	id CHAR(32) NOT NULL,name NVARCHAR(255) NOT NULL,header NTEXT NOT NULL,position INT CONSTRAINT LUM_DF_RSS1 DEFAULT 0 NULL,serviceId NVARCHAR(250) NOT NULL,servInstanceId CHAR(32) NOT NULL,source NVARCHAR(255) NULL,category NVARCHAR(255) NULL,title NVARCHAR(255) NULL,pubDate NVARCHAR(255) NULL,description NVARCHAR(255) NULL,link NVARCHAR(255) NULL,maxRows INT NULL,filter NVARCHAR(255) NULL,path NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_RSS PRIMARY KEY (id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/sendtofriend/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/sendtofriend/database'
GO

	
CREATE TABLE lum_SendToFriend
(	id CHAR(32) NOT NULL,toName NVARCHAR(255) NOT NULL,toEmail NVARCHAR(255) NOT NULL,fromName NVARCHAR(255) NOT NULL,fromEmail NVARCHAR(255) NOT NULL,message NTEXT NOT NULL,link NVARCHAR(255) NOT NULL,linkTitle NTEXT NOT NULL,
	CONSTRAINT LUM_PK_SENDTOFRIEND PRIMARY KEY (id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/seo/robotstxt/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/seo/robotstxt/database'
GO

	
	
CREATE TABLE lum_RbtsUserAgent
(	id CHAR(32) NOT NULL,crawlDelay INT NULL,requestRate NVARCHAR(255) NULL,userAgent NVARCHAR(255) NOT NULL,visitTime NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_RBTSUSERAGENT PRIMARY KEY (id)
)
GO

	
CREATE INDEX LUM_IX_RBTSUSERAGENT ON lum_RbtsUserAgent(userAgent)
GO

	
	
CREATE TABLE lum_RbtsUserAgentPerm
(	id CHAR(32) NOT NULL,type INT NOT NULL,userAgentId CHAR(32) NOT NULL,value NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_RBTSUSERAGENTPERM PRIMARY KEY (id),
	CONSTRAINT LUM_FK_RBTSUSERAGENT FOREIGN KEY (userAgentId) REFERENCES lum_RbtsUserAgent(id)
)
GO

	
	
CREATE TABLE lum_RbtsSitemap
(	id CHAR(32) NOT NULL,url NVARCHAR(255) NOT NULL,
	CONSTRAINT LUM_PK_RBTSSITEMAP PRIMARY KEY (id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/seo/sitemap/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/seo/sitemap/database'
GO

	
CREATE TABLE lum_SitemapChannel
(	id CHAR(32) NOT NULL,channelId NVARCHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_SITEMAPCHANNEL PRIMARY KEY (id)
)
GO




-----------------------------------------------
-- Generated SQL for: lumis/service/simplecontent/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/simplecontent/database'
GO

	
CREATE TABLE lum_SCSimpleContent
(	id CHAR(32) NOT NULL,title NVARCHAR(255) NOT NULL,content NTEXT NOT NULL,image CHAR(32) NULL,
	CONSTRAINT LUM_PK_SCSIMPLECONTENT PRIMARY KEY (id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/likeit/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/likeit/database'
GO

	
CREATE TABLE lum_LikeIt
(	id CHAR(32) NOT NULL,itemId NVARCHAR(255) NOT NULL,itemName NVARCHAR(255) NULL,itemUrl NVARCHAR(255) NULL,itemServiceInstanceId CHAR(32) NULL,likeDate DATETIME NOT NULL,userId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NULL,
	CONSTRAINT LUM_PK_LIKEIT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_LIKEIT1 FOREIGN KEY (itemServiceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_LIKEIT2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_LIKEIT1 ON lum_LikeIt(serviceInstanceId,itemId,userId)
GO

	
CREATE INDEX LUM_IX_LIKEIT2 ON lum_LikeIt(itemServiceInstanceId)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/commentit/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/commentit/database'
GO

	
CREATE TABLE lum_CommentIt
(	id CHAR(32) NOT NULL,itemId NVARCHAR(255) NOT NULL,itemName NVARCHAR(255) NULL,itemUrl NVARCHAR(255) NULL,itemServiceInstanceId CHAR(32) NULL,commentText NTEXT NOT NULL,commentDate DATETIME NOT NULL,userId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NULL,
	CONSTRAINT LUM_PK_COMMENTIT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_COMMENTIT1 FOREIGN KEY (itemServiceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_COMMENTIT2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
)
GO

	CREATE INDEX LUM_IX_COMMENTIT1 ON lum_CommentIt(serviceInstanceId, itemId, commentDate DESC)
GO

	
CREATE INDEX LUM_IX_COMMENTIT2 ON lum_CommentIt(itemServiceInstanceId)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/socialnetworkservices/microblog/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/socialnetworkservices/microblog/database'
GO


	
CREATE TABLE lum_MBPost
(	postId CHAR(32) NOT NULL,creation DATETIME NOT NULL,owner CHAR(32) NOT NULL,post NVARCHAR(255) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_MBPOST PRIMARY KEY (postId),
	CONSTRAINT LUM_FK_MBPOST1 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId) ON DELETE CASCADE 
)
GO

	
CREATE INDEX LUM_IX_MBPOST1 ON lum_MBPost(serviceInstanceId)
GO

	
	
CREATE TABLE lum_MBComment
(	id CHAR(32) NOT NULL,postComment NVARCHAR(255) NOT NULL,author CHAR(32) NOT NULL,postId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,creation DATETIME NOT NULL,removed TINYINT NULL,
	CONSTRAINT LUM_PK_MBCOMMENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MBCOMMENT1 FOREIGN KEY (postId) REFERENCES lum_MBPost(postId) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_MBCOMMENT2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
)
GO

	
CREATE INDEX LUM_IX_MBCOMMENT1 ON lum_MBComment(postId)
GO

	
CREATE INDEX LUM_IX_MBCOMMENT2 ON lum_MBComment(serviceInstanceId)
GO

	
	
CREATE TABLE lum_MBPostAttachment
(	id CHAR(32) NOT NULL,fileId CHAR(32) NULL,postId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_MBPOSTATTACHMENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MBPOSTATTACHMENT1 FOREIGN KEY (postId) REFERENCES lum_MBPost(postId),
	CONSTRAINT LUM_FK_MBPOSTATTACHMENT2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
)
GO

	
CREATE INDEX LUM_IX_MBPOSTATTACHMENT1 ON lum_MBPostAttachment(postId)
GO

	
CREATE INDEX LUM_IX_MBPOSTATTACHMENT2 ON lum_MBPostAttachment(serviceInstanceId)
GO

	
	
CREATE TABLE lum_MBHash
(	hash NVARCHAR(255) NOT NULL,postId CHAR(32) NOT NULL,stemmed NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_MBHASH PRIMARY KEY (hash,postId),
	CONSTRAINT LUM_FK_MBHASH1 FOREIGN KEY (postId) REFERENCES lum_MBPost(postId) ON DELETE CASCADE 
)
GO

	
CREATE INDEX LUM_IX_MBHASH1 ON lum_MBHash(postId)
GO

	
	
CREATE TABLE lum_MBUserFollows
(	id CHAR(32) NOT NULL,userId CHAR(32) NOT NULL,followedUserId CHAR(32) NOT NULL,socialNetworkId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_MBUSERFOLLOWS PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MBUSERFOLLOWS1 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId) ON DELETE CASCADE 
)
GO

	
CREATE INDEX LUM_IX_MBUSERFOLLOWS1 ON lum_MBUserFollows(serviceInstanceId)
GO

	

-----------------------------------------------
-- Generated SQL for: lumis/service/socialnetworkservices/socialprofile/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/socialnetworkservices/socialprofile/database'
GO

	
CREATE TABLE lum_SNSocialProfile
(	socialProfileId CHAR(32) NOT NULL,lumUserId CHAR(32) NOT NULL,description NTEXT NULL,photo CHAR(32) NULL,title NVARCHAR(255) NULL,departament NVARCHAR(255) NULL,locale NVARCHAR(100) NULL,areaCode NVARCHAR(3) NULL,phone NVARCHAR(8) NULL,email NVARCHAR(255) NULL,address NTEXT NULL,otherContacts NTEXT NULL,birthday DATETIME NULL,sex INT NOT NULL,name NVARCHAR(100) NOT NULL,resume CHAR(32) NULL,
	CONSTRAINT LUM_PK_SNSOCIALPROFILE PRIMARY KEY (socialProfileId),
	CONSTRAINT LUM_FK_SNSOCIALPROFILE1 FOREIGN KEY (lumUserId) REFERENCES lum_User(userId)
)
GO

	
CREATE INDEX LUM_IX_SNSOCIALPROFILE1 ON lum_SNSocialProfile(lumUserId)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/vote/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/vote/database'
GO

	
CREATE TABLE lum_VoteQuestion
(	id CHAR(32) NOT NULL,question NVARCHAR(255) NOT NULL,onlyOneVotePerUser INT NOT NULL,optionType INT NOT NULL,numberOfOptions INT NOT NULL,numberOfVotes INT NOT NULL,
	CONSTRAINT LUM_PK_VOTEQUESTION PRIMARY KEY (id)
)
GO

	
CREATE TABLE lum_VoteOption
(	optionId CHAR(32) NOT NULL,questionId CHAR(32) NOT NULL,optionTitle NVARCHAR(255) NOT NULL,position INT NOT NULL,numberOfVotes INT NOT NULL,
	CONSTRAINT LUM_PK_VOTEOPTION PRIMARY KEY (optionId),
	CONSTRAINT LUM_FK_VOTEOPTION1 FOREIGN KEY (questionId) REFERENCES lum_VoteQuestion(id)
)
GO

	
CREATE TABLE lum_VoteLog
(	id CHAR(32) NOT NULL,questionId CHAR(32) NOT NULL,userId CHAR(32) NOT NULL,logDate DATETIME NOT NULL,
	CONSTRAINT LUM_PK_VOTELOG PRIMARY KEY (id),
	CONSTRAINT LUM_FK_VOTELOG1 FOREIGN KEY (questionId) REFERENCES lum_VoteQuestion(id) ON DELETE CASCADE 
)
GO

	
	
CREATE INDEX LUM_IDX_VOTELOG1 ON lum_VoteLog(userId)
GO

	
	
CREATE TABLE lum_VoteOptionLog
(	id CHAR(32) NOT NULL,voteLogId CHAR(32) NOT NULL,optionId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_VOTEOPTIONLOG PRIMARY KEY (id),
	CONSTRAINT LUM_FK_VOTEOPTIONLOG1 FOREIGN KEY (voteLogId) REFERENCES lum_VoteLog(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_VOTEOPTIONLOG2 FOREIGN KEY (optionId) REFERENCES lum_VoteOption(optionId) ON DELETE CASCADE 
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/wiki/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/wiki/database'
GO

	
CREATE TABLE lum_WikiArticle
(	id CHAR(32) NOT NULL,title NVARCHAR(255) NOT NULL,content NTEXT NULL,mainArticle TINYINT NOT NULL,
	CONSTRAINT LUM_PK_ARTICLE_ID PRIMARY KEY (id)
)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/wsrp/consumer/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/wsrp/consumer/database'
GO

	
CREATE TABLE lum_WsrpCProducer
(	id CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,producerURL NVARCHAR(255) NOT NULL,producerVersion NVARCHAR(10) NOT NULL,producerMarkupEndpoint NVARCHAR(255) NOT NULL,producerStatus INT NOT NULL,serviceDescriptionLastModified DATETIME NOT NULL,serviceDescription NTEXT NOT NULL,
	CONSTRAINT LUM_PK_WSRPCPRODUCER PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WSRPCPRODUCER FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_WSRPCPRODUCER ON lum_WsrpCProducer(serviceInstanceId)
GO

	
CREATE TABLE lum_WsrpCRegistration
(	registrationHandle CHAR(32) NOT NULL,producerEntityId CHAR(32) NOT NULL,registrationState IMAGE NULL,
	CONSTRAINT LUM_PK_WSRPCREGISTRATION PRIMARY KEY (registrationHandle),
	CONSTRAINT LUM_FK_WSRPCREGISTRATION FOREIGN KEY (producerEntityId) REFERENCES lum_WsrpCProducer(id)
)
GO

	
	
CREATE UNIQUE INDEX LUM_UN_WSRPCREGISTRATION ON lum_WsrpCRegistration(producerEntityId)
GO

	
	
CREATE TABLE lum_WsrpCClonedPortlet
(	portletHandle CHAR(32) NOT NULL,name NVARCHAR(64) NOT NULL,registrationHandle CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_WSRPCCLONEDPORTLET PRIMARY KEY (portletHandle),
	CONSTRAINT LUM_FK_WSRPCCLONEDPORTLET FOREIGN KEY (registrationHandle) REFERENCES lum_WsrpCRegistration(registrationHandle)
)
GO

	
CREATE TABLE lum_WsrpCClonedTgtInst
(	portletHandle CHAR(32) NOT NULL,interfaceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_WSRPCCLONEDTGTINST PRIMARY KEY (portletHandle,interfaceInstanceId),
	CONSTRAINT LUM_FK_WSRPCCLONEDTGTINST FOREIGN KEY (portletHandle) REFERENCES lum_WsrpCClonedPortlet(portletHandle),
	CONSTRAINT LUM_FK_WSRPCCLONEDTGTINST2 FOREIGN KEY (interfaceInstanceId) REFERENCES lum_InterfaceInstance(interfaceInstanceId)
)
GO

	
CREATE INDEX LUM_UN_WSRPCCLONEDTGTINST ON lum_WsrpCClonedTgtInst(interfaceInstanceId)
GO


-----------------------------------------------
-- Generated SQL for: lumis/service/wsrp/producer/database
-----------------------------------------------
PRINT ''
PRINT ''
PRINT 'Executing SQL for: lumis/service/wsrp/producer/database'
GO

	
CREATE TABLE lum_WsrpPProducer
(	id CHAR(32) NOT NULL,producerKey NVARCHAR(255) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,version NVARCHAR(10) NOT NULL,enabled TINYINT NOT NULL,httpAuthenticator NVARCHAR(100) NULL,requiresRegistration TINYINT NOT NULL,supportsInbandRegistration TINYINT NOT NULL,maxInbandLifetime BIGINT NOT NULL,
	CONSTRAINT LUM_PK_WSRPPPRODUCER PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WSRPPPRODUCER1 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_WSRPPPRODUCER1 ON lum_WsrpPProducer(serviceInstanceId)
GO

	
CREATE UNIQUE INDEX LUM_IX_WSRPPPRODUCER2 ON lum_WsrpPProducer(producerKey)
GO
	
	
CREATE TABLE lum_WsrpPOfferedPortlet
(	id CHAR(32) NOT NULL,producerId CHAR(32) NOT NULL,interfaceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_WSRPPOFFEREDPORTLET PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WSRPPOFFEREDPORTLET1 FOREIGN KEY (interfaceInstanceId) REFERENCES lum_InterfaceInstance(interfaceInstanceId),
	CONSTRAINT LUM_FK_WSRPPOFFEREDPORTLET2 FOREIGN KEY (producerId) REFERENCES lum_WsrpPProducer(id)
)
GO

	
CREATE UNIQUE INDEX LUM_IX_WSRPPOFFEREDPORTLET1 ON lum_WsrpPOfferedPortlet(producerId,interfaceInstanceId)
GO

	
CREATE TABLE lum_WsrpPRegistrationData
(	registrationHandle CHAR(32) NOT NULL,producerId CHAR(32) NOT NULL,consumerName NVARCHAR(255) NOT NULL,consumerAgent NVARCHAR(255) NOT NULL,methodGetSupported TINYINT NOT NULL,consumerModes NVARCHAR(128) NULL,consumerWindowStates NVARCHAR(128) NULL,customUserProfileData NVARCHAR(255) NULL,enabled TINYINT NULL,lifetimeTerminationTime DATETIME NULL,consumerUserScopes NVARCHAR(255) NULL,
	CONSTRAINT LUM_PK_WSRPPREGISTRATIONDATA PRIMARY KEY (registrationHandle)
)
GO

	
	
CREATE INDEX LUM_IX_WSRPPREGISTRATIONDATA1 ON lum_WsrpPRegistrationData(producerId)
GO

	
	
CREATE TABLE lum_WsrpPClonedPortlet
(	id CHAR(32) NOT NULL,originalPortletId CHAR(32) NOT NULL,registrationHandle CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_CLONEDPORTLET PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CLONEDPORTLET1 FOREIGN KEY (id) REFERENCES lum_InterfaceInstance(interfaceInstanceId),
	CONSTRAINT LUM_FK_CLONEDPORTLET2 FOREIGN KEY (registrationHandle) REFERENCES lum_WsrpPRegistrationData(registrationHandle)
)
GO

	
CREATE INDEX LUM_IX_WSRPPCLONEDPORTLET1 ON lum_WsrpPClonedPortlet(registrationHandle)
GO



