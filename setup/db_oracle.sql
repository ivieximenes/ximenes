-- Lumis Portal Oracle Scripts

-----------------------------------------------
-- Generated SQL for: /lumis/portal/database
-----------------------------------------------

	
CREATE TABLE lum_Principal
(	principalId CHAR(32) NOT NULL,shortId NVARCHAR2(100) NOT NULL,name NVARCHAR2(255) NOT NULL,type NUMBER(10) NOT NULL,subType NUMBER(10) NOT NULL,channelId NVARCHAR2(32) NULL,
	CONSTRAINT LUM_PK_PRINCIPAL PRIMARY KEY (principalId),
	CONSTRAINT LUM_UN_PRINCIPAL UNIQUE (shortId)
);
	
CREATE TABLE lum_AccessControlList
(	accessControlListId CHAR(32) NOT NULL,inheritAccessControl NUMBER(10) DEFAULT 0 NOT NULL,parentId CHAR(32) NULL,
	CONSTRAINT LUM_PK_ACCESSCONTROLLIST PRIMARY KEY (accessControlListId),
	CONSTRAINT LUM_FK_ACCESSCONTROLLISTPARENT FOREIGN KEY (parentId) REFERENCES lum_AccessControlList(accessControlListId)
);
	
CREATE INDEX LUM_IDX_ACCESSCONTROLLIST1 ON lum_AccessControlList(parentId);
	
	
CREATE TABLE lum_AccessControlEntry
(	accessControlListId CHAR(32) NOT NULL,principalId CHAR(32) NOT NULL,inherited NUMBER(10) NOT NULL,allowPermissions NUMBER(10) NOT NULL,denyPermissions NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_ACCESSCONTROLENTRY PRIMARY KEY (principalId,accessControlListId),
	CONSTRAINT LUM_FK_ACCESSCONTROLENTRY FOREIGN KEY (accessControlListId) REFERENCES lum_AccessControlList(accessControlListId) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_ACCESSCONTROLENTRY2 FOREIGN KEY (principalId) REFERENCES lum_Principal(principalId) ON DELETE CASCADE 
);
	
CREATE INDEX LUM_IDX_ACCESSCONTROLENTRY1 ON lum_AccessControlEntry(accessControlListId);
	
	
CREATE TABLE lum_PBPropertyBag
(	id CHAR(32) NOT NULL,parentPropertyBagId CHAR(32) NULL,
	CONSTRAINT LUM_PK_PBPROPERTYBAG PRIMARY KEY (id),
	CONSTRAINT LUM_FK_PBPROPERTYBAG1 FOREIGN KEY (parentPropertyBagId) REFERENCES lum_PBPropertyBag(id)
);
	
CREATE TABLE lum_PBPropertyDefault
(	id CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_PBPROPERTYDEFAULT PRIMARY KEY (id)
);
	
CREATE TABLE lum_PBProperty
(	id CHAR(32) NOT NULL,propertyBagId CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,isPrivate NUMBER(1) NOT NULL,propertyDefaultId CHAR(32) NULL,inheritMode NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_PBPROPERTY PRIMARY KEY (id),
	CONSTRAINT LUM_FK_PBPROPERTY1 FOREIGN KEY (propertyBagId) REFERENCES lum_PBPropertyBag(id),
	CONSTRAINT LUM_FK_PBPROPERTY2 FOREIGN KEY (propertyDefaultId) REFERENCES lum_PBPropertyDefault(id)
);
	
CREATE UNIQUE INDEX LUM_IX_PBPROPERTY1 ON lum_PBProperty(propertyBagId,name);
	
CREATE TABLE lum_PBPropertyDefValue
(	propertyDefaultId CHAR(32) NOT NULL,position NUMBER(10) NOT NULL,value CLOB NULL,
	CONSTRAINT LUM_FK_PBPROPERTYDEFVALUE1 FOREIGN KEY (propertyDefaultId) REFERENCES lum_PBPropertyDefault(id)
);
	
CREATE UNIQUE INDEX LUM_IX_PBPROPERTYDEFVALUE1 ON lum_PBPropertyDefValue(propertyDefaultId,position);
	
	
CREATE TABLE lum_Channel
(	channelId NVARCHAR2(32) NOT NULL,name NVARCHAR2(255) NOT NULL,description NVARCHAR2(255) NULL,type NUMBER(10) DEFAULT 0 NOT NULL,parentId NVARCHAR2(32) NULL,hidden NUMBER(10) DEFAULT 0 NOT NULL,position NUMBER(10) NULL,isTemplate NUMBER(10) DEFAULT 0 NOT NULL,parentTemplateId NVARCHAR2(32) NULL,pageTemplateId CHAR(32) NULL,protocol NUMBER(10) DEFAULT 0 NOT NULL,inheritStylesheet NUMBER(10) DEFAULT 1 NOT NULL,accessControlListId CHAR(32) NOT NULL,centerPages NUMBER(10) DEFAULT 2 NOT NULL,layoutPagesType NUMBER(10) DEFAULT 0 NOT NULL,localGroups NUMBER(10) DEFAULT 0 NOT NULL,localGroupPrefix NVARCHAR2(50) NULL,templateLocalGroupPrefix NVARCHAR2(255) NULL,cachePages NUMBER(10) DEFAULT 3 NOT NULL,friendlyPathType NUMBER(10) DEFAULT 0 NOT NULL,friendlyPathUserDefined NVARCHAR2(255) NULL,inheritPageTemplate NUMBER(10) DEFAULT 1 NOT NULL,inheritMetaTags NUMBER(10) DEFAULT 1 NOT NULL,propertyBagId CHAR(32) NOT NULL,pageWebResDataProvType NUMBER(10) DEFAULT 0 NOT NULL,pageWebResDataProv NVARCHAR2(255) NULL,friendlyURLPattern NVARCHAR2(255) NULL,friendlyURLPatternEnabled NUMBER(1) DEFAULT 0 NOT NULL,friendlyId NVARCHAR2(50) NOT NULL,automaticFriendlyId NUMBER(1) NOT NULL,ignoreOnExportImport NUMBER(1) NOT NULL,
	CONSTRAINT LUM_PK_CHANNEL PRIMARY KEY (channelId),
	CONSTRAINT LUM_FK_CHANNEL FOREIGN KEY (accessControlListId) REFERENCES lum_AccessControlList(accessControlListId),
	CONSTRAINT LUM_FK_CHANNEL2 FOREIGN KEY (parentId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_CHANNEL3 FOREIGN KEY (parentTemplateId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_CHANNEL4 FOREIGN KEY (propertyBagId) REFERENCES lum_PBPropertyBag(id)
);
	
CREATE INDEX LUM_IDX_CHANNEL1 ON lum_Channel(parentId,position,name);
	
CREATE INDEX LUM_IDX_CHANNEL2 ON lum_Channel(parentId,friendlyId);
	
	
ALTER TABLE lum_Principal ADD CONSTRAINT LUM_FK_PRINCIPAL FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId);
	
CREATE TABLE lum_ChannelTemplateLinks
(	linkId CHAR(32) NOT NULL,templateChannelId NVARCHAR2(32) NOT NULL,destinationChannelId NVARCHAR2(32) NOT NULL,sourceId NVARCHAR2(255) NOT NULL,destinationId NVARCHAR2(255) NOT NULL,itemType NUMBER(10) NOT NULL,linked NUMBER(10) DEFAULT 1 NOT NULL,
	CONSTRAINT LUM_PK_CHANNELTMPLLINKS PRIMARY KEY (linkId),
	CONSTRAINT LUM_FK_CHANNELTMPLLINKS1 FOREIGN KEY (templateChannelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_CHANNELTMPLLINKS2 FOREIGN KEY (destinationChannelId) REFERENCES lum_Channel(channelId)
);
	
CREATE INDEX LUM_IDX_CHANNELTMPLLINKS1 ON lum_ChannelTemplateLinks(destinationChannelId,itemType,linked);
	
CREATE UNIQUE INDEX LUM_IDX_CHANNELTMPLLINKS2 ON lum_ChannelTemplateLinks(sourceId,destinationChannelId);
	
CREATE UNIQUE INDEX LUM_IDX_CHANNELTMPLLINKS3 ON lum_ChannelTemplateLinks(destinationId);
	
	
CREATE TABLE lum_Page
(	pageId NVARCHAR2(32) NOT NULL,name NVARCHAR2(255) NOT NULL,channelId NVARCHAR2(32) NULL,position NUMBER(10) NULL,layout CLOB NULL,isTemplate NUMBER(10) DEFAULT 0 NOT NULL,hidden NUMBER(10) DEFAULT 0 NOT NULL,parentTemplateId CHAR(32) NULL,pageTitle NVARCHAR2(255) NULL,cachePage NUMBER(10) DEFAULT 3 NOT NULL,inheritStylesheet NUMBER(10) DEFAULT 1 NULL,type NUMBER(10) DEFAULT 0 NOT NULL,accessControlListId CHAR(32) NOT NULL,centerPage NUMBER(10) DEFAULT 2 NOT NULL,layoutType NUMBER(10) DEFAULT 0 NOT NULL,inheritMetaTags NUMBER(10) DEFAULT 1 NOT NULL,overrideSsi NUMBER(10) DEFAULT 0 NOT NULL,ssiType NUMBER(10) DEFAULT 0 NOT NULL,protocol NUMBER(10) DEFAULT 0 NOT NULL,propertyBagId CHAR(32) NOT NULL,pageWebResDataProvType NUMBER(10) DEFAULT 0 NOT NULL,pageWebResDataProv NVARCHAR2(255) NULL,friendlyId NVARCHAR2(50) NOT NULL,automaticFriendlyId NUMBER(1) NOT NULL,keywords CLOB NULL,description CLOB NULL,
	CONSTRAINT LUM_PK_PAGE PRIMARY KEY (pageId),
	CONSTRAINT LUM_FK_PAGE1 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_PAGE2 FOREIGN KEY (accessControlListId) REFERENCES lum_AccessControlList(accessControlListId),
	CONSTRAINT LUM_FK_PAGE3 FOREIGN KEY (propertyBagId) REFERENCES lum_PBPropertyBag(id)
);
	
CREATE INDEX LUM_IDX_PAGE1 ON lum_Page(channelId,position,name,isTemplate);
	
CREATE INDEX LUM_IDX_PAGE2 ON lum_Page(channelId,friendlyId);
	
	
CREATE TABLE lum_Service
(	serviceId NVARCHAR2(255) NOT NULL,name NVARCHAR2(255) NOT NULL,description NVARCHAR2(255) NULL,baseUrl NVARCHAR2(255) NULL,stringsUrlPrefix NVARCHAR2(255) NULL,image NVARCHAR2(255) NULL,definition CLOB NULL,accessControlListId CHAR(32) NOT NULL,isInstantiable NUMBER(10) DEFAULT 1 NULL,isSocialProfile NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT LUM_PK_Service PRIMARY KEY (serviceId),
	CONSTRAINT LUM_FK_SERVICE FOREIGN KEY (accessControlListId) REFERENCES lum_AccessControlList(accessControlListId)
);
	
CREATE TABLE lum_ServiceInstance
(	serviceInstanceId CHAR(32) NOT NULL,serviceId NVARCHAR2(255) NOT NULL,channelId NVARCHAR2(32) NULL,name NVARCHAR2(255) NULL,description NVARCHAR2(255) NULL,inheritAccessControl NUMBER(10) DEFAULT 1 NOT NULL,isSearchable NUMBER(10) DEFAULT 1 NOT NULL,accessControlListId CHAR(32) NULL,usesPublicFileStorage NUMBER(10) DEFAULT 0 NOT NULL,friendlyId NVARCHAR2(50) NOT NULL,automaticFriendlyId NUMBER(1) NOT NULL,usesFileTransformation NUMBER(10) DEFAULT 0 NOT NULL,propertyBagId CHAR(32) NOT NULL,restShortName NVARCHAR2(255) NOT NULL,restEnabled NUMBER(10) DEFAULT 0 NOT NULL,disableInContextEdit NUMBER(10) DEFAULT 0 NOT NULL,
	CONSTRAINT LUM_PK_SERVICEINSTANCE PRIMARY KEY (serviceInstanceId),
	CONSTRAINT LUM_FK_SERVICEINSTANCE FOREIGN KEY (accessControlListId) REFERENCES lum_AccessControlList(accessControlListId),
	CONSTRAINT LUM_FK_SERVICEINSTANCE2 FOREIGN KEY (serviceId) REFERENCES lum_Service(serviceId),
	CONSTRAINT LUM_FK_SERVICEINSTANCE3 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_SERVICEINSTANCE4 FOREIGN KEY (propertyBagId) REFERENCES lum_PBPropertyBag(id)
);
	
CREATE INDEX LUM_IDX_SERVICEINSTANCE1 ON lum_ServiceInstance(channelId,friendlyId);
	
CREATE UNIQUE INDEX LUM_IDX_SERVICEINSTANCE2 ON lum_ServiceInstance(restShortName);
	
CREATE INDEX LUM_IDX_SERVICEINSTANCE3 ON lum_ServiceInstance(serviceId);
	
	
CREATE TABLE lum_ServiceInstanceDependency
(	id CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,dependentServiceInstanceId CHAR(32) NOT NULL,dependencyType NVARCHAR2(50) NOT NULL,
	CONSTRAINT LUM_PK_SERVICEINSTANCEDEP PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SERVICEINSTANCEDEP FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId),
	CONSTRAINT LUM_FK_SERVICEINSTANCEDEP2 FOREIGN KEY (dependentServiceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId),
	CONSTRAINT LUM_UN_SERVICEINSTANCEDEP UNIQUE (serviceInstanceId,dependentServiceInstanceId,dependencyType),
	CONSTRAINT LUM_UN_SERVICEINSTANCEDEP2 UNIQUE (dependentServiceInstanceId,dependencyType,serviceInstanceId)
);
	
CREATE TABLE lum_Interface
(	interfaceId NVARCHAR2(255) NOT NULL,name NVARCHAR2(255) NOT NULL,title NVARCHAR2(255) NULL,description NVARCHAR2(255) NULL,baseUrl NVARCHAR2(255) NULL,stringsUrlPrefix NVARCHAR2(255) NULL,serviceId NVARCHAR2(255) NOT NULL,isRuntimeOnly NUMBER(10) DEFAULT 0 NOT NULL,isAdministration NUMBER(10) DEFAULT 0 NOT NULL,isDetails NUMBER(10) DEFAULT 0 NOT NULL,isPrintable NUMBER(10) DEFAULT 0 NOT NULL,renderAs NUMBER(10) DEFAULT 0 NOT NULL,enableCache NUMBER(10) DEFAULT 0 NOT NULL,cacheLevel NUMBER(10) DEFAULT 0 NOT NULL,cachePersonalization NUMBER(10) DEFAULT 0 NOT NULL,cacheServerSideInclude NUMBER(10) DEFAULT 0 NOT NULL,definition CLOB NULL,defaultInterfaceStyleId NVARCHAR2(100) NULL,customDefaultInterfaceStyleId NVARCHAR2(100) NULL,previewSupported NUMBER(10) DEFAULT 0 NOT NULL,isWidget NUMBER(10) DEFAULT 0 NOT NULL,usesSocialProfileInformation NUMBER(1) DEFAULT 0 NOT NULL,openerWindowRequired NUMBER(1) DEFAULT 1 NOT NULL,inContextEditSupported NUMBER(10) DEFAULT 1 NOT NULL,
	CONSTRAINT LUM_PK_INTERFACE PRIMARY KEY (interfaceId),
	CONSTRAINT LUM_FK_INTERFACE FOREIGN KEY (serviceId) REFERENCES lum_Service(serviceId)
);
	
CREATE INDEX LUM_IDX_INTERFACE1 ON lum_Interface(serviceId);
	
	
CREATE TABLE lum_InterfaceStyle
(	interfaceStyleId NVARCHAR2(100) NOT NULL,interfaceId NVARCHAR2(255) NOT NULL,name NVARCHAR2(255) NOT NULL,description NVARCHAR2(255) NULL,filePath NVARCHAR2(255) NOT NULL,isFromDefinition NUMBER(10) DEFAULT 0 NOT NULL,isWidgetDefault NUMBER(10) DEFAULT 0 NOT NULL,isolationLevel NUMBER(10) DEFAULT 0 NOT NULL,
	CONSTRAINT LUM_PK_INTERFACESTYLE PRIMARY KEY (interfaceStyleId,interfaceId),
	CONSTRAINT LUM_FK_INTERFACESTYLE FOREIGN KEY (interfaceId) REFERENCES lum_Interface(interfaceId)
);
	
CREATE INDEX LUM_IDX_INTERFACESTYLE1 ON lum_InterfaceStyle(interfaceId);
	
CREATE INDEX LUM_IDX_INTERFACESTYLE2 ON lum_InterfaceStyle(isolationLevel);
	
ALTER TABLE lum_Interface ADD CONSTRAINT LUM_FK_INTERFACE2 FOREIGN KEY (defaultInterfaceStyleId,interfaceId) REFERENCES lum_InterfaceStyle(interfaceStyleId,interfaceId);
	
ALTER TABLE lum_Interface ADD CONSTRAINT LUM_FK_INTERFACE3 FOREIGN KEY (customDefaultInterfaceStyleId,interfaceId) REFERENCES lum_InterfaceStyle(interfaceStyleId,interfaceId);
	
	
CREATE TABLE lum_InterfaceInstance
(	interfaceInstanceId CHAR(32) NOT NULL,interfaceId NVARCHAR2(255) NOT NULL,serviceInstanceId CHAR(32) NULL,pageId NVARCHAR2(32) NULL,parentInterfaceId CHAR(32) NULL,isCreatedRunTime NUMBER(10) DEFAULT 0 NOT NULL,createRuntimeOnly NUMBER(10) DEFAULT 0 NOT NULL,interfaceStyleId NVARCHAR2(100) NULL,title NVARCHAR2(300) NULL,width NVARCHAR2(10) NULL,height NVARCHAR2(10) NULL,paddingLeft NVARCHAR2(10) NULL,paddingRight NVARCHAR2(10) NULL,paddingTop NVARCHAR2(10) NULL,paddingBottom NVARCHAR2(10) NULL,colspan NUMBER(10) NULL,rowspan NUMBER(10) NULL,isPrintable NUMBER(10) DEFAULT 2 NOT NULL,renderAs NUMBER(10) DEFAULT 2 NOT NULL,enableCache NUMBER(10) DEFAULT 2 NOT NULL,cacheLevel NUMBER(10) DEFAULT 2 NOT NULL,cachePersonalization NUMBER(10) DEFAULT 3 NOT NULL,cacheServerSideInclude NUMBER(10) DEFAULT 2 NOT NULL,holderPriority NUMBER(10) NULL,showTitleBar NUMBER(10) DEFAULT 0 NOT NULL,displayName NVARCHAR2(100) NULL,owner NVARCHAR2(255) NULL,disableInContextEdit NUMBER(10) DEFAULT 0 NOT NULL,
	CONSTRAINT LUM_PK_INTERFACEINSTANCE PRIMARY KEY (interfaceInstanceId),
	CONSTRAINT LUM_FK_INTERFACEINSTANCE FOREIGN KEY (interfaceId) REFERENCES lum_Interface(interfaceId),
	CONSTRAINT LUM_FK_INTERFACEINSTANCE2 FOREIGN KEY (pageId) REFERENCES lum_Page(pageId),
	CONSTRAINT LUM_FK_INTERFACEINSTANCE3 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId),
	CONSTRAINT LUM_FK_INTERFACEINSTANCE4 FOREIGN KEY (interfaceStyleId,interfaceId) REFERENCES lum_InterfaceStyle(interfaceStyleId,interfaceId)
);
	
CREATE INDEX LUM_IDX_INTERFACEINSTANCE1 ON lum_InterfaceInstance(pageId,isCreatedRunTime);
	
CREATE INDEX LUM_IDX_INTERFACEINSTANCE2 ON lum_InterfaceInstance(interfaceId,interfaceStyleId);
	
CREATE INDEX LUM_IDX_INTERFACEINSTANCE3 ON lum_InterfaceInstance(interfaceId,serviceInstanceId,isCreatedRunTime);
	
CREATE INDEX LUM_IDX_INTERFACEINSTANCE4 ON lum_InterfaceInstance(serviceInstanceId,isCreatedRunTime,interfaceId,pageId);
	
CREATE VIEW lum_vwInterfaceInstanceStyle AS
(
	SELECT a.interfaceInstanceId, b.interfaceId, NVL(a.interfaceStyleId, b.defaultInterfaceStyleId) as interfaceStyleId FROM lum_InterfaceInstance a, lum_Interface b WHERE a.interfaceId = b.interfaceId
);

	
CREATE TABLE lum_ISAllowedConsumers
(	id CHAR(32) NOT NULL,interfaceStyleId NVARCHAR2(100) NOT NULL,interfaceId NVARCHAR2(255) NOT NULL,serviceInstanceId CHAR(32) NULL,interfaceInstanceId CHAR(32) NULL,
	CONSTRAINT LUM_PK_ISALLOWEDCONSUMERS PRIMARY KEY (id),
	CONSTRAINT LUM_FK_ISALLOWEDCONSUMERS1 FOREIGN KEY (interfaceStyleId,interfaceId) REFERENCES lum_InterfaceStyle(interfaceStyleId,interfaceId),
	CONSTRAINT LUM_FK_ISALLOWEDCONSUMERS2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId),
	CONSTRAINT LUM_FK_ISALLOWEDCONSUMERS3 FOREIGN KEY (interfaceInstanceId) REFERENCES lum_InterfaceInstance(interfaceInstanceId)
);
	
CREATE INDEX LUM_IX_ISALLOWEDCONSUMERS1 ON lum_ISAllowedConsumers(interfaceStyleId,interfaceId,serviceInstanceId);
	
CREATE INDEX LUM_IX_ISALLOWEDCONSUMERS2 ON lum_ISAllowedConsumers(interfaceInstanceId);
	
CREATE INDEX LUM_IX_ISALLOWEDCONSUMERS3 ON lum_ISAllowedConsumers(serviceInstanceId);
	
	
CREATE TABLE lum_User
(	userId CHAR(32) NOT NULL,login NVARCHAR2(100) NOT NULL,password NVARCHAR2(255) NULL,firstName NVARCHAR2(100) NOT NULL,middleName NVARCHAR2(100) NULL,lastName NVARCHAR2(100) NULL,email NVARCHAR2(255) NULL,lastLogin DATE NULL,createdDate DATE DEFAULT  SYSDATE  NOT NULL,disabled NUMBER(10) DEFAULT 0 NOT NULL,channelId NVARCHAR2(32) NULL,type NUMBER(10) DEFAULT 0 NOT NULL,multiSession NUMBER(10) DEFAULT 0 NOT NULL,origin NVARCHAR2(255) NULL,portalLogin NUMBER(10) DEFAULT 1 NULL,attributes CLOB NULL,
	CONSTRAINT LUM_PK_USER PRIMARY KEY (userId),
	CONSTRAINT LUM_FK_USER FOREIGN KEY (userId) REFERENCES lum_Principal(principalId),
	CONSTRAINT LUM_FK_USER2 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_UN_USER_LOGIN UNIQUE (login)
);
	
	

	
CREATE VIEW lum_vwUser AS
(
	SELECT userId, firstName || NVL(' ' || middleName, '') ||  NVL(' ' || lastName, '') AS fullName, login, lastLogin, createdDate, channelId FROM lum_User
);
	
	
CREATE TABLE lum_UserAlternativeLogin
(	id CHAR(32) NOT NULL,userId CHAR(32) NOT NULL,login NVARCHAR2(255) NOT NULL,
	CONSTRAINT LUM_PK_USERALTERNATIVELOGIN PRIMARY KEY (id),
	CONSTRAINT LUM_FK_USERALTERNATIVELOGIN FOREIGN KEY (userId) REFERENCES lum_User(userId) ON DELETE CASCADE ,
	CONSTRAINT LUM_UN_USERALTLOG_LOGIN UNIQUE (login)
);
	
	
CREATE TABLE lum_GroupType
(	id NVARCHAR2(100) NOT NULL,name NVARCHAR2(50) NOT NULL,description NVARCHAR2(255) NULL,groupMembershipProvider NVARCHAR2(100) NOT NULL,
	CONSTRAINT LUM_PK_GROUPTYPE PRIMARY KEY (id)
);
	
	
CREATE TABLE lum_Group
(	groupId CHAR(32) NOT NULL,alias NVARCHAR2(255) NOT NULL,name NVARCHAR2(255) NOT NULL,description NVARCHAR2(255) NULL,type NUMBER(10) DEFAULT 0 NOT NULL,channelId NVARCHAR2(32) NULL,accessControlListId CHAR(32) NOT NULL,origin NVARCHAR2(255) NULL,groupTypeId NVARCHAR2(100) NOT NULL,
	CONSTRAINT LUM_PK_GROUP PRIMARY KEY (groupId),
	CONSTRAINT LUM_FK_GROUP FOREIGN KEY (groupId) REFERENCES lum_Principal(principalId),
	CONSTRAINT LUM_FK_GROUP2 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_GROUP3 FOREIGN KEY (accessControlListId) REFERENCES lum_AccessControlList(accessControlListId),
	CONSTRAINT LUM_FK_GROUP4 FOREIGN KEY (groupTypeId) REFERENCES lum_GroupType(id),
	CONSTRAINT LUM_UN_GROUP_ALIAS UNIQUE (alias)
);
	
CREATE INDEX LUM_IDX_GROUP1 ON lum_Group(channelId);
	
CREATE INDEX LUM_IDX_GROUP2 ON lum_Group(groupTypeId);
	
	
CREATE VIEW lum_vwGlobalGroups AS
(
	select * from lum_Group where channelId is null and type=0
);
	
	
CREATE TABLE lum_GroupMember
(	groupId CHAR(32) NOT NULL,principalId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_GROUPMEMBER PRIMARY KEY (groupId,principalId),
	CONSTRAINT LUM_FK_GROUPMEMBERS FOREIGN KEY (groupId) REFERENCES lum_Group(groupId),
	CONSTRAINT LUM_FK_GROUPMEMBERS2 FOREIGN KEY (principalId) REFERENCES lum_Principal(principalId)
);
	
CREATE INDEX LUM_IDX_GROUPMEMBER ON lum_GroupMember(principalId,groupId);
	
	
CREATE TABLE lum_GroupDbVwGrpTypeCfg
(	id CHAR(32) NOT NULL,connectionId NVARCHAR2(50) NULL,viewName NVARCHAR2(50) NOT NULL,principalShortIdField NVARCHAR2(50) NOT NULL,cacheMaxAgeSeconds NUMBER(10) NOT NULL,groupTypeId NVARCHAR2(100) NOT NULL,
	CONSTRAINT LUM_PK_GROUPDBVWGRPTYPECFG PRIMARY KEY (id),
	CONSTRAINT LUM_FK_GROUPDBVWGRPTYPECFG1 FOREIGN KEY (groupTypeId) REFERENCES lum_GroupType(id)
);
	
CREATE UNIQUE INDEX LUM_IX_GROUPDBVWGRPTYPECFG1 ON lum_GroupDbVwGrpTypeCfg(groupTypeId);
	
	
CREATE TABLE lum_GroupDbVwField
(	id CHAR(32) NOT NULL,columnName NVARCHAR2(50) NOT NULL,dataType NVARCHAR2(50) NOT NULL,groupTypeConfigId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_GROUPDBVWFIELD PRIMARY KEY (id),
	CONSTRAINT LUM_FK_GROUPDBVWFIELD1 FOREIGN KEY (groupTypeConfigId) REFERENCES lum_GroupDbVwGrpTypeCfg(id) ON DELETE CASCADE 
);
	
CREATE INDEX LUM_IX_GROUPDBVWFIELD1 ON lum_GroupDbVwField(groupTypeConfigId);
	
	
CREATE TABLE lum_GroupDbVwGrpCfg
(	id CHAR(32) NOT NULL,groupId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_GROUPDBVWGRPCFG PRIMARY KEY (id),
	CONSTRAINT LUM_FK_GROUPDBVWGRPCFG1 FOREIGN KEY (groupId) REFERENCES lum_Group(groupId)
);
	
CREATE UNIQUE INDEX LUM_IX_GROUPDBVWGRPCFG1 ON lum_GroupDbVwGrpCfg(groupId);

	
CREATE TABLE lum_GroupDbVwFormulaEntry
(	id CHAR(32) NOT NULL,leftParentheses NVARCHAR2(10) NULL,fieldId CHAR(32) NOT NULL,operator NVARCHAR2(11) NOT NULL,value NVARCHAR2(255) NULL,rightParentheses NVARCHAR2(10) NULL,logicalOperator NVARCHAR2(3) NOT NULL,position NUMBER(10) NOT NULL,groupConfigId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_GROUPDBVWFORMULAENTRY PRIMARY KEY (id),
	CONSTRAINT LUM_FK_GROUPDBVWFORMULAENTRY1 FOREIGN KEY (groupConfigId) REFERENCES lum_GroupDbVwGrpCfg(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_GROUPDBVWFORMULAENTRY2 FOREIGN KEY (fieldId) REFERENCES lum_GroupDbVwField(id)
);
	
CREATE INDEX LUM_IX_GROUPDBVWFORMULAENTRY1 ON lum_GroupDbVwFormulaEntry(groupConfigId,position);

	
CREATE TABLE lum_UserSession
(	userSessionId CHAR(32) NOT NULL,userId CHAR(32) NOT NULL,lastAccessDate DATE NOT NULL,
	CONSTRAINT LUM_PK_USERSESSION PRIMARY KEY (userSessionId),
	CONSTRAINT LUM_FK_AUTHENTICATEDUSERS FOREIGN KEY (userId) REFERENCES lum_User(userId)
);
	
	
CREATE INDEX LUM_IDX_USERSESSION1 ON lum_UserSession(userId);
	
CREATE INDEX LUM_IDX_USERSESSION2 ON lum_UserSession(lastAccessDate);
	
CREATE TABLE lum_ServiceType
(	serviceTypeId NVARCHAR2(255) NOT NULL,serviceType NVARCHAR2(255) NOT NULL,serviceClass NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_SERVICETYPE PRIMARY KEY (serviceTypeId)
);
	
CREATE TABLE lum_ServiceInterfaceType
(	interfaceTypeId NVARCHAR2(255) NOT NULL,interfaceType NVARCHAR2(255) NOT NULL,interfaceClass NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_SERVICEINTERFACETYPE PRIMARY KEY (interfaceTypeId)
);
	
CREATE TABLE lum_Css
(	cssId CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,description NVARCHAR2(255) NULL,filePath NVARCHAR2(255) NOT NULL,
	CONSTRAINT LUM_PK_CSS PRIMARY KEY (cssId),
	CONSTRAINT LUM_UN_CSS UNIQUE (filePath)
);
	
	
CREATE VIEW lum_vwCss AS
(
	SELECT a.cssId, a.name ||' ('|| a.filePath ||')' as name, a.description, a.filePath FROM lum_Css a
);

	
CREATE TABLE lum_ChannelCss
(	cssId CHAR(32) NOT NULL,channelId NVARCHAR2(32) NOT NULL,position NUMBER(10) NULL,
	CONSTRAINT LUM_PK_CHANNELCSS PRIMARY KEY (cssId,channelId),
	CONSTRAINT LUM_FK_CHANNELSTYLESHEETS FOREIGN KEY (cssId) REFERENCES lum_Css(cssId),
	CONSTRAINT LUM_FK_CHANNELSTYLESHEETS2 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId)
);
	
CREATE INDEX LUM_IDX_CHANNELSTYLESHEETS1 ON lum_ChannelCss(channelId,position);
	
	
CREATE VIEW lum_vwChannelCss AS
(
	SELECT b.cssId, a.channelId, a.position, b.name ||' ('|| b.filePath ||')' as name, b.description, b.filePath FROM lum_ChannelCss a, lum_Css b WHERE a.cssId = b.cssId
);

	
CREATE TABLE lum_PageCss
(	cssId CHAR(32) NOT NULL,pageId NVARCHAR2(32) NOT NULL,position NUMBER(10) NULL,
	CONSTRAINT LUM_PK_PAGECSS PRIMARY KEY (cssId,pageId),
	CONSTRAINT LUM_FK_PAGESTYLESHEETS FOREIGN KEY (cssId) REFERENCES lum_Css(cssId),
	CONSTRAINT LUM_FK_PAGESTYLESHEETS2 FOREIGN KEY (pageId) REFERENCES lum_Page(pageId)
);
	
CREATE INDEX LUM_IDX_PAGESTYLESHEETS1 ON lum_PageCss(pageId,position);
	
	
CREATE VIEW lum_vwPageCss AS
(
	SELECT b.cssId, a.pageId, a.position, b.name ||' ('|| b.filePath ||')' as name, b.description, b.filePath FROM lum_PageCss a, lum_Css b WHERE a.cssId = b.cssId
);

	
CREATE TABLE lum_MetaTag
(	metaTagId CHAR(32) NOT NULL,parentChannelId NVARCHAR2(32) NULL,parentPageId NVARCHAR2(32) NULL,position NUMBER(10) NOT NULL,content NVARCHAR2(1000) NOT NULL,
	CONSTRAINT LUM_PK_METATAG PRIMARY KEY (metaTagId),
	CONSTRAINT LUM_FK_METATAG FOREIGN KEY (parentChannelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_METATAG2 FOREIGN KEY (parentPageId) REFERENCES lum_Page(pageId)
);
	
CREATE INDEX LUM_IX_METATAG1 ON lum_MetaTag(parentChannelId,position);
	
CREATE INDEX LUM_IX_METATAG2 ON lum_MetaTag(parentPageId,position);
	
	
CREATE TABLE lum_Clock
(	clockId NVARCHAR2(255) NOT NULL,clockClass NVARCHAR2(255) NOT NULL,serviceId NVARCHAR2(255) NULL,startTime DATE NOT NULL,stopTime DATE NULL,tickIntervalType NUMBER(10) NOT NULL,tickInterval NUMBER(10) NOT NULL,runOnlyOnServer NVARCHAR2(100) NULL,lastTick DATE NULL,enabled NUMBER(10) NOT NULL,nextScheduleDate DATE NOT NULL,running NUMBER(10) NOT NULL,maxRunTime NUMBER(10) NOT NULL,lastTickStart DATE NULL,
	CONSTRAINT LUM_PK_PORTALCLOCK PRIMARY KEY (clockId),
	CONSTRAINT LUM_FK_PORTALCLOCK1 FOREIGN KEY (serviceId) REFERENCES lum_Service(serviceId)
);
	
	
CREATE INDEX LUM_IDX_PORTALCLOCK ON lum_Clock(enabled,running,nextScheduleDate,runOnlyOnServer);
	
	
CREATE TABLE lum_CustomString
(	customStringId CHAR(32) NOT NULL,stringId NVARCHAR2(100) NOT NULL,string NVARCHAR2(1000) NOT NULL,resourcePath NVARCHAR2(255) NOT NULL,localeCode NVARCHAR2(50) NOT NULL,status NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_CUSTOMSTRING PRIMARY KEY (customStringId),
	CONSTRAINT LUM_UN_CUSTOMSTRING UNIQUE (stringId,resourcePath,localeCode)
);
	
CREATE TABLE lum_LRResource
(	id NVARCHAR2(255) NOT NULL,
	CONSTRAINT LUM_PK_LRRESOURCE PRIMARY KEY (id)
);
	
CREATE TABLE lum_LRResourceLock
(	id CHAR(32) NOT NULL,resourceId NVARCHAR2(255) NOT NULL,owner CHAR(32) NOT NULL,deadline DATE NOT NULL,type NVARCHAR2(5) NOT NULL,
	CONSTRAINT LUM_PK_LRRESOURCELOCK PRIMARY KEY (id)
);
	
CREATE INDEX LUM_IX_LRRESOURCELOCK1 ON lum_LRResourceLock(resourceId,owner);
	
CREATE INDEX LUM_IX_LRRESOURCELOCK2 ON lum_LRResourceLock(deadline);
	
CREATE INDEX LUM_IX_LRRESOURCELOCK3 ON lum_LRResourceLock(resourceId,type);
	
CREATE TABLE lum_Website
(	id CHAR(32) NOT NULL,name NVARCHAR2(50) NOT NULL,webRootPath NVARCHAR2(255) NULL,rootChannelId NVARCHAR2(32) NULL,defaultWebsite NUMBER(1) NOT NULL,forceMainURLsNavigation NUMBER(1) NOT NULL,priority NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_WEBSITE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WEBSITE1 FOREIGN KEY (rootChannelId) REFERENCES lum_Channel(channelId)
);
	
CREATE INDEX LUM_IX_WEBSITE1 ON lum_Website(rootChannelId);
	
CREATE UNIQUE INDEX LUM_IX_WEBSITE2 ON lum_Website(name);
	
CREATE INDEX LUM_IX_WEBSITE3 ON lum_Website(priority);
	
CREATE TABLE lum_WebsiteBaseURL
(	id CHAR(32) NOT NULL,domain NVARCHAR2(120) NOT NULL,port NUMBER(10) NOT NULL,path NVARCHAR2(100) NULL,secure NUMBER(1) NULL,type NVARCHAR2(1) NOT NULL,websiteId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_WEBSITEBASEURL PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WEBSITEBASEURL1 FOREIGN KEY (websiteId) REFERENCES lum_Website(id) ON DELETE CASCADE 
);
	
CREATE UNIQUE INDEX LUM_IX_WEBSITEBASEURL1 ON lum_WebsiteBaseURL(domain,port,path);
	
CREATE INDEX LUM_IX_WEBSITEBASEURL2 ON lum_WebsiteBaseURL(websiteId,type,secure);	
	
CREATE TABLE lum_PageLink
(	pageLinkId CHAR(32) NOT NULL,pageId NVARCHAR2(32) NOT NULL,type NUMBER(10) DEFAULT 0 NOT NULL,channelId NVARCHAR2(32) NULL,capabilities CLOB NULL,priority NUMBER(10) NOT NULL,name NVARCHAR2(100) NOT NULL,websiteId CHAR(32) NOT NULL,usesAllWebsiteBaseURLs NUMBER(1) NOT NULL,
	CONSTRAINT LUM_PK_PAGELINK PRIMARY KEY (pageLinkId),
	CONSTRAINT LUM_FK_PAGELINK FOREIGN KEY (pageId) REFERENCES lum_Page(pageId),
	CONSTRAINT LUM_FK_PAGELINK2 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_PAGELINK3 FOREIGN KEY (websiteId) REFERENCES lum_Website(id)
);
	
CREATE INDEX LUM_IX_PAGELINK1 ON lum_PageLink(websiteId,priority);

	
CREATE TABLE lum_PageLinkWebsiteBaseURL
(	pageLinkId CHAR(32) NOT NULL,websiteBaseURLId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_PAGELINKWEBSITEBASEURL PRIMARY KEY (pageLinkId,websiteBaseURLId),
	CONSTRAINT LUM_FK_PAGELINKWEBSITEBASEURL1 FOREIGN KEY (pageLinkId) REFERENCES lum_PageLink(pageLinkId),
	CONSTRAINT LUM_FK_PAGELINKWEBSITEBASEURL2 FOREIGN KEY (websiteBaseURLId) REFERENCES lum_WebsiteBaseURL(id)
);
	
CREATE INDEX LUM_IX_PAGELINKWEBSITEBASEURL1 ON lum_PageLinkWebsiteBaseURL(websiteBaseURLId);
	
	
CREATE TABLE lum_ServiceMenuType
(	menuTypeId NVARCHAR2(255) NOT NULL,name NVARCHAR2(255) NOT NULL,definition CLOB NULL,
	CONSTRAINT LUM_PK_SERVICEMENUTYPE PRIMARY KEY (menuTypeId)
);
	
CREATE TABLE lum_BuildInformation
(	buildId CHAR(32) NOT NULL,majorVersion NUMBER(10) NOT NULL,minorVersion NUMBER(10) NOT NULL,releaseVersion NUMBER(10) NOT NULL,buildNumber NVARCHAR2(6) NOT NULL,buildSequence NUMBER(10) NOT NULL,steps NUMBER(10) NOT NULL,status NUMBER(10) NOT NULL,userResponse NUMBER(10) NOT NULL,upgradeDate DATE DEFAULT  SYSDATE  NOT NULL,area NVARCHAR2(50) NULL,userId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_BUILDINFORMATION PRIMARY KEY (buildId)
);

	
	
	
CREATE TABLE lum_PostUpgradeStatus
(	id CHAR(32) NOT NULL,lastExecutedNumber NUMBER(10) NOT NULL,upgradeExecuted NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT LUM_PK_POSTUPGRADESTATUS PRIMARY KEY (id)
);
	
	
CREATE TABLE lum_IntfInstCustomProperty
(	customPropertyId CHAR(32) NOT NULL,interfaceInstanceId CHAR(32) NOT NULL,name NVARCHAR2(100) NOT NULL,value CLOB NOT NULL,
	CONSTRAINT LUM_PK_INTFINSTCUSTOMPROPERTY PRIMARY KEY (customPropertyId),
	CONSTRAINT LUM_UN_INTFINSTCUSTOMPROPERTY UNIQUE (interfaceInstanceId,name),
	CONSTRAINT LUM_FK_INTFINSTCUSTOMPROPERTY FOREIGN KEY (interfaceInstanceId) REFERENCES lum_InterfaceInstance(interfaceInstanceId)
);
	
CREATE TABLE lum_SvcInstCustomProperty
(	customPropertyId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,name NVARCHAR2(100) NOT NULL,value CLOB NOT NULL,
	CONSTRAINT LUM_PK_SVCINSTCUSTOMPROPERTY PRIMARY KEY (customPropertyId),
	CONSTRAINT LUM_UN_SVCINSTCUSTOMPROPERTY UNIQUE (serviceInstanceId,name),
	CONSTRAINT LUM_FK_SVCINSTCUSTOMPROPERTY FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
);
	
CREATE TABLE lum_InterfaceMenuItem
(	menuItemId NVARCHAR2(255) NOT NULL,type NVARCHAR2(200) NOT NULL,className NVARCHAR2(200) NOT NULL,definition CLOB NULL,
	CONSTRAINT LUM_PK_INTERFACEMENUITEM PRIMARY KEY (menuItemId)
);
	
CREATE TABLE lum_InterfaceMenuGroup
(	menuGroupId NVARCHAR2(255) NOT NULL,type NVARCHAR2(200) NOT NULL,definition CLOB NOT NULL,
	CONSTRAINT LUM_PK_INTERFACEMENUGROUP PRIMARY KEY (menuGroupId)
);

	
CREATE TABLE lum_Locale
(	localeId CHAR(32) NOT NULL,locale VARCHAR2(10) NOT NULL,name NVARCHAR2(255) NOT NULL,
	CONSTRAINT LUM_PK_LOCALE PRIMARY KEY (localeId),
	CONSTRAINT LUM_UN_LOCALE1 UNIQUE (locale)
);
	
	
CREATE TABLE lum_WebResource
(	id CHAR(32) NOT NULL,pageId NVARCHAR2(32) NULL,channelId NVARCHAR2(32) NULL,locale VARCHAR2(10) NOT NULL,dynamicPath VARCHAR2(400) NOT NULL,friendlyPath VARCHAR2(400) NULL,createdDateTime DATE NOT NULL,type NVARCHAR2(1) NOT NULL,cachedPageId NVARCHAR2(255) NULL,websiteId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_WEBRESOURCE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WEBRESOURCE1 FOREIGN KEY (pageId) REFERENCES lum_Page(pageId),
	CONSTRAINT LUM_FK_WEBRESOURCE2 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_WEBRESOURCE3 FOREIGN KEY (locale) REFERENCES lum_Locale(locale),
	CONSTRAINT LUM_FK_WEBRESOURCE4 FOREIGN KEY (websiteId) REFERENCES lum_Website(id)
);
	
CREATE UNIQUE INDEX LUM_IX_WEBRESOURCE1 ON lum_WebResource(dynamicPath,locale);
	
CREATE INDEX LUM_IX_WEBRESOURCE2 ON lum_WebResource(friendlyPath);
	
CREATE INDEX LUM_IX_WEBRESOURCE3 ON lum_WebResource(pageId,locale);
	
CREATE INDEX LUM_IX_WEBRESOURCE4 ON lum_WebResource(channelId,locale);
	
CREATE INDEX LUM_IX_WEBRESOURCE5 ON lum_WebResource(cachedPageId);
	
CREATE INDEX LUM_IX_WEBRESOURCE6 ON lum_WebResource(websiteId);
	
	
CREATE TABLE lum_WebResPageParam
(	id CHAR(32) NOT NULL,webResourceId CHAR(32) NOT NULL,name NVARCHAR2(100) NOT NULL,
	CONSTRAINT LUM_PK_WEBRESPAGEPARAM PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WEBRESPAGEPARAM1 FOREIGN KEY (webResourceId) REFERENCES lum_WebResource(id) ON DELETE CASCADE 
);
	
CREATE UNIQUE INDEX LUM_IX_WEBRESPAGEPARAM1 ON lum_WebResPageParam(webResourceId,name);
	
	
CREATE TABLE lum_WebResPageParamValue
(	parameterId CHAR(32) NOT NULL,position NUMBER(10) NOT NULL,parameterValue NVARCHAR2(300) NOT NULL,
	CONSTRAINT LUM_PK_WEBRESPAGEPARAMVALUE PRIMARY KEY (parameterId,position),
	CONSTRAINT LUM_FK_WEBRESPAGEPARAMVALUE1 FOREIGN KEY (parameterId) REFERENCES lum_WebResPageParam(id) ON DELETE CASCADE 
);
	
	
CREATE INDEX LUM_IX_WEBRESPAGEPARAMVALUE1 ON lum_WebResPageParamValue(parameterValue,parameterId);
	
	
CREATE TABLE lum_CachedPage
(	cachedPageId NVARCHAR2(255) NOT NULL,webResourceId CHAR(32) NOT NULL,createdDateTime DATE NOT NULL,cachedDate DATE NULL,expiredDate DATE NULL,status NUMBER(10) DEFAULT 0 NOT NULL,priority NUMBER(10) DEFAULT 0 NOT NULL,initialPriority NUMBER(10) DEFAULT 0 NOT NULL,resourcePriority NUMBER(10) NOT NULL,numErrors NUMBER(10) DEFAULT 0 NOT NULL,filePath VARCHAR2(400) NOT NULL,serverId NVARCHAR2(100) NULL,queueId NVARCHAR2(50) NOT NULL,generationStartDate DATE NULL,nextGenerationDate DATE NULL,
	CONSTRAINT LUM_PK_CACHEDPAGE PRIMARY KEY (cachedPageId),
	CONSTRAINT LUM_FK_CACHEDPAGE1 FOREIGN KEY (webResourceId) REFERENCES lum_WebResource(id) ON DELETE CASCADE 
);
	
CREATE UNIQUE INDEX LUM_IDX_CACHEDPAGE1 ON lum_CachedPage(filePath,webResourceId);
	
CREATE INDEX LUM_IDX_CACHEDPAGE2 ON lum_CachedPage(status,priority desc,resourcePriority desc,queueId,initialPriority,nextGenerationDate);
	
CREATE UNIQUE INDEX LUM_IDX_CACHEDPAGE3 ON lum_CachedPage(webResourceId);
	
CREATE INDEX LUM_IDX_CACHEDPAGE5 ON lum_CachedPage(queueId,status,priority desc,resourcePriority desc,initialPriority,nextGenerationDate);
	
-- Index for optimizing PageCacheManager.resetExpiredGeneratingPages.
CREATE INDEX LUM_IDX_CACHEDPAGE6 ON lum_CachedPage(status,generationStartDate);
		
	
	
	
	
CREATE TABLE lum_PageCacheGenerator
(	id CHAR(32) NOT NULL,state NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_PAGECACHEGENERATOR PRIMARY KEY (id)
);

	
CREATE TABLE lum_PCQueue
(	id CHAR(32) NOT NULL,queueId NVARCHAR2(50) NOT NULL,onDemandOnly NUMBER(1) NOT NULL,deleteOutdated NUMBER(1) NOT NULL,shadowCacheEnabled NUMBER(1) NOT NULL,isolated NUMBER(1) NOT NULL,maxErrorCount NUMBER(10) NOT NULL,errorPriorityDecrement NUMBER(10) NOT NULL,errorGenerationDelay NUMBER(10) NOT NULL,autoBulkExpiration NUMBER(1) NOT NULL,
	CONSTRAINT LUM_PK_PCQUEUE PRIMARY KEY (id)
);
	
CREATE INDEX LUM_IX_PCQUEUE1 ON lum_PCQueue(isolated,queueId);
	
CREATE UNIQUE INDEX LUM_IX_PCQUEUE2 ON lum_PCQueue(queueId);
	
	
CREATE TABLE lum_PCGeneratorProfile
(	id CHAR(32) NOT NULL,displayName NVARCHAR2(50) NOT NULL,delayBetweenGenerations NUMBER(10) NOT NULL,delayAfterStabilization NUMBER(10) NOT NULL,numberOfThreads NUMBER(10) NOT NULL,numberOfThreadsIU NUMBER(10) NOT NULL,threadPriority NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_PCGENERATORPROFILE PRIMARY KEY (id)
);
	
CREATE UNIQUE INDEX LUM_IX_PCGENERATORPROFILE1 ON lum_PCGeneratorProfile(displayName);
	
	
CREATE TABLE lum_PCGeneratorConfig
(	id CHAR(32) NOT NULL,displayName NVARCHAR2(50) NOT NULL,generateOtherQueues NUMBER(1) NOT NULL,generatorProfileId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_PCGENERATORCONFIG PRIMARY KEY (id),
	CONSTRAINT LUM_FK_PCGENERATORCONFIG1 FOREIGN KEY (generatorProfileId) REFERENCES lum_PCGeneratorProfile(id)
);
	
CREATE UNIQUE INDEX LUM_IX_PCGENERATORCONFIG1 ON lum_PCGeneratorConfig(displayName);
	
	
CREATE TABLE lum_PCGCQueue
(	id CHAR(32) NOT NULL,generatorConfigId CHAR(32) NOT NULL,queueId NVARCHAR2(50) NOT NULL,
	CONSTRAINT LUM_PK_PCGCQUEUE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_PCGCQUEUE1 FOREIGN KEY (generatorConfigId) REFERENCES lum_PCGeneratorConfig(id) ON DELETE CASCADE 
);
	
CREATE UNIQUE INDEX LUM_IX_PCGCQUEUE1 ON lum_PCGCQueue(generatorConfigId,queueId);
	
	
CREATE TABLE lum_PCGCServer
(	id CHAR(32) NOT NULL,generatorConfigId CHAR(32) NOT NULL,serverId NVARCHAR2(50) NOT NULL,
	CONSTRAINT LUM_PK_PCGCSERVER PRIMARY KEY (id),
	CONSTRAINT LUM_FK_PCGCSERVER1 FOREIGN KEY (generatorConfigId) REFERENCES lum_PCGeneratorConfig(id) ON DELETE CASCADE 
);
	
CREATE UNIQUE INDEX LUM_IX_PCGCSERVER1 ON lum_PCGCServer(generatorConfigId,serverId);
	
	
CREATE TABLE lum_XslCache
(	fileName NVARCHAR2(255) NOT NULL,enabled NUMBER(10) NOT NULL,cached NUMBER(10) DEFAULT 1 NOT NULL,
	CONSTRAINT LUM_PK_XSLCACHE PRIMARY KEY (fileName)
);
	
CREATE TABLE lum_File
(	fileId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,fullPath NVARCHAR2(500) NOT NULL,contentType NVARCHAR2(100) NOT NULL,fileSize NUMBER(10) NOT NULL,type NUMBER(10) NOT NULL,height NUMBER(10) NULL,width NUMBER(10) NULL,duration NUMBER(19) NULL,format NVARCHAR2(255) NULL,macroType NVARCHAR2(10) NOT NULL,colorDepth NUMBER(10) NULL,videoFrameRate DOUBLE PRECISION NULL,audioBitRate DOUBLE PRECISION NULL,audioSamplingRate NUMBER(10) NULL,audioChannels NUMBER(10) NULL,
	CONSTRAINT LUM_PK_FILE PRIMARY KEY (fileId),
	CONSTRAINT LUM_FK_FILE FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
);
	
CREATE TABLE lum_FileMimeType
(	id CHAR(32) NOT NULL,mimeType NVARCHAR2(100) NOT NULL,icon NVARCHAR2(255) NOT NULL,
	CONSTRAINT LUM_PK_FILEMIMETYPE PRIMARY KEY (id),
	CONSTRAINT LUM_UN_FILEMIMETYPE UNIQUE (mimeType)
);
	
CREATE TABLE lum_Files
(	filesId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_FILES PRIMARY KEY (filesId)
);
	
CREATE TABLE lum_FilesList
(	id CHAR(32) NOT NULL,filesId CHAR(32) NOT NULL,fileId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_FILESLIST PRIMARY KEY (id),
	CONSTRAINT LUM_FK_FILESLIST FOREIGN KEY (filesId) REFERENCES lum_Files(filesId),
	CONSTRAINT LUM_FK_FILESLIST2 FOREIGN KEY (fileId) REFERENCES lum_File(fileId) ON DELETE CASCADE 
);
	
CREATE TABLE lum_FTTransformationPrm
(	id CHAR(32) NOT NULL,name NVARCHAR2(32) NOT NULL,builder NVARCHAR2(128) NULL,
	CONSTRAINT LUM_PK_FTTRANSFORMATIONPRM PRIMARY KEY (id)
);
	
CREATE UNIQUE INDEX LUM_IX_FTTRANSFORMATIONPRM1 ON lum_FTTransformationPrm(name);
	
	
CREATE TABLE lum_FTTransformationFile
(	id CHAR(32) NOT NULL,filePrefix NVARCHAR2(10) NULL,fileSufix NVARCHAR2(10) NULL,serviceInstanceId CHAR(32) NOT NULL,contentType NVARCHAR2(64) NOT NULL,name NVARCHAR2(64) NOT NULL,displayName NVARCHAR2(255) NOT NULL,extension NVARCHAR2(10) NULL,
	CONSTRAINT LUM_PK_FTTRANSFORMATIONFILE PRIMARY KEY (id)
);
	
CREATE INDEX LUM_IX_FTTRANSFORMATIONFILE1 ON lum_FTTransformationFile(serviceInstanceId);
	
CREATE UNIQUE INDEX LUM_IX_FTTRANSFORMATIONFILE2 ON lum_FTTransformationFile(name,serviceInstanceId);
	
	
CREATE TABLE lum_FTTransformationPrmValues
(	id CHAR(32) NOT NULL,tnsfPrmId CHAR(32) NOT NULL,fileTransformationId CHAR(32) NOT NULL,value NVARCHAR2(64) NOT NULL,
	CONSTRAINT LUM_PK_FTTRANSFORMATIONPRMVLS PRIMARY KEY (id),
	CONSTRAINT LUM_FK_FTTRANSFORMATIONPRMVLS1 FOREIGN KEY (tnsfPrmId) REFERENCES lum_FTTransformationPrm(id),
	CONSTRAINT LUM_FK_FTTRANSFORMATIONPRMVLS2 FOREIGN KEY (fileTransformationId) REFERENCES lum_FTTransformationFile(id)
);
	
CREATE INDEX LUM_IX_FTTRANSFORMATIONPRMVLS1 ON lum_FTTransformationPrmValues(fileTransformationId,tnsfPrmId);
	
CREATE TABLE lum_FTTransformedFile
(	transformedFileId CHAR(32) NOT NULL,fileTnsfId CHAR(32) NOT NULL,fileConfigId CHAR(32) NOT NULL,fullPath NVARCHAR2(500) NOT NULL,contentType NVARCHAR2(100) NOT NULL,name NVARCHAR2(255) NOT NULL,fileSize NUMBER(10) NOT NULL,height NUMBER(10) NULL,width NUMBER(10) NULL,duration NUMBER(19) NULL,format NVARCHAR2(10) NULL,macroType NVARCHAR2(10) NOT NULL,colorDepth NUMBER(10) NULL,videoFrameRate DOUBLE PRECISION NULL,audioBitRate DOUBLE PRECISION NULL,audioSamplingRate NUMBER(10) NULL,audioChannels NUMBER(10) NULL,
	CONSTRAINT LUM_PK_FTTRANSFORMEDFILE PRIMARY KEY (transformedFileId),
	CONSTRAINT LUM_FK_FTTRANSFORMEDFILE1 FOREIGN KEY (fileTnsfId) REFERENCES lum_FTTransformationFile(id)
);
	
CREATE INDEX LUM_IX_FTTRANSFORMEDFILE1 ON lum_FTTransformedFile(fileConfigId);
	
CREATE TABLE lum_Observer
(	observerId CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,className NVARCHAR2(255) NOT NULL,enabled NUMBER(10) DEFAULT 1 NOT NULL,
	CONSTRAINT LUM_PK_OBSERVER PRIMARY KEY (observerId)
);
	
CREATE TABLE lum_MailConfig
(	id CHAR(32) NOT NULL,smtpHost NVARCHAR2(255) NOT NULL,smtpPort NUMBER(10) NOT NULL,smtpUser NVARCHAR2(255) NULL,smtpPassword NVARCHAR2(255) NULL,sendInterval NUMBER(10) NOT NULL,maxSendThreads NUMBER(10) NOT NULL,blockSize NUMBER(10) NOT NULL,blockInterval NUMBER(10) NOT NULL,removeMailsSent NUMBER(10) NOT NULL,queueLockTimeout NUMBER(10) NOT NULL,mailSenderClass NVARCHAR2(255) NOT NULL,defaultFromAddress NVARCHAR2(255) NULL,cryptographicProtocol NVARCHAR2(4) DEFAULT 'NONE' NOT NULL,socketTimeout NUMBER(10) DEFAULT 0 NOT NULL,socketConnectionTimeout NUMBER(10) DEFAULT 0 NOT NULL,
	CONSTRAINT LUM_PK_MAILCONFIG PRIMARY KEY (id)
);
	
CREATE TABLE lum_MailBody
(	id CHAR(32) NOT NULL,textMsg CLOB NULL,htmlMsg CLOB NULL,
	CONSTRAINT LUM_PK_MAILBODY PRIMARY KEY (id)
);
	
CREATE TABLE lum_Mail
(	id CHAR(32) NOT NULL,mailQueueId CHAR(32) NOT NULL,mailBodyId CHAR(32) NULL,charset NVARCHAR2(50) NOT NULL,subject NVARCHAR2(255) NULL,fromAddress NVARCHAR2(255) NULL,toAddress NVARCHAR2(255) NULL,ccAddress NVARCHAR2(255) NULL,bccAddress NVARCHAR2(255) NULL,replyToAddress NVARCHAR2(255) NULL,requestDateTime DATE NOT NULL,sourceComponent NVARCHAR2(255) NULL,sourceComponentStringsUrl NVARCHAR2(255) NULL,sentDateTime DATE NULL,status NUMBER(10) NOT NULL,errorMessage NVARCHAR2(500) NULL,
	CONSTRAINT LUM_PK_MAIL PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MAIL1 FOREIGN KEY (mailBodyId) REFERENCES lum_MailBody(id)
);

	
CREATE INDEX LUM_IDX_MAIL1 ON lum_Mail(mailQueueId,requestDateTime);
	
CREATE INDEX LUM_IDX_MAIL3 ON lum_Mail(mailBodyId);
	
	
CREATE TABLE lum_MailDestination
(	id CHAR(32) NOT NULL,mailId CHAR(32) NOT NULL,emailAddress NVARCHAR2(255) NOT NULL,name NVARCHAR2(255) NULL,sentDateTime DATE NULL,status NUMBER(10) NOT NULL,errorMessage NVARCHAR2(2000) NULL,
	CONSTRAINT LUM_PK_MAILDESTINATION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MAILDESTINATION1 FOREIGN KEY (mailId) REFERENCES lum_Mail(id)
);
	
CREATE INDEX LUM_IDX_MAILDESTINATION1 ON lum_MailDestination(mailId,status);
	
CREATE TABLE lum_MailAttachment
(	id CHAR(32) NOT NULL,mailBodyId CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,description CLOB NULL,contentType NVARCHAR2(100) NOT NULL,content BLOB NOT NULL,
	CONSTRAINT LUM_PK_MAILATTACHMENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MAILATTACHMENT FOREIGN KEY (mailBodyId) REFERENCES lum_MailBody(id)
);
	
CREATE INDEX LUM_IDX_MAILATTACHMENT1 ON lum_MailAttachment(mailBodyId);
	
CREATE TABLE lum_MailQueue
(	id CHAR(32) NOT NULL,locked NUMBER(10) NOT NULL,lockExpirationDateTime DATE NULL,requestDateTime DATE NULL,
	CONSTRAINT LUM_PK_MAILQUEUE PRIMARY KEY (id)
);
	
	
CREATE INDEX LUM_IDX_MAILQUEUE1 ON lum_MailQueue(requestDateTime,lockExpirationDateTime,locked);
	
	
CREATE TABLE lum_Preferences
(	id CHAR(32) NOT NULL,resourceId CHAR(32) NOT NULL,resourceType NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_PREFERENCES PRIMARY KEY (id),
	CONSTRAINT LUM_UN_PREFERENCES1 UNIQUE (resourceId,resourceType)
);
	
CREATE TABLE lum_PrefPrinc
(	id CHAR(32) NOT NULL,preferencesId CHAR(32) NOT NULL,principalId CHAR(32) NULL,
	CONSTRAINT LUM_PK_PREFPRINC PRIMARY KEY (id),
	CONSTRAINT LUM_UN_PREFPRINC1 UNIQUE (preferencesId,principalId),
	CONSTRAINT LUM_FK_PREFPRINC1 FOREIGN KEY (preferencesId) REFERENCES lum_Preferences(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_PREFPRINC2 FOREIGN KEY (principalId) REFERENCES lum_Principal(principalId) ON DELETE CASCADE 
);
	
CREATE TABLE lum_PrefPrincEntry
(	id CHAR(32) NOT NULL,prefPrincId CHAR(32) NOT NULL,entryKey NVARCHAR2(255) NOT NULL,readOnly NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_PREFPRINCENTRY PRIMARY KEY (id),
	CONSTRAINT LUM_UN_PREFPRINCENTRY1 UNIQUE (prefPrincId,entryKey),
	CONSTRAINT LUM_FK_PREFPRINCENTRY1 FOREIGN KEY (prefPrincId) REFERENCES lum_PrefPrinc(id) ON DELETE CASCADE 
);
	
CREATE TABLE lum_PrefPrincEntryValue
(	prefPrincEntryId CHAR(32) NOT NULL,value NVARCHAR2(255) NULL,position NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_PREFPRINCENTRYVALUE PRIMARY KEY (prefPrincEntryId,position),
	CONSTRAINT LUM_FK_PREFPRINCENTRYVALUE1 FOREIGN KEY (prefPrincEntryId) REFERENCES lum_PrefPrincEntry(id) ON DELETE CASCADE 
);
	
CREATE TABLE lum_Progress
(	id CHAR(32) NOT NULL,processId CHAR(32) NOT NULL,createdDateTime NUMBER(19) NOT NULL,lastMessage NUMBER(10) NOT NULL,type NUMBER(10) NOT NULL,overallMax NUMBER(10) NULL,overallValue NUMBER(10) NULL,itemMax NUMBER(10) NULL,itemValue NUMBER(10) NULL,message CLOB NULL,elapsedTime NUMBER(10) NULL,innerProgressId CHAR(32) NULL,
	CONSTRAINT LUM_PK_PROGRESS PRIMARY KEY (id)
);	
	
CREATE INDEX LUM_IDX_PROGRESS1 ON lum_Progress(processId,type);
	
CREATE INDEX LUM_IDX_PROGRESS2 ON lum_Progress(processId,createdDateTime);
	
CREATE INDEX LUM_IDX_PROGRESS3 ON lum_Progress(createdDateTime);
	
CREATE TABLE lum_Cache
(	id NVARCHAR2(255) NOT NULL,capacity NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_CACHE PRIMARY KEY (id)
);	
	
CREATE TABLE lum_RepType
(	id NVARCHAR2(255) NOT NULL,reportPath NVARCHAR2(255) NOT NULL,baseUrl NVARCHAR2(255) NULL,configParametersDef CLOB NULL,runtimeParametersDef CLOB NULL,dataSourceProvider NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_REPTYPE PRIMARY KEY (id)
);
	
CREATE UNIQUE INDEX LUM_IX_REPTYPE ON lum_RepType(baseUrl);

	
CREATE TABLE lum_RepTypeParameter
(	id CHAR(32) NOT NULL,reportTypeId NVARCHAR2(255) NOT NULL,name NVARCHAR2(100) NOT NULL,type NVARCHAR2(255) NULL,value CLOB NULL,
	CONSTRAINT LUM_PK_REPTYPEPARAM PRIMARY KEY (id),
	CONSTRAINT LUM_FK_REPTYPEPARAM1 FOREIGN KEY (reportTypeId) REFERENCES lum_RepType(Id)
);
	
CREATE UNIQUE INDEX LUM_IX_REPTYPEPARAMETER ON lum_RepTypeParameter(reportTypeId,name);
	
	
CREATE TABLE lum_RepReport
(	id CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,description NVARCHAR2(255) NULL,reportTypeId NVARCHAR2(255) NOT NULL,
	CONSTRAINT LUM_PK_REPREPORT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_REPREPORT1 FOREIGN KEY (reportTypeId) REFERENCES lum_RepType(Id)
);
	
CREATE INDEX LUM_IX_REPREPORT ON lum_RepReport(reportTypeId);
	
	
CREATE TABLE lum_RepParameter
(	id CHAR(32) NOT NULL,reportId CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,value NVARCHAR2(255) NOT NULL,
	CONSTRAINT LUM_PK_REPPARAMETER PRIMARY KEY (id),
	CONSTRAINT LUM_FK_REPPARAMETER1 FOREIGN KEY (reportId) REFERENCES lum_RepReport(Id)
);
	
CREATE UNIQUE INDEX LUM_IX_REPPARAMETER ON lum_RepParameter(reportId,name);
	
CREATE TABLE lum_DEPackage
(	id CHAR(32) NOT NULL,userId CHAR(32) NOT NULL,outcome NVARCHAR2(50) NOT NULL,installDate DATE NULL,packageFile NVARCHAR2(255) NOT NULL,
	CONSTRAINT LUM_PK_DEPACKAGE PRIMARY KEY (id)
);	
	
CREATE TABLE lum_DEModule
(	id NVARCHAR2(50) NOT NULL,displayName NVARCHAR2(50) NOT NULL,description CLOB NULL,deploymentDateTime DATE NOT NULL,type NUMBER(10) NOT NULL,checksum NCHAR(28) NULL,numErrors NUMBER(10) NOT NULL,numWarnings NUMBER(10) NOT NULL,deployMessage CLOB NULL,version NVARCHAR2(30) NULL,status NVARCHAR2(20) NOT NULL,resolved NUMBER(1) NOT NULL,sourceDir NVARCHAR2(255) NULL,metadata BLOB NULL,
	CONSTRAINT LUM_PK_DEMODULE PRIMARY KEY (id)
);
	
CREATE INDEX LUM_IX_DEMODULE1 ON lum_DEModule(type);
	
CREATE INDEX LUM_IX_DEMODULE2 ON lum_DEModule(status);
	
CREATE TABLE lum_DEComponent
(	id NVARCHAR2(255) NOT NULL,moduleId NVARCHAR2(50) NOT NULL,version NVARCHAR2(30) NULL,description CLOB NULL,channelId NVARCHAR2(32) NULL,sourcePath NVARCHAR2(255) NULL,checksum NCHAR(28) NULL,status NVARCHAR2(20) NOT NULL,numErrors NUMBER(10) NOT NULL,numWarnings NUMBER(10) NOT NULL,deployMessage CLOB NULL,deploymentDateTime DATE NOT NULL,resolved NUMBER(1) NOT NULL,lastUpgradeStepExecuted NVARCHAR2(30) NULL,metadata BLOB NULL,
	CONSTRAINT LUM_PK_DECOMPONENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_DECOMPONENT1 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_DECOMPONENT2 FOREIGN KEY (moduleId) REFERENCES lum_DEModule(Id)
);
	
CREATE INDEX LUM_IX_DECOMPONENT1 ON lum_DEComponent(channelId);
	
CREATE INDEX LUM_IX_DECOMPONENT2 ON lum_DEComponent(status);
	
CREATE VIEW lum_vwChannelComponent AS
(
	
			SELECT
				ch.*,
				co.id componentId,
				co.sourcePath,
				mo.sourceDir as moduleSourceDir
			FROM
				lum_Channel ch
			LEFT OUTER JOIN lum_DEComponent co
				ON ch.channelId = co.channelId
			LEFT OUTER JOIN lum_DEModule mo
				ON co.moduleId = mo.id
		
);
	
CREATE TABLE lum_DELastDeployment
(	id CHAR(32) NOT NULL,installInProgress NUMBER(1) NOT NULL,
	CONSTRAINT LUM_PK_DELASTDEPLOYMENT PRIMARY KEY (id)
);
	
CREATE TABLE lum_DEDeploymentMessage
(	id CHAR(32) NOT NULL,objectId NVARCHAR2(255) NOT NULL,objectType NCHAR(1) NOT NULL,messageLevel NVARCHAR2(10) NOT NULL,title NVARCHAR2(255) NOT NULL,message CLOB NOT NULL,
	CONSTRAINT LUM_PK_DEDEPLOYMENTMESSAGE PRIMARY KEY (id)
);
	
CREATE INDEX LUM_IX_DEDEPLOYMENTMESSAGE1 ON lum_DEDeploymentMessage(objectType,objectId);
	
	
CREATE TABLE lum_CrySymmetricCipher
(	id CHAR(32) NOT NULL,cipherKey VARCHAR2(100) NOT NULL,iv VARCHAR2(100) NOT NULL,macKey VARCHAR2(100) NOT NULL,
	CONSTRAINT LUM_PK_CRYSYMMETRICCIPHER PRIMARY KEY (id)
);
	
	
CREATE TABLE lum_AuditCategory
(	categoryId CHAR(32) NOT NULL,auditCategoryKey NVARCHAR2(100) NOT NULL,name NVARCHAR2(50) NOT NULL,description CLOB NOT NULL,enabled NUMBER(1) NOT NULL,
	CONSTRAINT LUM_PK_AUDITCATEGORY PRIMARY KEY (categoryId)
);
	
CREATE UNIQUE INDEX LUM_IDX_AUDITCATEGORY1 ON lum_AuditCategory(auditCategoryKey);

	
CREATE TABLE lum_AuditEntryType
(	auditEntryTypeId CHAR(32) NOT NULL,auditEntryTypeKey NVARCHAR2(100) NOT NULL,name NVARCHAR2(50) NOT NULL,description CLOB NOT NULL,enabled NUMBER(1) NOT NULL,categoryId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_AUDITENTRYTYPE PRIMARY KEY (auditEntryTypeId),
	CONSTRAINT LUM_FK_AUDITENTRYTYPE1 FOREIGN KEY (categoryId) REFERENCES lum_AuditCategory(categoryId)
);
	
CREATE UNIQUE INDEX LUM_IDX_AUDITENTRYTYPE1 ON lum_AuditEntryType(auditEntryTypeKey);
	
CREATE INDEX LUM_IDX_AUDITENTRYTYPE2 ON lum_AuditEntryType(categoryId);

	
CREATE TABLE lum_AuditEntry
(	auditEntryId CHAR(32) NOT NULL,entryDate DATE NOT NULL,serverId NVARCHAR2(50) NOT NULL,entryUserLogin NVARCHAR2(100) NOT NULL,title NVARCHAR2(255) NOT NULL,description CLOB NOT NULL,categoryId CHAR(32) NOT NULL,auditEntryTypeId CHAR(32) NOT NULL,parentEntryId CHAR(32) NULL,entryUserId NVARCHAR2(32) NOT NULL,entryState NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_AUDITENTRY PRIMARY KEY (auditEntryId),
	CONSTRAINT LUM_FK_AUDITENTRY1 FOREIGN KEY (categoryId) REFERENCES lum_AuditCategory(categoryId),
	CONSTRAINT LUM_FK_AUDITENTRY2 FOREIGN KEY (auditEntryTypeId) REFERENCES lum_AuditEntryType(auditEntryTypeId),
	CONSTRAINT LUM_FK_AUDITENTRY3 FOREIGN KEY (parentEntryId) REFERENCES lum_AuditEntry(auditEntryId)
);
	
CREATE INDEX LUM_IDX_AUDITENTRY1 ON lum_AuditEntry(entryDate,categoryId,auditEntryTypeId);
	
CREATE INDEX LUM_IDX_AUDITENTRY2 ON lum_AuditEntry(categoryId,auditEntryTypeId,entryDate);	
	
CREATE TABLE lum_AuditConfig
(	auditConfigId CHAR(32) NOT NULL,cleanInterval NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_AUDITCONFIG PRIMARY KEY (auditConfigId)
);

	
CREATE TABLE lum_WFRType
(	id CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,fileReplicatorClassName NVARCHAR2(255) NOT NULL,
	CONSTRAINT LUM_PK_WFRTYPE PRIMARY KEY (id)
);	
	
CREATE TABLE lum_WFRProperty
(	id CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,dataType NVARCHAR2(255) NOT NULL,type CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_WFRPROPERTY PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WFRPROPERTY1 FOREIGN KEY (type) REFERENCES lum_WFRType(id)
);
	
CREATE TABLE lum_WFReplication
(	id CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,type CHAR(32) NOT NULL,filterChannelId NVARCHAR2(32) NULL,filterPath CLOB NULL,websiteId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_WFREPLICATION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WFREPLICATION1 FOREIGN KEY (type) REFERENCES lum_WFRType(id),
	CONSTRAINT LUM_FK_WFREPLICATION2 FOREIGN KEY (filterChannelId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_WFREPLICATION3 FOREIGN KEY (websiteId) REFERENCES lum_Website(id)
);
	
	
-- Index to filter lum_WFReplication.
CREATE INDEX LUM_IX_WFREPLICATION1 ON lum_WFReplication(websiteId);
		
	
CREATE TABLE lum_WFRPropValue
(	id CHAR(32) NOT NULL,replicationId CHAR(32) NOT NULL,propertyId CHAR(32) NOT NULL,value NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_WFRPROPVALUE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WFRPROPVALUE1 FOREIGN KEY (replicationId) REFERENCES lum_WFReplication(id),
	CONSTRAINT LUM_FK_WFRPROPVALUE2 FOREIGN KEY (propertyId) REFERENCES lum_WFRProperty(id)
);
	
	
-- Index for navigation from lum_WFReplication to lum_WFRPropValue.
CREATE INDEX LUM_IX_WFRPROPVALUE1 ON lum_WFRPropValue(replicationId);
	
	
CREATE TABLE lum_SISocialNetwork
(	id CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,permissions NVARCHAR2(255) NULL,messageMaxLength NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_SISOCIALNETWORK PRIMARY KEY (id)
);
	
CREATE TABLE lum_SIApplication
(	id CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,publicSocialNetworkId CHAR(32) NOT NULL,enabled NUMBER(1) NOT NULL,consumerKey NVARCHAR2(64) NOT NULL,consumerKeySecret NVARCHAR2(64) NOT NULL,
	CONSTRAINT LUM_PK_SIAPPLICATION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SIAPPLICATION1 FOREIGN KEY (publicSocialNetworkId) REFERENCES lum_SISocialNetwork(id)
);
	
CREATE INDEX LUM_IX_SIAPPLICATION1 ON lum_SIApplication(publicSocialNetworkId);
	
CREATE TABLE lum_SIApplicationAccount
(	id CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,socialNetworkApplicationId CHAR(32) NOT NULL,enabled NUMBER(1) NOT NULL,authenticationResponse NVARCHAR2(255) NOT NULL,allServiceInstances NUMBER(1) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,publicationDestination NVARCHAR2(255) NOT NULL,publicationToken NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_SIAPPLICATIONACCOUNT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SIAPPLICATIONACCOUNT1 FOREIGN KEY (socialNetworkApplicationId) REFERENCES lum_SIApplication(id),
	CONSTRAINT LUM_FK_SIAPPLICATIONACCOUNT2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
);
	
CREATE INDEX LUM_IX_SIAPPLICATIONACCOUNT1 ON lum_SIApplicationAccount(socialNetworkApplicationId);
	
CREATE INDEX LUM_IX_SIAPPLICATIONACCOUNT2 ON lum_SIApplicationAccount(serviceInstanceId);
	
CREATE TABLE lum_SIMessage
(	id CHAR(32) NOT NULL,remoteId NVARCHAR2(50) NULL,messageContent CLOB NOT NULL,accountId CHAR(32) NOT NULL,publishDate DATE NULL,status NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_SIMESSAGE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SIMESSAGE1 FOREIGN KEY (accountId) REFERENCES lum_SIApplicationAccount(id) ON DELETE CASCADE 
);
	
CREATE INDEX LUM_IX_SIMESSAGE1 ON lum_SIMessage(accountId,status);
	
	
CREATE TABLE lum_SIRemoteMessageId
(	messageId CHAR(32) NOT NULL,remoteId NVARCHAR2(50) NULL,accountId CHAR(32) NULL,
	CONSTRAINT LUM_PK_SIREMOTEMESSAGEID PRIMARY KEY (messageId),
	CONSTRAINT LUM_FK_SIREMOTEMESSAGEID1 FOREIGN KEY (accountId) REFERENCES lum_SIApplicationAccount(id) ON DELETE CASCADE 
);
	
CREATE INDEX LUM_IX_SIREMOTEMESSAGEID1 ON lum_SIRemoteMessageId(accountId);
	
	
CREATE TABLE lum_SIQueue
(	messageId CHAR(32) NOT NULL,status NUMBER(10) NOT NULL,processId CHAR(32) NOT NULL,publishDateTime DATE NOT NULL,messageContent CLOB NOT NULL,accountId CHAR(32) NOT NULL,action NVARCHAR2(1) NOT NULL,locale NVARCHAR2(5) NULL,
	CONSTRAINT LUM_PK_SIQUEUE PRIMARY KEY (processId),
	CONSTRAINT LUM_FK_SIQUEUE1 FOREIGN KEY (accountId) REFERENCES lum_SIApplicationAccount(id) ON DELETE CASCADE 
);
	
CREATE INDEX LUM_IX_SIQUEUE1 ON lum_SIQueue(messageId,publishDateTime desc);
	
CREATE INDEX LUM_IX_SIQUEUE2 ON lum_SIQueue(publishDateTime desc);
	
CREATE INDEX LUM_IX_SIQUEUE3 ON lum_SIQueue(accountId,publishDateTime desc);
	
	
CREATE TABLE lum_PQQueueServerConfig
(	id CHAR(32) NOT NULL,serverId NVARCHAR2(128) NOT NULL,threads NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_PQQUEUESERVERCONFIG PRIMARY KEY (id)
);
	
	
CREATE UNIQUE INDEX LUM_IDX_PQQUEUESERVERCONFIG1 ON lum_PQQueueServerConfig(serverId);
	
	
CREATE TABLE lum_PQQueueTaskProcess
(	id CHAR(32) NOT NULL,title NVARCHAR2(128) NULL,status NUMBER(10) NOT NULL,queued DATE NOT NULL,scheduled DATE NULL,scheduledTimeMillis NUMBER(19) NOT NULL,started DATE NULL,finished DATE NULL,task BLOB NOT NULL,ownerId CHAR(32) NULL
);

	
	
	
	
	ALTER TABLE lum_PQQueueTaskProcess ADD (taskOrder NUMBER(19) NOT NULL, CONSTRAINT LUM_PK_PQQUEUETASKPROCESS PRIMARY KEY (taskOrder));
	
	CREATE SEQUENCE lum_PQQueueTaskProcess_SEQ ORDER;
	
	
CREATE INDEX LUM_IX_PQQUEUETASKPROCESS1 ON lum_PQQueueTaskProcess(scheduledTimeMillis,status,taskOrder,id);
	
CREATE UNIQUE INDEX LUM_IX_PQQUEUETASKPROCESS2 ON lum_PQQueueTaskProcess(id);
	
CREATE INDEX LUM_IX_PQQUEUETASKPROCESS3 ON lum_PQQueueTaskProcess(status,id);
	
CREATE INDEX LUM_IX_PQQUEUETASKPROCESS4 ON lum_PQQueueTaskProcess(ownerId);
	
	ALTER TABLE lum_PQQueueTaskProcess ADD (CONSTRAINT LUM_UN_PQQUEUETASKPROCESS1 UNIQUE(id));
	
	
CREATE TABLE lum_PQTaskProcessLock
(	id CHAR(32) NOT NULL,taskProcessId CHAR(32) NOT NULL,lockId NVARCHAR2(100) NOT NULL,lockType NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_PQTASKPROCESSLOCK PRIMARY KEY (id),
	CONSTRAINT LUM_FK_PQTASKPROCESSLOCK1 FOREIGN KEY (taskProcessId) REFERENCES lum_PQQueueTaskProcess(id) ON DELETE CASCADE 
);
	
CREATE INDEX LUM_IX_PQTASKPROCESSLOCK1 ON lum_PQTaskProcessLock(taskProcessId,lockId,lockType);
	
	
CREATE TABLE lum_SNSocialNetwork
(	socialNetworkId CHAR(32) NOT NULL,name NVARCHAR2(150) NOT NULL,creationDate DATE NOT NULL,channelBaseId NVARCHAR2(32) NOT NULL,personalPageId NVARCHAR2(32) NOT NULL,socialProfileServiceInstanceId CHAR(32) NULL,socialProfileSourceId NVARCHAR2(255) NULL,socialProfileUserFieldId NVARCHAR2(255) NULL,socialProfileClassName NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_SNSOCIALNETWORK PRIMARY KEY (socialNetworkId),
	CONSTRAINT LUM_FK_SNSOCIALNETWORK1 FOREIGN KEY (channelBaseId) REFERENCES lum_Channel(channelId),
	CONSTRAINT LUM_FK_SNSOCIALNETWORK2 FOREIGN KEY (personalPageId) REFERENCES lum_Page(pageId),
	CONSTRAINT LUM_FK_SNSOCIALNETWORK3 FOREIGN KEY (socialProfileServiceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
);
	
CREATE INDEX LUM_IX_SNSOCIALNETWORK1 ON lum_SNSocialNetwork(channelBaseId);
	
CREATE UNIQUE INDEX LUM_IX_SNSOCIALNETWORK2 ON lum_SNSocialNetwork(name);
	
CREATE INDEX LUM_IX_SNSOCIALNETWORK3 ON lum_SNSocialNetwork(personalPageId);
	
CREATE INDEX LUM_IX_SNSOCIALNETWORK4 ON lum_SNSocialNetwork(socialProfileServiceInstanceId);
	
	
CREATE TABLE lum_Theme
(	id NVARCHAR2(100) NOT NULL,name NVARCHAR2(50) NOT NULL,description NVARCHAR2(255) NULL,openRtInterfaceBehavior NVARCHAR2(10) NULL,openRtIntfBehaviorAcPar NVARCHAR2(10) NULL,
	CONSTRAINT LUM_PK_THEME PRIMARY KEY (id)
);
	
-- Theme usage view
CREATE VIEW lum_vwThemeUsage AS
(
	
			select 
				c.channelId as channelId, 
				c.name as channelName, 
				pag.pageId as pageId, 
				pag.name as pageName, 
				cast(pdv.value as varchar2(100)) as themeId
			from 
				lum_PBPropertyBag pb 
				inner join 
					lum_PBProperty p 
					on pb.id = p.propertyBagId 
				inner join 
					lum_PBPropertyDefault pd 
					on p.propertyDefaultId = pd.id 
				inner join 
					lum_PBPropertyDefValue pdv
					on pdv.propertyDefaultId = pd.id
				left outer join
					lum_Channel c 
					on c.propertyBagId = pb.id 
				left outer join
					lum_Page pag
					on pag.propertyBagId = pb.id 
			where 
				p.name = 'lumis.portal.themes'
		
);
	
	
CREATE TABLE lum_SRRelationshipType
(	id NVARCHAR2(128) NOT NULL,name NVARCHAR2(64) NOT NULL,reverseName NVARCHAR2(64) NOT NULL,bidirectional NUMBER(1) NOT NULL,
	CONSTRAINT LUM_PK_SRRELATIONSHIPTYPE PRIMARY KEY (id)
);
	
	
CREATE TABLE lum_SRNodeTypeSource
(	id CHAR(32) NOT NULL,relationshipTypeId NVARCHAR2(128) NOT NULL,typeName NVARCHAR2(128) NOT NULL,
	CONSTRAINT LUM_PK_SRNODETYPESOUCE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SRNODETYPESOURCE FOREIGN KEY (relationshipTypeId) REFERENCES lum_SRRelationshipType(id)
);
	
	
CREATE TABLE lum_SRNodeTypeTarget
(	id CHAR(32) NOT NULL,relationshipTypeId NVARCHAR2(128) NOT NULL,typeName NVARCHAR2(128) NOT NULL,
	CONSTRAINT LUM_PK_SRNODETYPETARGET PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SRNODETYPETARGET FOREIGN KEY (relationshipTypeId) REFERENCES lum_SRRelationshipType(id)
);
	
	
CREATE TABLE lum_SRRelatableNode
(	id CHAR(32) NOT NULL,creationDate DATE NOT NULL,type NVARCHAR2(128) NOT NULL,objectId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_SRRELATABLENODE PRIMARY KEY (id)
);
	
	
CREATE TABLE lum_SRRelationshipNode
(	id CHAR(32) NOT NULL,source CHAR(32) NOT NULL,target CHAR(32) NOT NULL,relationshipTypeId NVARCHAR2(128) NOT NULL,creationDate DATE NOT NULL,
	CONSTRAINT LUM_PK_SRRELATIONSHIPNODE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SRRELATIONSHIPNODE FOREIGN KEY (source) REFERENCES lum_SRRelatableNode(id),
	CONSTRAINT LUM_FK_SRRELATIONSHIPNODE1 FOREIGN KEY (target) REFERENCES lum_SRRelatableNode(id),
	CONSTRAINT LUM_FK_SRRELATIONSHIPNODE2 FOREIGN KEY (relationshipTypeId) REFERENCES lum_SRRelationshipType(id)
);
	
	
CREATE TABLE lum_FMMacrotypeMap
(	id CHAR(32) NOT NULL,expression NVARCHAR2(255) NOT NULL,fileMetadataType NVARCHAR2(10) NOT NULL,position NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_FMMACROTYPEMAP PRIMARY KEY (id)
);
	
CREATE TABLE lum_BCBusinessContext
(	id NVARCHAR2(255) NOT NULL,name NVARCHAR2(255) NOT NULL,content CLOB NOT NULL,
	CONSTRAINT LUM_PK_BCBUSINESSCONTEXT PRIMARY KEY (id)
);
	
CREATE TABLE lum_IPProcess
(	id CHAR(32) NOT NULL,title NVARCHAR2(255) NOT NULL,lastExecutedStep NUMBER(10) NULL,processState NVARCHAR2(50) NOT NULL,owner CHAR(32) NULL,ownerUserId NVARCHAR2(255) NULL,callbackHandler BLOB NULL,creationDate DATE NULL,lastExecutedStepDate DATE NULL,
	CONSTRAINT LUM_PK_IPPROCESS PRIMARY KEY (id)
);
	
CREATE TABLE lum_IPStep
(	id CHAR(32) NOT NULL,stepNumber NUMBER(10) NOT NULL,processId CHAR(32) NOT NULL,executable BLOB NOT NULL,mandatory NUMBER(1) NOT NULL,ignoredDate DATE NULL,ignoredUserId NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_IPSTEP PRIMARY KEY (id),
	CONSTRAINT LUM_FK_IPSTEP1 FOREIGN KEY (processId) REFERENCES lum_IPProcess(id)
);
	
-- Index for searching steps of a process.
CREATE INDEX LUM_IX_IPSTEP1 ON lum_IPStep(processId);
	
CREATE TABLE lum_IPStepOutcome
(	stepId CHAR(32) NOT NULL,message CLOB NULL,outcomeStatus NVARCHAR2(50) NULL,
	CONSTRAINT LUM_PK_IPSTEPOUTCOME PRIMARY KEY (stepId),
	CONSTRAINT LUM_FK_IPSTEPOUTCOME1 FOREIGN KEY (stepId) REFERENCES lum_IPStep(id)
);
	
CREATE TABLE lum_IPStepEnvironment
(	id CHAR(32) NOT NULL,environmentTag NVARCHAR2(255) NULL,environmentType NVARCHAR2(25) NULL,stepId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_IPSTEPENVIRONMENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_IPSTEPENVIRONMENT1 FOREIGN KEY (stepId) REFERENCES lum_IPStep(id)
);
	
-- Index for searching environment restrictions of a step.
CREATE INDEX LUM_IX_IPSTEPENVIRONMENT1 ON lum_IPStepEnvironment(stepId);
	
CREATE TABLE lum_CfgEnvironmentConf
(	id CHAR(32) NOT NULL,type NVARCHAR2(25) NOT NULL,fileSystemImplementation NVARCHAR2(255) NULL,javaMelodyEnabled NUMBER(1) DEFAULT 1 NOT NULL,bigDataRepositoryType NVARCHAR2(30) DEFAULT 'ELASTICSEARCH_EMBEDDED' NOT NULL,bigDataRepositoryClassName NVARCHAR2(255) NULL,esClusterName NVARCHAR2(50) NULL,esConnectionAddresses CLOB NULL,esIndexNamePrefix NVARCHAR2(80) NULL,esBulkConcurrentRequests NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_CFGENVIRONMENTCONF PRIMARY KEY (id)
);
	
CREATE TABLE lum_CfgEnvironmentTag
(	environmentId CHAR(32) NOT NULL,tag NVARCHAR2(255) NOT NULL,
	CONSTRAINT LUM_PK_CFGENVIRONMENTTAG PRIMARY KEY (environmentId,tag),
	CONSTRAINT LUM_FK_CFGENVIRONMENTTAG1 FOREIGN KEY (environmentId) REFERENCES lum_CfgEnvironmentConf(id)
);
	
CREATE TABLE lum_CfgServerConf
(	serverId NVARCHAR2(255) NOT NULL,baseSourcePath NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_CFGSERVERCONF PRIMARY KEY (serverId)
);
	
-- Area Tags usage view
CREATE VIEW lum_vwAreaTagsUsage AS
(
	
			select 
				c.channelId as channelId, 
				c.name as channelName, 
				si.serviceInstanceId as serviceInstanceId, 
				si.name as serviceInstanceName, 
				cast(pdv.value as varchar2(100)) as tag
			from 
				lum_PBPropertyBag pb 
				inner join 
					lum_PBProperty p 
					on pb.id = p.propertyBagId 
				inner join 
					lum_PBPropertyDefault pd 
					on p.propertyDefaultId = pd.id 
				inner join 
					lum_PBPropertyDefValue pdv
					on pdv.propertyDefaultId = pd.id
				left outer join
					lum_Channel c 
					on c.propertyBagId = pb.id 
				left outer join
					lum_ServiceInstance si
					on si.propertyBagId = pb.id 
			where 
				p.name = 'lumis.portal.areatag'
		
);

-----------------------------------------------
-- Generated SQL for: /lumis/doui/database
-----------------------------------------------

	
CREATE TABLE lum_DouiDefinition
(	serviceId NVARCHAR2(255) NOT NULL,definition CLOB NOT NULL,
	CONSTRAINT LUM_PK_DOUIDEFINITION PRIMARY KEY (serviceId),
	CONSTRAINT LUM_FK_DOUIDEFINITION FOREIGN KEY (serviceId) REFERENCES lum_Service(serviceId)
);
	
CREATE TABLE lum_DouiControl
(	controlId NVARCHAR2(255) NOT NULL,controlType NVARCHAR2(255) NOT NULL,controlClass NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PF_DOUICONTROL PRIMARY KEY (controlId)
);
	
CREATE TABLE lum_DouiSource
(	sourceId NVARCHAR2(255) NOT NULL,sourceType NVARCHAR2(255) NOT NULL,sourceClass NVARCHAR2(255) NULL,dataProviderClass NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_DOUISOURCE PRIMARY KEY (sourceId)
);
	
CREATE TABLE lum_DouiProcessAction
(	processActionId NVARCHAR2(255) NOT NULL,processActionType NVARCHAR2(255) NOT NULL,processActionClass NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_DOUIPROCESSACT PRIMARY KEY (processActionId)
);

-----------------------------------------------
-- Generated SQL for: /lumis/content/database
-----------------------------------------------


	
CREATE TABLE lum_Content
(	id CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,sourceId NVARCHAR2(255) NOT NULL,defaultLocale NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_CONTENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CONTENT1 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
);
	
CREATE INDEX LUM_IDX_CONTENT1 ON lum_Content(serviceInstanceId,sourceId);

	
CREATE TABLE lum_ContentVersion
(	id CHAR(32) NOT NULL,itemId CHAR(32) NOT NULL,versionNumber NUMBER(10) NOT NULL,primaryName NVARCHAR2(255) NULL,introduction CLOB NULL,contentLocaleId CHAR(32) NOT NULL,lastModifiedBy CHAR(32) NOT NULL,lastModifiedDateTime DATE NOT NULL,
	CONSTRAINT LUM_PK_CONTENTVERSION PRIMARY KEY (id)
);
	
CREATE UNIQUE INDEX LUM_IX_CONTENTVERSION1 ON lum_ContentVersion(itemId);
	
CREATE UNIQUE INDEX LUM_IX_CONTENTVERSION2 ON lum_ContentVersion(contentLocaleId,versionNumber);
	
	
CREATE TABLE lum_ContentLocale
(	id CHAR(32) NOT NULL,contentId CHAR(32) NOT NULL,locale NVARCHAR2(10) NOT NULL,createdDateTime DATE NOT NULL,createdBy CHAR(32) NOT NULL,activeVersionId CHAR(32) NULL,publishedVersionId CHAR(32) NULL,dirty NUMBER(1) DEFAULT 0 NOT NULL,lockType NVARCHAR2(10) NULL,lockedBy CHAR(32) NULL,lockedDate DATE NULL,
	CONSTRAINT LUM_PK_CONTENTLOCALE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CONTENTLOCALE1 FOREIGN KEY (contentId) REFERENCES lum_Content(id),
	CONSTRAINT LUM_FK_CONTENTLOCALE2 FOREIGN KEY (activeVersionId) REFERENCES lum_ContentVersion(id),
	CONSTRAINT LUM_FK_CONTENTLOCALE3 FOREIGN KEY (publishedVersionId) REFERENCES lum_ContentVersion(id)
);

	
CREATE UNIQUE INDEX LUM_IX_CONTENTLOCALE1 ON lum_ContentLocale(contentId,locale);
	
	
CREATE INDEX LUM_IX_CONTENTLOCALE2 ON lum_ContentLocale(locale);

	
CREATE INDEX LUM_IX_CONTENTLOCALE3 ON lum_ContentLocale(dirty);
	
	
-- Optimize navigation from ContentVersion to ContentLocale or Content based on activeVersionId.
CREATE INDEX LUM_IX_CONTENTLOCALE4 ON lum_ContentLocale(activeVersionId,contentId);
	
	
-- Optimize navigation from ContentVersion to ContentLocale or Content based on publishedVersionId.
CREATE INDEX LUM_IX_CONTENTLOCALE5 ON lum_ContentLocale(publishedVersionId,contentId);
	
	
CREATE TABLE lum_ContentComment
(	id CHAR(32) NOT NULL,contentLocaleId CHAR(32) NOT NULL,createdBy CHAR(32) NOT NULL,createdDateTime DATE NOT NULL,commentText CLOB NOT NULL,
	CONSTRAINT LUM_PK_CONTENTCOMMENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CONTENTCOMMENT1 FOREIGN KEY (contentLocaleId) REFERENCES lum_ContentLocale(id)
);
	
	
CREATE TABLE lum_ContentAssociation
(	id CHAR(32) NOT NULL,contentVersionId CHAR(32) NOT NULL,associatedContentId CHAR(32) NOT NULL,type NVARCHAR2(255) NOT NULL,
	CONSTRAINT LUM_PK_CONTENTASSOCIATION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CONTENTASSOCIATION1 FOREIGN KEY (contentVersionId) REFERENCES lum_ContentVersion(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_CONTENTASSOCIATION2 FOREIGN KEY (associatedContentId) REFERENCES lum_Content(id) ON DELETE CASCADE 
);
	
	
CREATE TABLE lum_ContentPublication
(	id CHAR(32) NOT NULL,contentVersionId CHAR(32) NULL,highlight NUMBER(10) NOT NULL,highlightEndDateTime DATE NULL,publishStartDateTime DATE NULL,publishEndDateTime DATE NULL,published NUMBER(10) NOT NULL,waitingForExpiration NUMBER(10) NOT NULL,waitingForPublishing NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_CONTENTPUBLICATION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CONTENTPUBLICATION1 FOREIGN KEY (contentVersionId) REFERENCES lum_ContentVersion(id)
);
	
	
-- Used for updating published state in ContentClock.
CREATE INDEX LUM_IX_CONTENTPUBLICATION1 ON lum_ContentPublication(published,waitingForPublishing,publishStartDateTime,publishEndDateTime);
	
	
-- Used for updating published state in ContentClock.
CREATE INDEX LUM_IX_CONTENTPUBLICATION2 ON lum_ContentPublication(published,waitingForExpiration,publishStartDateTime,publishEndDateTime);
	
	
-- Used for updating highlight state in ContentClock.
CREATE INDEX LUM_IX_CONTENTPUBLICATION3 ON lum_ContentPublication(highlight,highlightEndDateTime);
	
	
-- Used on default lists, to filter versions that are currently published (and optionally highlighted), and generic queries by content version.
CREATE INDEX LUM_IX_CONTENTPUBLICATION4 ON lum_ContentPublication(contentVersionId,published,highlight);
	
	
CREATE TABLE lum_ContentPubPrincipal
(	id CHAR(32) NOT NULL,contentPublicationId CHAR(32) NOT NULL,principalId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_CONTENTPUBPRINCIPAL PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CONTENTPUBPRINCIPAL1 FOREIGN KEY (contentPublicationId) REFERENCES lum_ContentPublication(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_CONTENTPUBPRINCIPAL2 FOREIGN KEY (principalId) REFERENCES lum_Principal(principalId) ON DELETE CASCADE 
);
	
CREATE UNIQUE INDEX LUM_IDX_CONTENTPUBPRINCIPAL1 ON lum_ContentPubPrincipal(contentPublicationId,principalId);
	
	
CREATE TABLE lum_ContentPubServiceInst
(	id CHAR(32) NOT NULL,contentPublicationId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_CONTENTPUBSERVICEINST PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CONTENTPUBSERVICEINST1 FOREIGN KEY (contentPublicationId) REFERENCES lum_ContentPublication(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_CONTENTPUBSERVICEINST2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId) ON DELETE CASCADE 
);
	
CREATE UNIQUE INDEX LUM_IDX_CONTENTPUBSERVICEINST1 ON lum_ContentPubServiceInst(contentPublicationId,serviceInstanceId);
	
CREATE TABLE lum_ContentTag
(	id CHAR(32) NOT NULL,name NVARCHAR2(30) NOT NULL,normalizedName NVARCHAR2(40) NOT NULL,
	CONSTRAINT LUM_PK_CONTENT_TAG PRIMARY KEY (id)
);
	
CREATE INDEX LUM_IDX_CONTENT_TAG ON lum_ContentTag(normalizedName);
	
CREATE TABLE lum_ContentLocaleTag
(	id CHAR(32) NOT NULL,tagContentId CHAR(32) NOT NULL,contentLocaleId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_LOCALE_CONTENT_TAG PRIMARY KEY (id),
	CONSTRAINT LUM_FK_TAG_CONTENT_ID FOREIGN KEY (tagContentId) REFERENCES lum_Content(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_CONTENT_LOCALE_ID FOREIGN KEY (contentLocaleId) REFERENCES lum_ContentLocale(id) ON DELETE CASCADE 
);
	
CREATE UNIQUE INDEX LUM_IDX_CONTENT_LOCALE_TAG ON lum_ContentLocaleTag(tagContentId,contentLocaleId);
	
CREATE UNIQUE INDEX LUM_IDX_CONTENT_LOCALE_TAG_1 ON lum_ContentLocaleTag(contentLocaleId,tagContentId);
	
CREATE TABLE lum_SIAccountServiceInstance
(	id CHAR(32) NOT NULL,accountId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_SIACCOUNTSVCINSTANCE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SIACCOUNTSVCINSTANCE1 FOREIGN KEY (accountId) REFERENCES lum_SIApplicationAccount(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_SIACCOUNTSVCINSTANCE2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId) ON DELETE CASCADE 
);
	
CREATE INDEX LUM_IX_SIACCOUNTSVCINSTANCE1 ON lum_SIAccountServiceInstance(accountId);
	
CREATE INDEX LUM_IX_SIACCOUNTSVCINSTANCE2 ON lum_SIAccountServiceInstance(serviceInstanceId);
	
CREATE TABLE lum_SIContentMessage
(	id CHAR(32) NOT NULL,contentLocaleId CHAR(32) NOT NULL,messageId CHAR(32) NOT NULL,isDefault NUMBER(1) NOT NULL,
	CONSTRAINT LUM_PK_SICONTENTMESSAGE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_SICONTENTMESSAGE1 FOREIGN KEY (contentLocaleId) REFERENCES lum_ContentLocale(id),
	CONSTRAINT LUM_FK_SICONTENTMESSAGE2 FOREIGN KEY (messageId) REFERENCES lum_SIMessage(id) ON DELETE CASCADE 
);
	
CREATE INDEX LUM_IX_SICONTENTMESSAGE1 ON lum_SIContentMessage(contentLocaleId);
	
CREATE INDEX LUM_IX_SICONTENTMESSAGE2 ON lum_SIContentMessage(messageId);

-----------------------------------------------
-- Generated SQL for: /lumis/workflow/database
-----------------------------------------------

	
CREATE TABLE lum_Workflow
(	workflowId NVARCHAR2(255) NOT NULL,name NVARCHAR2(255) NOT NULL,description NVARCHAR2(255) NULL,baseUrl NVARCHAR2(255) NULL,stringsUrlPrefix NVARCHAR2(255) NULL,definition CLOB NULL,
	CONSTRAINT LUM_PK_WORKFLOW PRIMARY KEY (workflowId)
);
	
CREATE TABLE lum_WorkflowMetaData
(	workflowMetaDataId CHAR(32) NOT NULL,contentLocaleId CHAR(32) NOT NULL,stateId NVARCHAR2(100) NOT NULL,assignedTo CHAR(32) NULL,
	CONSTRAINT LUM_PK_WORKFLOWMD PRIMARY KEY (workflowMetaDataId),
	CONSTRAINT LUM_FK_WORKFLOWMD FOREIGN KEY (contentLocaleId) REFERENCES lum_ContentLocale(id)
);

	
CREATE UNIQUE INDEX LUM_IX_WORKFLOWMD ON lum_WorkflowMetaData(contentLocaleId);
	
	
CREATE TABLE lum_WorkflowServiceInstance
(	id CHAR(32) NOT NULL,workflowId NVARCHAR2(255) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_WORKFLOWSI PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WORKFLOWSI FOREIGN KEY (workflowId) REFERENCES lum_Workflow(workflowId),
	CONSTRAINT LUM_FK_WORKFLOWSI2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
);
	
	
CREATE UNIQUE INDEX LUM_IX_WORKFLOWSI ON lum_WorkflowServiceInstance(serviceInstanceId);
	
	
CREATE TABLE lum_WorkflowPermission
(	id CHAR(32) NOT NULL,workflowServiceInstanceId CHAR(32) NOT NULL,principalId CHAR(32) NOT NULL,role NVARCHAR2(100) NOT NULL,type NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_WORKFLOW_PERM PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WORKFLOW_PERM FOREIGN KEY (workflowServiceInstanceId) REFERENCES lum_WorkflowServiceInstance(id),
	CONSTRAINT LUM_FK_WORKFLOW_PERM2 FOREIGN KEY (principalId) REFERENCES lum_Principal(principalId) ON DELETE CASCADE 
);

-----------------------------------------------
-- Generated SQL for: lumis/portal/cluster/multiserver/database
-----------------------------------------------

	
CREATE TABLE lum_ClusterTrans
(	transmissionId CHAR(32) NOT NULL,sender NVARCHAR2(50) NOT NULL,content BLOB NOT NULL,sendDateTime DATE DEFAULT  SYSDATE  NOT NULL,
	CONSTRAINT LUM_PK_CLUSTERTRANS PRIMARY KEY (transmissionId)
);
	
	
	
	
-- For optimizing removal of expired transmissions.
CREATE INDEX LUM_IX_CLUSTERTRANS ON lum_ClusterTrans(sendDateTime);
	
	
CREATE TABLE lum_ClusterTransAck
(	serverId NVARCHAR2(255) NOT NULL,lastTransmissionOrder NUMBER(19) NULL,
	CONSTRAINT LUM_PK_CLUSTERTRANSACK PRIMARY KEY (serverId)
);
	
	
CREATE TABLE lum_ClusterTransOrder
(	transmissionId CHAR(32) NOT NULL,
	CONSTRAINT LUM_FK_CLUSTERTRANSORDER FOREIGN KEY (transmissionId) REFERENCES lum_ClusterTrans(transmissionId) ON DELETE CASCADE 
);
	
	
CREATE UNIQUE INDEX LUM_IX_CLUSTERTRANSORDER ON lum_ClusterTransOrder(transmissionId);
	
	
	
	
	
	ALTER TABLE lum_ClusterTransOrder ADD (transmissionOrder NUMBER(19) NOT NULL, CONSTRAINT LUM_PK_CLUSTERTRANSORDER PRIMARY KEY(transmissionOrder));
	CREATE SEQUENCE lum_ClusterTransOrder_SEQ ORDER;
	
	
CREATE TABLE lum_ClusterConfig
(	id CHAR(32) NOT NULL,durableMessageTimeToLive NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_CLUSTERCONFIG PRIMARY KEY (id)
);

-----------------------------------------------
-- Generated SQL for: lumis/portal/monitor/impl/database
-----------------------------------------------


	
CREATE TABLE lum_MonCategory
(	id CHAR(32) NOT NULL,name NVARCHAR2(50) NOT NULL,description CLOB NULL,stringResourcePath NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_MONCATEGORY PRIMARY KEY (id)
);
	
	
CREATE TABLE lum_MonEvent
(	id CHAR(32) NOT NULL,categoryId CHAR(32) NOT NULL,eventKey NVARCHAR2(255) NOT NULL,name NVARCHAR2(50) NOT NULL,description CLOB NULL,stringResourcePath NVARCHAR2(255) NULL,enabled NUMBER(1) NOT NULL,duration NUMBER(19) NOT NULL,
	CONSTRAINT LUM_PK_MONEVENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MONEVENT1 FOREIGN KEY (categoryId) REFERENCES lum_MonCategory(id)
);
	
CREATE UNIQUE INDEX LUM_IX_MONEVENT1 ON lum_MonEvent(eventKey);
	
CREATE INDEX LUM_IX_MONEVENT2 ON lum_MonEvent(categoryId);
	
	
CREATE TABLE lum_MonEventData
(	id CHAR(32) NOT NULL,eventId CHAR(32) NOT NULL,startOfPeriod DATE NULL,endOfPeriod DATE NULL,startOfPeriodMillis NUMBER(19) NULL,endOfPeriodMillis NUMBER(19) NULL,
	CONSTRAINT LUM_PK_MONEVENTDATA PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MONEVENTDATA1 FOREIGN KEY (eventId) REFERENCES lum_MonEvent(id)
);
	
CREATE INDEX LUM_IX_MONEVENTDATA1 ON lum_MonEventData(eventId,startOfPeriodMillis,endOfPeriodMillis);
	
CREATE INDEX LUM_IX_MONEVENTDATA2 ON lum_MonEventData(eventId,startOfPeriod,endOfPeriod);
	
	
CREATE TABLE lum_MonAggregationType
(	id CHAR(32) NOT NULL,aggregationTypeKey NVARCHAR2(255) NOT NULL,name NVARCHAR2(50) NOT NULL,description CLOB NULL,stringResourcePath NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_MONAGGREGATIONTYPE PRIMARY KEY (id)
);
	
CREATE UNIQUE INDEX LUM_IX_MONAGGREGATIONTYPE1 ON lum_MonAggregationType(aggregationTypeKey);
	
	
CREATE TABLE lum_MonEventAggregType
(	id CHAR(32) NOT NULL,eventId CHAR(32) NOT NULL,aggregationTypeId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_MONEVENTAGGREGTYPE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MONEVENTAGGREGTYPE1 FOREIGN KEY (eventId) REFERENCES lum_MonEvent(id),
	CONSTRAINT LUM_FK_MONEVENTAGGREGTYPE2 FOREIGN KEY (aggregationTypeId) REFERENCES lum_MonAggregationType(id)
);
	
CREATE INDEX LUM_IX_MONEVENTAGGREGTYPE1 ON lum_MonEventAggregType(eventId);
	
CREATE INDEX LUM_IX_MONEVENTAGGREGTYPE2 ON lum_MonEventAggregType(aggregationTypeId);
	
	
CREATE TABLE lum_MonEventDataAggregation
(	id CHAR(32) NOT NULL,eventDataId CHAR(32) NOT NULL,aggregationTypeId CHAR(32) NOT NULL,value NVARCHAR2(1000) NULL,
	CONSTRAINT LUM_PK_MONEVENTDATAAGGREG PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MONEVENTDATAAGGREG1 FOREIGN KEY (eventDataId) REFERENCES lum_MonEventData(id),
	CONSTRAINT LUM_FK_MONEVENTDATAAGGREG2 FOREIGN KEY (aggregationTypeId) REFERENCES lum_MonAggregationType(id)
);
	
CREATE UNIQUE INDEX LUM_IX_MONEVENTDATAAGGREG1 ON lum_MonEventDataAggregation(eventDataId,aggregationTypeId);
	
	
CREATE TABLE lum_MonMeasureType
(	id CHAR(32) NOT NULL,measureTypeKey NVARCHAR2(255) NOT NULL,name NVARCHAR2(50) NOT NULL,description CLOB NULL,unit NVARCHAR2(50) NOT NULL,stringResourcePath NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_MONMEASURETYPE PRIMARY KEY (id)
);
	
CREATE UNIQUE INDEX LUM_IX_MONMEASURETYPE1 ON lum_MonMeasureType(measureTypeKey);
	
	
CREATE TABLE lum_MonEventDataMeasure
(	id CHAR(32) NOT NULL,eventDataId CHAR(32) NOT NULL,measureTypeId CHAR(32) NOT NULL,sumOfValues DOUBLE PRECISION NOT NULL,minValue DOUBLE PRECISION NOT NULL,maximumValue DOUBLE PRECISION NOT NULL,lastValue DOUBLE PRECISION NOT NULL,sumOfSquares DOUBLE PRECISION NOT NULL,hits NUMBER(19) NOT NULL,firstUpdate DATE NOT NULL,lastUpdate DATE NOT NULL,
	CONSTRAINT LUM_PK_MONEVENTDATAMEASURE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MONEVENTDATAMEASURE1 FOREIGN KEY (eventDataId) REFERENCES lum_MonEventData(id),
	CONSTRAINT LUM_FK_MONEVENTDATAMEASURE2 FOREIGN KEY (measureTypeId) REFERENCES lum_MonMeasureType(id)
);
	
CREATE UNIQUE INDEX LUM_IX_MONEVENTDATAMEASURE1 ON lum_MonEventDataMeasure(eventDataId,measureTypeId);
	

-----------------------------------------------
-- Generated SQL for: lumis/service/activitystream/database
-----------------------------------------------

	
CREATE TABLE lum_ASAction
(	id NVARCHAR2(100) NOT NULL,stringResourcePaths CLOB NULL,displayName NVARCHAR2(50) NOT NULL,
	CONSTRAINT LUM_PK_ASACTIONTYPE PRIMARY KEY (id)
);
	
CREATE TABLE lum_ASObjectType
(	id NVARCHAR2(100) NOT NULL,stringResourcePaths CLOB NULL,displayName NVARCHAR2(50) NOT NULL,
	CONSTRAINT LUM_PK_ASOBJECTTYPE PRIMARY KEY (id)
);
	
CREATE TABLE lum_ASActivity
(	id CHAR(32) NOT NULL,streamServiceInstanceId CHAR(32) NOT NULL,originServiceInstanceId CHAR(32) NOT NULL,createdDateTimeMillis NUMBER(19) NOT NULL,createdBy CHAR(32) NOT NULL,customData CLOB NULL,objectId NVARCHAR2(255) NULL,objectTypeId NVARCHAR2(100) NULL,objectDisplayName NVARCHAR2(255) NULL,objectIntroduction CLOB NULL,objectImageUrl NVARCHAR2(255) NULL,objectUrl NVARCHAR2(255) NULL,actor CHAR(32) NULL,actionId NVARCHAR2(100) NULL,
	CONSTRAINT LUM_PK_ASACTIVITY PRIMARY KEY (id),
	CONSTRAINT LUM_FK_ASACTIVITY1 FOREIGN KEY (objectTypeId) REFERENCES lum_ASObjectType(id),
	CONSTRAINT LUM_FK_ASACTIVITY2 FOREIGN KEY (actionId) REFERENCES lum_ASAction(id),
	CONSTRAINT LUM_FK_ASACTIVITY3 FOREIGN KEY (streamServiceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId),
	CONSTRAINT LUM_FK_ASACTIVITY4 FOREIGN KEY (originServiceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId) ON DELETE CASCADE 
);
	
CREATE INDEX LUM_IX_ASACTIVITY1 ON lum_ASActivity(actionId);
	
CREATE INDEX LUM_IX_ASACTIVITY2 ON lum_ASActivity(objectTypeId);
	
CREATE INDEX LUM_IX_ASACTIVITY3 ON lum_ASActivity(originServiceInstanceId);
	
CREATE INDEX LUM_IX_ASACTIVITY4 ON lum_ASActivity(streamServiceInstanceId,originServiceInstanceId,createdDateTimeMillis);
	
CREATE INDEX LUM_IX_ASACTIVITY5 ON lum_ASActivity(createdDateTimeMillis,streamServiceInstanceId,originServiceInstanceId);

-----------------------------------------------
-- Generated SQL for: lumis/service/album/database
-----------------------------------------------

	
CREATE TABLE lum_Album
(	albumId CHAR(32) NOT NULL,title NVARCHAR2(255) NOT NULL,description CLOB NULL,imageFile CHAR(32) NULL,
	CONSTRAINT LUM_PK_ALBUM PRIMARY KEY (albumId)
);
	
CREATE TABLE lum_AlbumPhotograph
(	photographId CHAR(32) NOT NULL,albumContentId CHAR(32) NOT NULL,imageFile CHAR(32) NOT NULL,thumbnailImageFile CHAR(32) NULL,title NVARCHAR2(255) NULL,credits NVARCHAR2(255) NULL,legend NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_ALBUMPHOTOGRAPH PRIMARY KEY (photographId),
	CONSTRAINT LUM_FK_ALBUMPHOTOGRAPH FOREIGN KEY (albumContentId) REFERENCES lum_Content(id)
);
	
CREATE INDEX LUM_IX_ALBUMPHOTOGRAPH ON lum_AlbumPhotograph(albumContentId);

-----------------------------------------------
-- Generated SQL for: lumis/service/announcement/database
-----------------------------------------------

	
CREATE TABLE lum_Announcement
(	announcementId CHAR(32) NOT NULL,title NVARCHAR2(255) NOT NULL,introduction CLOB NOT NULL,content CLOB NULL,priority NUMBER(10) NOT NULL,linkType NUMBER(10) NOT NULL,linkUrl NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_ANNOUNCEMENT PRIMARY KEY (announcementId)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/banner/database
-----------------------------------------------

	
CREATE TABLE lum_BannerCategory
(	bannerCategoryId CHAR(32) NOT NULL,name NVARCHAR2(100) NOT NULL,description NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_BANNERCAT PRIMARY KEY (bannerCategoryId)
);
	
CREATE TABLE lum_Banner
(	bannerId CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,description NVARCHAR2(255) NOT NULL,categoryId CHAR(32) NULL,type NUMBER(10) NOT NULL,pointWeight NUMBER(10) DEFAULT 1 NOT NULL,htmlContent CLOB NULL,onClickLinkType NUMBER(10) NULL,onClickPageId NVARCHAR2(32) NULL,onClickUrl NVARCHAR2(1000) NULL,onClickPopup NUMBER(10) DEFAULT 0 NULL,onClickPopupProperties NVARCHAR2(255) NULL,width NUMBER(10) NULL,height NUMBER(10) NULL,image CHAR(32) NULL,
	CONSTRAINT LUM_PK_BANNER PRIMARY KEY (bannerId),
	CONSTRAINT LUM_FK_BANNERCAT FOREIGN KEY (categoryId) REFERENCES lum_BannerCategory(bannerCategoryId)
);
	
CREATE INDEX LUM_IX_BANNER1 ON lum_Banner(categoryId);

-----------------------------------------------
-- Generated SQL for: lumis/service/blog/database
-----------------------------------------------

	
	
CREATE TABLE lum_Blog
(	id CHAR(32) NOT NULL,title NVARCHAR2(255) NOT NULL,introduction CLOB NULL,owner CHAR(32) NOT NULL,postsperpage NUMBER(10) DEFAULT 10 NOT NULL,
	CONSTRAINT LUM_PK_BLOG PRIMARY KEY (id)
);
	
	
CREATE INDEX LUM_IX_BLOG1 ON lum_Blog(owner);
	
	
CREATE TABLE lum_BlogPost
(	id CHAR(32) NOT NULL,blogContentId CHAR(32) NULL,title NVARCHAR2(255) NULL,content CLOB NOT NULL,contentImages CHAR(32) NULL,numberOfComments NUMBER(10) NULL,
	CONSTRAINT LUM_PK_BLOGPOST PRIMARY KEY (id),
	CONSTRAINT LUM_FK_BLOGPOST1 FOREIGN KEY (blogContentId) REFERENCES lum_Content(id)
);
	
	
CREATE INDEX LUM_IX_BLOGPOST1 ON lum_BlogPost(blogContentId);
	
	
CREATE TABLE lum_BlogPostComment
(	id CHAR(32) NOT NULL,blogPostContentId CHAR(32) NULL,commentText CLOB NOT NULL,
	CONSTRAINT LUM_PK_BLOGPOSTCOMMENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_BLOGPOSTCOMMENT1 FOREIGN KEY (blogPostContentId) REFERENCES lum_Content(id)
);
	
	
CREATE INDEX LUM_IX_BLOGPOSTCOMMENT1 ON lum_BlogPostComment(blogPostContentId);
	

-----------------------------------------------
-- Generated SQL for: lumis/service/callcenteronline/database
-----------------------------------------------

	
	
CREATE TABLE lum_COLAttendingHours
(	id CHAR(32) NOT NULL,dayOfWeek NUMBER(10) NOT NULL,startTime DATE NOT NULL,endTime DATE NOT NULL,
	CONSTRAINT LUM_PK_COLATTENDINGHOURS PRIMARY KEY (id)
);
	
	
CREATE TABLE lum_COLStandardMessage
(	id CHAR(32) NOT NULL,message NVARCHAR2(255) NOT NULL,
	CONSTRAINT LUM_PK_COLSTANDARDMESSAGE PRIMARY KEY (id)
);
	
	
CREATE TABLE lum_COLRequest
(	id CHAR(32) NOT NULL,firstMessage NVARCHAR2(255) NOT NULL,clientId CHAR(32) NOT NULL,attendantId CHAR(32) NULL,state NUMBER(10) NOT NULL,chatConversationId CHAR(32) NOT NULL,requestTime DATE NOT NULL,attendedTime DATE NULL,
	CONSTRAINT LUM_PK_COLREQUEST PRIMARY KEY (id)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/categorization/database
-----------------------------------------------

	
CREATE TABLE lum_CategorizationTerm
(	termId CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,description CLOB NULL,parentTermContentId CHAR(32) NULL,
	CONSTRAINT LUM_PK_CATEGORIZATIONTERM PRIMARY KEY (termId),
	CONSTRAINT LUM_FK_CATEGORIZATIONTERM FOREIGN KEY (parentTermContentId) REFERENCES lum_Content(id)
);
	
	
CREATE INDEX LUM_IX_CATEGORIZATIONTERM ON lum_CategorizationTerm(parentTermContentId);
	

-----------------------------------------------
-- Generated SQL for: lumis/collaboration/chat/database
-----------------------------------------------

	
	
CREATE TABLE lum_ChatConversation
(	id CHAR(32) NOT NULL,state NUMBER(10) NOT NULL,moderated NUMBER(1) NOT NULL,moderator CHAR(32) NULL,userLimit NUMBER(10) NULL,startTime DATE NULL,endTime DATE NULL,
	CONSTRAINT LUM_PK_CHATCONVERSATION PRIMARY KEY (id)
);
	
	
CREATE TABLE lum_ChatUser
(	id CHAR(32) NOT NULL,userId CHAR(32) NOT NULL,userSessionId CHAR(32) NOT NULL,conversationId CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,state NUMBER(1) NOT NULL,lastAccessDate DATE NOT NULL,blocked NUMBER(1) NOT NULL,
	CONSTRAINT LUM_PK_CHATUSER PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CHATUSER FOREIGN KEY (conversationId) REFERENCES lum_ChatConversation(id)
);
	
	
CREATE TABLE lum_ChatMessage
(	id CHAR(32) NOT NULL,conversationId CHAR(32) NOT NULL,fromUserId CHAR(32) NULL,toUserId CHAR(32) NULL,type NUMBER(10) NOT NULL,tone NUMBER(10) NOT NULL,privateMessage NUMBER(1) NOT NULL,style NVARCHAR2(255) NULL,message CLOB NOT NULL,sentTime DATE NOT NULL,moderated NUMBER(1) NOT NULL,approved NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_CHATMESSAGE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CHATMESSAGE FOREIGN KEY (conversationId) REFERENCES lum_ChatConversation(id),
	CONSTRAINT LUM_FK_CHATMESSAGE2 FOREIGN KEY (fromUserId) REFERENCES lum_ChatUser(id),
	CONSTRAINT LUM_FK_CHATMESSAGE3 FOREIGN KEY (toUserId) REFERENCES lum_ChatUser(id)
);
	
	
CREATE INDEX LUM_IDX_CHATMSG1 ON lum_ChatMessage(sentTime);
	
	
CREATE INDEX LUM_IDX_CHATMSG2 ON lum_ChatMessage(moderated);
	
	
CREATE INDEX LUM_IDX_CHATMSG3 ON lum_ChatMessage(approved);

	
CREATE INDEX LUM_IDX_CHATMSG4 ON lum_ChatMessage(privateMessage);

	
CREATE INDEX LUM_IDX_CHATMSG5 ON lum_ChatMessage(toUserId);


-----------------------------------------------
-- Generated SQL for: lumis/service/chatroom/database
-----------------------------------------------

	
	
CREATE TABLE lum_ChatRoom
(	id CHAR(32) NOT NULL,title NVARCHAR2(255) NOT NULL,introduction CLOB NULL,chatConversationId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_CHATROOM PRIMARY KEY (id)
);
	
	
-- join between a chat room and chat conversation
CREATE VIEW lum_vwChatRoom AS
(
	SELECT A.id, A.title, A.introduction, A.chatConversationId, B.state, B.moderated, B.moderator, B.userLimit, B.startTime, B.endTime FROM lum_ChatRoom A, lum_ChatConversation B where A.chatConversationId = B.id
);
	
	

-----------------------------------------------
-- Generated SQL for: lumis/service/comment/database
-----------------------------------------------


CREATE TABLE lum_Comment
(	commentId CHAR(32) NOT NULL,targetContentLocaleId CHAR(32) NOT NULL,commentText CLOB NULL,grade NUMBER(10) NULL,status NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_COMMENT PRIMARY KEY (commentId),
	CONSTRAINT LUM_FK_COMMENT FOREIGN KEY (targetContentLocaleId) REFERENCES lum_ContentLocale(id) ON DELETE CASCADE 
);

CREATE INDEX LUM_IX_COMMENT ON lum_Comment(status,targetContentLocaleId);

CREATE TABLE lum_CommentTotal
(	id CHAR(32) NOT NULL,targetContentLocaleId CHAR(32) NOT NULL,averageGrade DOUBLE PRECISION NOT NULL,numberOfComments NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_COMMENTTOTAL PRIMARY KEY (id),
	CONSTRAINT LUM_FK_COMMENTTOTAL FOREIGN KEY (targetContentLocaleId) REFERENCES lum_ContentLocale(id) ON DELETE CASCADE 
);

CREATE INDEX LUM_IX_COMMENTTOTAL ON lum_CommentTotal(targetContentLocaleId);

-----------------------------------------------
-- Generated SQL for: lumis/service/community/database
-----------------------------------------------

	
CREATE TABLE lum_Community
(	id CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,description CLOB NULL,image CHAR(32) NULL,privacy NUMBER(10) NOT NULL,channelId NVARCHAR2(32) NOT NULL,
	CONSTRAINT LUM_PK_COMMUNITY PRIMARY KEY (id),
	CONSTRAINT LUM_FK_COMMUNITY1 FOREIGN KEY (channelId) REFERENCES lum_Channel(channelId)
);
	
CREATE UNIQUE INDEX LUM_IX_COMMUNITY1 ON lum_Community(channelId);
	
CREATE INDEX LUM_IX_COMMUNITY2 ON lum_Community(privacy,name);
	
	
CREATE TABLE lum_CommMembershipRequest
(	id CHAR(32) NOT NULL,communityId CHAR(32) NOT NULL,requester CHAR(32) NOT NULL,createdDateTime DATE NOT NULL,
	CONSTRAINT LUM_PK_COMMMEMBERSHIPREQUEST PRIMARY KEY (id),
	CONSTRAINT LUM_FK_COMMMEMBERSHIPREQUEST1 FOREIGN KEY (communityId) REFERENCES lum_Community(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_COMMMEMBERSHIPREQUEST2 FOREIGN KEY (requester) REFERENCES lum_User(userId) ON DELETE CASCADE 
);
	
CREATE UNIQUE INDEX LUM_IX_COMMMEMBERSHIPREQUEST1 ON lum_CommMembershipRequest(communityId,requester);

-----------------------------------------------
-- Generated SQL for: lumis/service/contact/database
-----------------------------------------------

	
CREATE TABLE lum_Contact
(	id CHAR(32) NOT NULL,firstName NVARCHAR2(255) NOT NULL,lastName NVARCHAR2(255) NULL,title NVARCHAR2(255) NULL,company NVARCHAR2(255) NULL,email NVARCHAR2(255) NULL,telephoneHome NVARCHAR2(255) NULL,telephoneWork NVARCHAR2(255) NULL,telephoneCell NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_CONTACT PRIMARY KEY (id)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/contactus/database
-----------------------------------------------

	
CREATE TABLE lum_ContactUs
(	id CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,email NVARCHAR2(255) NOT NULL,subject NVARCHAR2(255) NOT NULL,message CLOB NOT NULL,state NUMBER(10) NOT NULL,categoryContentId CHAR(32) NULL,
	CONSTRAINT LUM_PK_CONTACTUS PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CONTACTUS FOREIGN KEY (categoryContentId) REFERENCES lum_Content(id)
);
	
CREATE INDEX LUM_IX_CONTACTUS ON lum_ContactUs(categoryContentId);
	
CREATE TABLE lum_ContactUsCategory
(	id CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,
	CONSTRAINT LUM_PK_CONTACTUSCATEGORY PRIMARY KEY (id)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/event/database
-----------------------------------------------

	
CREATE TABLE lum_Event
(	id CHAR(32) NOT NULL,title NVARCHAR2(255) NOT NULL,introduction CLOB NULL,introductionImage CHAR(32) NULL,content CLOB NOT NULL,contentImage CHAR(32) NULL,locale NVARCHAR2(255) NULL,eventStartDateTime DATE NOT NULL,eventEndDateTime DATE NULL,
	CONSTRAINT LUM_PK_EVENT PRIMARY KEY (id)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/document/database
-----------------------------------------------

	
CREATE TABLE lum_Document
(	id CHAR(32) NOT NULL,type NUMBER(10) NOT NULL,documentFile CHAR(32) NULL,parentFolder CHAR(32) NULL,title NVARCHAR2(255) NULL,description NVARCHAR2(500) NULL,
	CONSTRAINT LUM_PK_DOCUMENT PRIMARY KEY (id)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/faq/database
-----------------------------------------------

	
CREATE TABLE lum_Faq
(	faqId CHAR(32) NOT NULL,question NVARCHAR2(255) NOT NULL,answer CLOB NULL,priority NUMBER(10) NULL,
	CONSTRAINT LUM_PK_FAQ PRIMARY KEY (faqId)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/forum/database
-----------------------------------------------

	
CREATE TABLE lum_ForumCategory
(	id CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,description NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_FORUMCATEGORY PRIMARY KEY (id)
);
	
CREATE TABLE lum_Forum
(	id CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,description CLOB NULL,state NUMBER(10) NOT NULL,moderator CHAR(32) NULL,numberOfTopics NUMBER(10) NULL,numberOfMessages NUMBER(10) NULL,lastMessageDate DATE NULL,lastMessageUser CHAR(32) NULL,categoryContentId CHAR(32) NULL,
	CONSTRAINT LUM_PK_FORUM PRIMARY KEY (id),
	CONSTRAINT LUM_FK_FORUM1 FOREIGN KEY (categoryContentId) REFERENCES lum_Content(id)
);
	
CREATE TABLE lum_ForumTopic
(	id CHAR(32) NOT NULL,topic NVARCHAR2(255) NOT NULL,state NUMBER(10) NOT NULL,numberOfMessages NUMBER(10) NOT NULL,lastMessageDate DATE NULL,lastMessageUser CHAR(32) NULL,numberOfViews NUMBER(10) NULL,firstMessageId CHAR(32) NULL,forumContentId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_FORUMTOPIC PRIMARY KEY (id),
	CONSTRAINT LUM_FK_FORUMTOPIC1 FOREIGN KEY (forumContentId) REFERENCES lum_Content(id)
);
	
CREATE TABLE lum_ForumMessage
(	id CHAR(32) NOT NULL,subject NVARCHAR2(255) NULL,message CLOB NOT NULL,datePosted DATE NOT NULL,postedByUser CHAR(32) NOT NULL,dateEdited DATE NULL,topicContentId CHAR(32) NOT NULL,attachmentFiles CHAR(32) NULL,messageImages CHAR(32) NULL,
	CONSTRAINT LUM_PK_FORUMMESSAGE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_FORUMMESSAGE1 FOREIGN KEY (topicContentId) REFERENCES lum_Content(id)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/hierarchicalcontent/database
-----------------------------------------------

	
CREATE TABLE lum_HierarchicalContent
(	id CHAR(32) NOT NULL,title NVARCHAR2(255) NOT NULL,introduction CLOB NULL,image CHAR(32) NULL,parentContentId CHAR(32) NULL,position NUMBER(10) NOT NULL,type NUMBER(10) NOT NULL,linkContent CLOB NULL,linkDocumentId CHAR(32) NULL,linkOpeningType NUMBER(10) NULL,linkPageId NVARCHAR2(32) NULL,linkUrl NVARCHAR2(255) NULL,linkPopUpProperties NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_HIERARCHICALCONTENT PRIMARY KEY (id)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/htmlcontent/database
-----------------------------------------------

	
CREATE TABLE lum_HCHtmlContent
(	id CHAR(32) NOT NULL,title NVARCHAR2(255) NOT NULL,content CLOB NOT NULL,
	CONSTRAINT LUM_PK_HCHTMLCONTENT PRIMARY KEY (id)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/link/database
-----------------------------------------------

	
CREATE TABLE lum_LinkCategory
(	linkCategoryId CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,description NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_LINK_CATEGORY PRIMARY KEY (linkCategoryId)
);
	
CREATE TABLE lum_Link
(	linkId CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,introduction CLOB NULL,image CHAR(32) NULL,categoryId CHAR(32) NULL,content CLOB NULL,priority NUMBER(10) NOT NULL,linkType NUMBER(10) NOT NULL,linkUrl NVARCHAR2(255) NULL,linkPageId NVARCHAR2(32) NULL,linkClickPopup NUMBER(10) DEFAULT 0 NOT NULL,linkPopupProperties NVARCHAR2(255) NULL,linkDocumentId CHAR(32) NULL,
	CONSTRAINT LUM_PK_LINK PRIMARY KEY (linkId),
	CONSTRAINT LUM_FK_LINKCAT FOREIGN KEY (categoryId) REFERENCES lum_LinkCategory(linkCategoryId)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/mailmarketing/database
-----------------------------------------------

	
	
CREATE TABLE lum_MMktgCategory
(	id CHAR(32) NOT NULL,name NVARCHAR2(100) NOT NULL,description NVARCHAR2(255) NULL,position NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_MMKTGCATEGORY PRIMARY KEY (id)
);

	
CREATE TABLE lum_MMktgSubscription
(	id CHAR(32) NOT NULL,userId CHAR(32) NULL,email NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_MMKTGSUBSCRIPTION PRIMARY KEY (id)
);
	
	
CREATE TABLE lum_MMktgSubscriptionCat
(	id CHAR(32) NOT NULL,subscriptionId CHAR(32) NOT NULL,categoryId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_MMKTGCATSUBSCRIPTION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MMKTGCATSUBSCRIPTION1 FOREIGN KEY (subscriptionId) REFERENCES lum_MMktgSubscription(id),
	CONSTRAINT LUM_FK_MMKTGCATSUBSCRIPTION2 FOREIGN KEY (categoryId) REFERENCES lum_MMktgCategory(id)
);
	
	
CREATE TABLE lum_MMktgBulletin
(	id CHAR(32) NOT NULL,senderEmail NVARCHAR2(255) NOT NULL,title NVARCHAR2(255) NOT NULL,subject NVARCHAR2(255) NOT NULL,content CLOB NOT NULL,sendDateTime DATE NOT NULL,status NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_MMKTGBULLETIN PRIMARY KEY (id)
);
	
	
CREATE TABLE lum_MMktgBulletinCat
(	id CHAR(32) NOT NULL,bulletinId CHAR(32) NOT NULL,categoryId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_MMKTGBULLETINCAT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MMKTGBULLETINCAT1 FOREIGN KEY (bulletinId) REFERENCES lum_MMktgBulletin(id),
	CONSTRAINT LUM_FK_MMKTGBULLETINCAT2 FOREIGN KEY (categoryId) REFERENCES lum_MMktgCategory(id)
);
	
	
	

-----------------------------------------------
-- Generated SQL for: lumis/service/media/database
-----------------------------------------------

	
CREATE TABLE lum_Media
(	id CHAR(32) NOT NULL,type NUMBER(10) NOT NULL,mediaFile CHAR(32) NULL,parentFolder CHAR(32) NULL,title NVARCHAR2(255) NULL,credits NVARCHAR2(255) NULL,legend NVARCHAR2(255) NULL,description CLOB NULL,
	CONSTRAINT LUM_PK_MEDIA PRIMARY KEY (id)
);
	
CREATE INDEX LUM_IX_MEDIA1 ON lum_Media(parentFolder);

-----------------------------------------------
-- Generated SQL for: lumis/service/mediaalbum/database
-----------------------------------------------

	
CREATE TABLE lum_MAAlbum
(	albumId CHAR(32) NOT NULL,title NVARCHAR2(255) NOT NULL,description CLOB NULL,imageFile CHAR(32) NULL,
	CONSTRAINT LUM_PK_MAALBUM PRIMARY KEY (albumId)
);
	
CREATE TABLE lum_MAMedia
(	mediaId CHAR(32) NOT NULL,albumContentId CHAR(32) NOT NULL,mediaFile CHAR(32) NOT NULL,thumbnailMediaFile CHAR(32) NULL,title NVARCHAR2(255) NOT NULL,position NUMBER(10) NOT NULL,credits NVARCHAR2(255) NULL,legend NVARCHAR2(255) NULL,lastModifiedDateTime NUMBER(19) NOT NULL,approved NUMBER(1) NOT NULL,
	CONSTRAINT LUM_PK_MAMEDIA PRIMARY KEY (mediaId),
	CONSTRAINT LUM_FK_MAMEDIA1 FOREIGN KEY (albumContentId) REFERENCES lum_Content(id)
);
	
CREATE INDEX LUM_IX_MAMEDIA1 ON lum_MAMedia(albumContentId,position,lastModifiedDateTime);
	
CREATE VIEW lum_vwMAAlbum AS
(
	
			SELECT
				a.albumId,
				a.imageFile,
				a.title,
				a.description
			FROM
				lum_MAAlbum a
			INNER JOIN
				lum_ContentVersion cv
				ON cv.itemId = a.albumId
			INNER JOIN
				lum_ContentLocale cl
				ON cv.id = cl.publishedVersionId
			WHERE 
				EXISTS 
					(SELECT 
						* 
					FROM 
						lum_MAMedia m 
					WHERE 
						m.albumContentId = cl.contentId 
						AND m.approved = 1)
		
);

-----------------------------------------------
-- Generated SQL for: lumis/service/navigation/database
-----------------------------------------------

	
CREATE TABLE lum_Navigation
(	navigationId CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,description NVARCHAR2(255) NULL,position NUMBER(10) DEFAULT 0 NOT NULL,parentId CHAR(32) NULL,type NUMBER(10) DEFAULT 1 NOT NULL,typeClassName NVARCHAR2(255) NULL,openingType NUMBER(10) DEFAULT 0 NOT NULL,popUpProperties NVARCHAR2(255) NULL,url NVARCHAR2(255) NULL,channelId NVARCHAR2(32) NULL,channelTreeMaxLevels NUMBER(10) NULL,hideRootChannel NUMBER(10) DEFAULT 0 NOT NULL,image CHAR(32) NULL,
	CONSTRAINT LUM_PK_NAVIGATION PRIMARY KEY (navigationId)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/news/database
-----------------------------------------------

	
CREATE TABLE lum_News
(	id CHAR(32) NOT NULL,title NVARCHAR2(255) NOT NULL,introduction CLOB NULL,introductionImage CHAR(32) NULL,content CLOB NOT NULL,contentImage CHAR(32) NULL,
	CONSTRAINT LUM_PK_NEWS PRIMARY KEY (id)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/newsletter/database
-----------------------------------------------

	
CREATE TABLE lum_NLCategory
(	id CHAR(32) NOT NULL,name NVARCHAR2(100) NOT NULL,description NVARCHAR2(255) NULL,position NUMBER(10) NOT NULL,maxItems NUMBER(10) NOT NULL,serviceId NVARCHAR2(250) NOT NULL,sourceId NVARCHAR2(250) NOT NULL,catServiceInstId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_NLCATEGORY PRIMARY KEY (id)
);
	
	
CREATE TABLE lum_NLModel
(	id CHAR(32) NOT NULL,name NVARCHAR2(100) NOT NULL,description CLOB NULL,senderEmail NVARCHAR2(100) NOT NULL,subject NVARCHAR2(200) NOT NULL,introduction CLOB NULL,xslTextMode NVARCHAR2(255) NOT NULL,xslHtmlMode NVARCHAR2(255) NOT NULL,website NVARCHAR2(255) NULL,introductionText CLOB NULL,locale VARCHAR2(10) NOT NULL,
	CONSTRAINT LUM_PK_NLMODEL PRIMARY KEY (id),
	CONSTRAINT LUM_FK_NLMODEL1 FOREIGN KEY (locale) REFERENCES lum_Locale(locale)
);
	
	
CREATE TABLE lum_NLModelCat
(	id CHAR(32) NOT NULL,modelId CHAR(32) NOT NULL,categoryId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_NLMODELCAT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_NLMODELCAT1 FOREIGN KEY (modelId) REFERENCES lum_NLModel(id),
	CONSTRAINT LUM_FK_NLMODELCAT2 FOREIGN KEY (categoryId) REFERENCES lum_NLCategory(id)
);
	
	
CREATE TABLE lum_NLSchedule
(	id CHAR(32) NOT NULL,modelId CHAR(32) NOT NULL,status NUMBER(10) NOT NULL,executionStatus NUMBER(10) DEFAULT 0 NOT NULL,startDate DATE NOT NULL,endDate DATE NULL,processTime DATE NOT NULL,lastProcessDateTime DATE NULL,nextProcessDateTime DATE NULL,scheduleType NUMBER(10) NOT NULL,scheduleWeekDay NUMBER(10) NULL,scheduleMonthDay NUMBER(10) NULL,
	CONSTRAINT LUM_PK_NLSCHEDULE PRIMARY KEY (id)
);
	
	
CREATE TABLE lum_NLSubscription
(	id CHAR(32) NOT NULL,userId CHAR(32) NULL,emailFormat NUMBER(10) NOT NULL,email NVARCHAR2(255) NULL,locale VARCHAR2(10) NOT NULL,
	CONSTRAINT LUM_PK_NLSUBSCRIPTION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_NLSUBSCRIPTION1 FOREIGN KEY (locale) REFERENCES lum_Locale(locale)
);
	
	
CREATE TABLE lum_NLSubscriptionCat
(	id CHAR(32) NOT NULL,subscriptionId CHAR(32) NOT NULL,categoryId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_NLCATSUBSCRIPTION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_NLCATSUBSCRIPTION1 FOREIGN KEY (subscriptionId) REFERENCES lum_NLSubscription(id),
	CONSTRAINT LUM_FK_NLCATSUBSCRIPTION2 FOREIGN KEY (categoryId) REFERENCES lum_NLCategory(id)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/pagepersonalization/database
-----------------------------------------------

	
CREATE TABLE lum_PPWidget
(	id CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,description CLOB NULL,icon CHAR(32) NULL,interfaceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_PPWIDGET PRIMARY KEY (id),
	CONSTRAINT LUM_FK_PPWIDGET1 FOREIGN KEY (interfaceInstanceId) REFERENCES lum_InterfaceInstance(interfaceInstanceId)
);
	
	
CREATE TABLE lum_PPWidgetTmpDef
(	holderInstanceId CHAR(32) NOT NULL,typeOfConf NVARCHAR2(1) NOT NULL,widgets CLOB NULL,
	CONSTRAINT LUM_PK_PPWIDGETTMPDEF PRIMARY KEY (holderInstanceId,typeOfConf)
);
	
	
CREATE TABLE lum_PPIIToBeDeleted
(	interfaceInstanceId CHAR(32) NOT NULL,whenToDelete DATE NOT NULL,
	CONSTRAINT LUM_PK_PPIITOBEDELETED PRIMARY KEY (interfaceInstanceId),
	CONSTRAINT LUM_FK_PPIITOBEDELETED1 FOREIGN KEY (interfaceInstanceId) REFERENCES lum_InterfaceInstance(interfaceInstanceId)
);
	

-----------------------------------------------
-- Generated SQL for: lumis/service/portalmanagement/importprincipal/database
-----------------------------------------------

	
CREATE TABLE lum_ImpPrincReader
(	id CHAR(32) NOT NULL,origin NVARCHAR2(255) NOT NULL,configFile NVARCHAR2(255) NOT NULL,outputFile NVARCHAR2(255) NOT NULL,lastRun DATE NULL,schedule NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT LUM_PK_IMPPRINCREADER PRIMARY KEY (id)
);
	
CREATE TABLE lum_ImpPrincWriter
(	id CHAR(32) NOT NULL,origin NVARCHAR2(255) NOT NULL,inputFile NVARCHAR2(255) NOT NULL,lastRun DATE NULL,ifExistsInDestination NUMBER(10) NULL,ifDoesNotExistInDestination NUMBER(10) NULL,ifDoesNotExistInSource NUMBER(10) NULL,schedule NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT LUM_PK_IMPPRINCWRITER PRIMARY KEY (id)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/questionnaire/database
-----------------------------------------------

	
	
CREATE TABLE lum_QUQuestionnaire
(	id CHAR(32) NOT NULL,title NVARCHAR2(255) NOT NULL,allowAnswerMoreThanOnce NUMBER(1) NOT NULL,anonymous NUMBER(1) NOT NULL,
	CONSTRAINT LUM_PK_QUQUESTIONNAIRE PRIMARY KEY (id)
);
	
	
CREATE TABLE lum_QUQuestion
(	id CHAR(32) NOT NULL,title NVARCHAR2(255) NOT NULL,questionnaireId CHAR(32) NOT NULL,type NVARCHAR2(20) NOT NULL,configuration CLOB NULL,position NUMBER(10) NOT NULL,required NUMBER(1) NOT NULL,
	CONSTRAINT LUM_PK_QUQUESTION PRIMARY KEY (id),
	CONSTRAINT LUM_FK_QUQUESTION1 FOREIGN KEY (questionnaireId) REFERENCES lum_QUQuestionnaire(id)
);
	
	
CREATE TABLE lum_QUAnswer
(	id CHAR(32) NOT NULL,answerDate DATE NOT NULL,userId CHAR(32) NOT NULL,answerValues CLOB NOT NULL,questionnaireId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_QUANSWER PRIMARY KEY (id),
	CONSTRAINT LUM_FK_QUANSWER1 FOREIGN KEY (questionnaireId) REFERENCES lum_QUQuestionnaire(id)
);
	

-----------------------------------------------
-- Generated SQL for: lumis/service/report/database
-----------------------------------------------

	
CREATE TABLE lum_RepReportServInst
(	id CHAR(32) NOT NULL,reportId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_REPREPORTSERVINST PRIMARY KEY (id),
	CONSTRAINT LUM_FK_REPREPORTSERVINST1 FOREIGN KEY (reportId) REFERENCES lum_RepReport(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_REPREPORTSERVINST2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
);
	
CREATE UNIQUE INDEX LUM_IX_REPREPORTSERVINST1 ON lum_RepReportServInst(serviceInstanceId,reportId);

-----------------------------------------------
-- Generated SQL for: lumis/service/resourcescheduler/database
-----------------------------------------------


	
CREATE TABLE lum_ResSchdResource
(	id CHAR(32) NOT NULL,name NVARCHAR2(100) NOT NULL,description CLOB NULL,resourceType NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_RESSCHDRESOURCE PRIMARY KEY (id)
);

	
CREATE TABLE lum_ResSchdSchedule
(	id CHAR(32) NOT NULL,title NVARCHAR2(100) NOT NULL,description CLOB NULL,roomId CHAR(32) NOT NULL,startDateTime DATE NOT NULL,endDateTime DATE NOT NULL,principalId CHAR(32) NULL,
	CONSTRAINT LUM_PK_RESSCHDSCHEDULE PRIMARY KEY (id),
	CONSTRAINT LUM_FK_RESSCHDSCHEDULE1 FOREIGN KEY (roomId) REFERENCES lum_ResSchdResource(id)
);

	
CREATE TABLE lum_ResSchdScheduleRes
(	id CHAR(32) NOT NULL,scheduleId CHAR(32) NOT NULL,resourceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_RESSCHDSCHEDULERES PRIMARY KEY (id),
	CONSTRAINT LUM_FK_RESSCHDSCHEDULERES1 FOREIGN KEY (scheduleId) REFERENCES lum_ResSchdSchedule(id),
	CONSTRAINT LUM_FK_RESSCHDSCHEDULERES2 FOREIGN KEY (resourceId) REFERENCES lum_ResSchdResource(id)
);


-----------------------------------------------
-- Generated SQL for: lumis/service/rss/database
-----------------------------------------------

	
CREATE TABLE lum_Rss
(	id CHAR(32) NOT NULL,name NVARCHAR2(255) NOT NULL,header CLOB NOT NULL,position NUMBER(10) DEFAULT 0 NULL,serviceId NVARCHAR2(250) NOT NULL,servInstanceId CHAR(32) NOT NULL,source NVARCHAR2(255) NULL,category NVARCHAR2(255) NULL,title NVARCHAR2(255) NULL,pubDate NVARCHAR2(255) NULL,description NVARCHAR2(255) NULL,link NVARCHAR2(255) NULL,maxRows NUMBER(10) NULL,filter NVARCHAR2(255) NULL,path NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_RSS PRIMARY KEY (id)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/sendtofriend/database
-----------------------------------------------

	
CREATE TABLE lum_SendToFriend
(	id CHAR(32) NOT NULL,toName NVARCHAR2(255) NOT NULL,toEmail NVARCHAR2(255) NOT NULL,fromName NVARCHAR2(255) NOT NULL,fromEmail NVARCHAR2(255) NOT NULL,message CLOB NOT NULL,link NVARCHAR2(255) NOT NULL,linkTitle CLOB NOT NULL,
	CONSTRAINT LUM_PK_SENDTOFRIEND PRIMARY KEY (id)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/seo/robotstxt/database
-----------------------------------------------

	
	
CREATE TABLE lum_RbtsUserAgent
(	id CHAR(32) NOT NULL,crawlDelay NUMBER(10) NULL,requestRate NVARCHAR2(255) NULL,userAgent NVARCHAR2(255) NOT NULL,visitTime NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_RBTSUSERAGENT PRIMARY KEY (id)
);
	
CREATE INDEX LUM_IX_RBTSUSERAGENT ON lum_RbtsUserAgent(userAgent);
	
	
CREATE TABLE lum_RbtsUserAgentPerm
(	id CHAR(32) NOT NULL,type NUMBER(10) NOT NULL,userAgentId CHAR(32) NOT NULL,value NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_RBTSUSERAGENTPERM PRIMARY KEY (id),
	CONSTRAINT LUM_FK_RBTSUSERAGENT FOREIGN KEY (userAgentId) REFERENCES lum_RbtsUserAgent(id)
);
	
	
CREATE TABLE lum_RbtsSitemap
(	id CHAR(32) NOT NULL,url NVARCHAR2(255) NOT NULL,
	CONSTRAINT LUM_PK_RBTSSITEMAP PRIMARY KEY (id)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/seo/sitemap/database
-----------------------------------------------

	
CREATE TABLE lum_SitemapChannel
(	id CHAR(32) NOT NULL,channelId NVARCHAR2(32) NOT NULL,
	CONSTRAINT LUM_PK_SITEMAPCHANNEL PRIMARY KEY (id)
);



-----------------------------------------------
-- Generated SQL for: lumis/service/simplecontent/database
-----------------------------------------------

	
CREATE TABLE lum_SCSimpleContent
(	id CHAR(32) NOT NULL,title NVARCHAR2(255) NOT NULL,content CLOB NOT NULL,image CHAR(32) NULL,
	CONSTRAINT LUM_PK_SCSIMPLECONTENT PRIMARY KEY (id)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/likeit/database
-----------------------------------------------

	
CREATE TABLE lum_LikeIt
(	id CHAR(32) NOT NULL,itemId NVARCHAR2(255) NOT NULL,itemName NVARCHAR2(255) NULL,itemUrl NVARCHAR2(255) NULL,itemServiceInstanceId CHAR(32) NULL,likeDate DATE NOT NULL,userId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NULL,
	CONSTRAINT LUM_PK_LIKEIT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_LIKEIT1 FOREIGN KEY (itemServiceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_LIKEIT2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
);
	
CREATE UNIQUE INDEX LUM_IX_LIKEIT1 ON lum_LikeIt(serviceInstanceId,itemId,userId);
	
CREATE INDEX LUM_IX_LIKEIT2 ON lum_LikeIt(itemServiceInstanceId);

-----------------------------------------------
-- Generated SQL for: lumis/service/commentit/database
-----------------------------------------------

	
CREATE TABLE lum_CommentIt
(	id CHAR(32) NOT NULL,itemId NVARCHAR2(255) NOT NULL,itemName NVARCHAR2(255) NULL,itemUrl NVARCHAR2(255) NULL,itemServiceInstanceId CHAR(32) NULL,commentText CLOB NOT NULL,commentDate DATE NOT NULL,userId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NULL,
	CONSTRAINT LUM_PK_COMMENTIT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_COMMENTIT1 FOREIGN KEY (itemServiceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_COMMENTIT2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
);
	CREATE INDEX LUM_IX_COMMENTIT1 ON lum_CommentIt(serviceInstanceId, itemId, commentDate DESC);
	
CREATE INDEX LUM_IX_COMMENTIT2 ON lum_CommentIt(itemServiceInstanceId);

-----------------------------------------------
-- Generated SQL for: lumis/service/socialnetworkservices/microblog/database
-----------------------------------------------


	
CREATE TABLE lum_MBPost
(	postId CHAR(32) NOT NULL,creation DATE NOT NULL,owner CHAR(32) NOT NULL,post NVARCHAR2(255) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_MBPOST PRIMARY KEY (postId),
	CONSTRAINT LUM_FK_MBPOST1 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId) ON DELETE CASCADE 
);
	
CREATE INDEX LUM_IX_MBPOST1 ON lum_MBPost(serviceInstanceId);
	
	
CREATE TABLE lum_MBComment
(	id CHAR(32) NOT NULL,postComment NVARCHAR2(255) NOT NULL,author CHAR(32) NOT NULL,postId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,creation DATE NOT NULL,removed NUMBER(1) NULL,
	CONSTRAINT LUM_PK_MBCOMMENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MBCOMMENT1 FOREIGN KEY (postId) REFERENCES lum_MBPost(postId) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_MBCOMMENT2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
);
	
CREATE INDEX LUM_IX_MBCOMMENT1 ON lum_MBComment(postId);
	
CREATE INDEX LUM_IX_MBCOMMENT2 ON lum_MBComment(serviceInstanceId);
	
	
CREATE TABLE lum_MBPostAttachment
(	id CHAR(32) NOT NULL,fileId CHAR(32) NULL,postId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_MBPOSTATTACHMENT PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MBPOSTATTACHMENT1 FOREIGN KEY (postId) REFERENCES lum_MBPost(postId),
	CONSTRAINT LUM_FK_MBPOSTATTACHMENT2 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
);
	
CREATE INDEX LUM_IX_MBPOSTATTACHMENT1 ON lum_MBPostAttachment(postId);
	
CREATE INDEX LUM_IX_MBPOSTATTACHMENT2 ON lum_MBPostAttachment(serviceInstanceId);
	
	
CREATE TABLE lum_MBHash
(	hash NVARCHAR2(255) NOT NULL,postId CHAR(32) NOT NULL,stemmed NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_MBHASH PRIMARY KEY (hash,postId),
	CONSTRAINT LUM_FK_MBHASH1 FOREIGN KEY (postId) REFERENCES lum_MBPost(postId) ON DELETE CASCADE 
);
	
CREATE INDEX LUM_IX_MBHASH1 ON lum_MBHash(postId);
	
	
CREATE TABLE lum_MBUserFollows
(	id CHAR(32) NOT NULL,userId CHAR(32) NOT NULL,followedUserId CHAR(32) NOT NULL,socialNetworkId CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_MBUSERFOLLOWS PRIMARY KEY (id),
	CONSTRAINT LUM_FK_MBUSERFOLLOWS1 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId) ON DELETE CASCADE 
);
	
CREATE INDEX LUM_IX_MBUSERFOLLOWS1 ON lum_MBUserFollows(serviceInstanceId);
	

-----------------------------------------------
-- Generated SQL for: lumis/service/socialnetworkservices/socialprofile/database
-----------------------------------------------

	
CREATE TABLE lum_SNSocialProfile
(	socialProfileId CHAR(32) NOT NULL,lumUserId CHAR(32) NOT NULL,description CLOB NULL,photo CHAR(32) NULL,title NVARCHAR2(255) NULL,departament NVARCHAR2(255) NULL,locale NVARCHAR2(100) NULL,areaCode NVARCHAR2(3) NULL,phone NVARCHAR2(8) NULL,email NVARCHAR2(255) NULL,address CLOB NULL,otherContacts CLOB NULL,birthday DATE NULL,sex NUMBER(10) NOT NULL,name NVARCHAR2(100) NOT NULL,resume CHAR(32) NULL,
	CONSTRAINT LUM_PK_SNSOCIALPROFILE PRIMARY KEY (socialProfileId),
	CONSTRAINT LUM_FK_SNSOCIALPROFILE1 FOREIGN KEY (lumUserId) REFERENCES lum_User(userId)
);
	
CREATE INDEX LUM_IX_SNSOCIALPROFILE1 ON lum_SNSocialProfile(lumUserId);

-----------------------------------------------
-- Generated SQL for: lumis/service/vote/database
-----------------------------------------------

	
CREATE TABLE lum_VoteQuestion
(	id CHAR(32) NOT NULL,question NVARCHAR2(255) NOT NULL,onlyOneVotePerUser NUMBER(10) NOT NULL,optionType NUMBER(10) NOT NULL,numberOfOptions NUMBER(10) NOT NULL,numberOfVotes NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_VOTEQUESTION PRIMARY KEY (id)
);
	
CREATE TABLE lum_VoteOption
(	optionId CHAR(32) NOT NULL,questionId CHAR(32) NOT NULL,optionTitle NVARCHAR2(255) NOT NULL,position NUMBER(10) NOT NULL,numberOfVotes NUMBER(10) NOT NULL,
	CONSTRAINT LUM_PK_VOTEOPTION PRIMARY KEY (optionId),
	CONSTRAINT LUM_FK_VOTEOPTION1 FOREIGN KEY (questionId) REFERENCES lum_VoteQuestion(id)
);
	
CREATE TABLE lum_VoteLog
(	id CHAR(32) NOT NULL,questionId CHAR(32) NOT NULL,userId CHAR(32) NOT NULL,logDate DATE NOT NULL,
	CONSTRAINT LUM_PK_VOTELOG PRIMARY KEY (id),
	CONSTRAINT LUM_FK_VOTELOG1 FOREIGN KEY (questionId) REFERENCES lum_VoteQuestion(id) ON DELETE CASCADE 
);
	
	
CREATE INDEX LUM_IDX_VOTELOG1 ON lum_VoteLog(userId);
	
	
CREATE TABLE lum_VoteOptionLog
(	id CHAR(32) NOT NULL,voteLogId CHAR(32) NOT NULL,optionId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_VOTEOPTIONLOG PRIMARY KEY (id),
	CONSTRAINT LUM_FK_VOTEOPTIONLOG1 FOREIGN KEY (voteLogId) REFERENCES lum_VoteLog(id) ON DELETE CASCADE ,
	CONSTRAINT LUM_FK_VOTEOPTIONLOG2 FOREIGN KEY (optionId) REFERENCES lum_VoteOption(optionId) ON DELETE CASCADE 
);

-----------------------------------------------
-- Generated SQL for: lumis/service/wiki/database
-----------------------------------------------

	
CREATE TABLE lum_WikiArticle
(	id CHAR(32) NOT NULL,title NVARCHAR2(255) NOT NULL,content CLOB NULL,mainArticle NUMBER(1) NOT NULL,
	CONSTRAINT LUM_PK_ARTICLE_ID PRIMARY KEY (id)
);

-----------------------------------------------
-- Generated SQL for: lumis/service/wsrp/consumer/database
-----------------------------------------------

	
CREATE TABLE lum_WsrpCProducer
(	id CHAR(32) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,producerURL NVARCHAR2(255) NOT NULL,producerVersion NVARCHAR2(10) NOT NULL,producerMarkupEndpoint NVARCHAR2(255) NOT NULL,producerStatus NUMBER(10) NOT NULL,serviceDescriptionLastModified DATE NOT NULL,serviceDescription CLOB NOT NULL,
	CONSTRAINT LUM_PK_WSRPCPRODUCER PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WSRPCPRODUCER FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
);
	
CREATE UNIQUE INDEX LUM_IX_WSRPCPRODUCER ON lum_WsrpCProducer(serviceInstanceId);
	
CREATE TABLE lum_WsrpCRegistration
(	registrationHandle CHAR(32) NOT NULL,producerEntityId CHAR(32) NOT NULL,registrationState BLOB NULL,
	CONSTRAINT LUM_PK_WSRPCREGISTRATION PRIMARY KEY (registrationHandle),
	CONSTRAINT LUM_FK_WSRPCREGISTRATION FOREIGN KEY (producerEntityId) REFERENCES lum_WsrpCProducer(id)
);
	
	
CREATE UNIQUE INDEX LUM_UN_WSRPCREGISTRATION ON lum_WsrpCRegistration(producerEntityId);
	
	
CREATE TABLE lum_WsrpCClonedPortlet
(	portletHandle CHAR(32) NOT NULL,name NVARCHAR2(64) NOT NULL,registrationHandle CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_WSRPCCLONEDPORTLET PRIMARY KEY (portletHandle),
	CONSTRAINT LUM_FK_WSRPCCLONEDPORTLET FOREIGN KEY (registrationHandle) REFERENCES lum_WsrpCRegistration(registrationHandle)
);
	
CREATE TABLE lum_WsrpCClonedTgtInst
(	portletHandle CHAR(32) NOT NULL,interfaceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_WSRPCCLONEDTGTINST PRIMARY KEY (portletHandle,interfaceInstanceId),
	CONSTRAINT LUM_FK_WSRPCCLONEDTGTINST FOREIGN KEY (portletHandle) REFERENCES lum_WsrpCClonedPortlet(portletHandle),
	CONSTRAINT LUM_FK_WSRPCCLONEDTGTINST2 FOREIGN KEY (interfaceInstanceId) REFERENCES lum_InterfaceInstance(interfaceInstanceId)
);
	
CREATE INDEX LUM_UN_WSRPCCLONEDTGTINST ON lum_WsrpCClonedTgtInst(interfaceInstanceId);

-----------------------------------------------
-- Generated SQL for: lumis/service/wsrp/producer/database
-----------------------------------------------

	
CREATE TABLE lum_WsrpPProducer
(	id CHAR(32) NOT NULL,producerKey NVARCHAR2(255) NOT NULL,serviceInstanceId CHAR(32) NOT NULL,version NVARCHAR2(10) NOT NULL,enabled NUMBER(1) NOT NULL,httpAuthenticator NVARCHAR2(100) NULL,requiresRegistration NUMBER(1) NOT NULL,supportsInbandRegistration NUMBER(1) NOT NULL,maxInbandLifetime NUMBER(19) NOT NULL,
	CONSTRAINT LUM_PK_WSRPPPRODUCER PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WSRPPPRODUCER1 FOREIGN KEY (serviceInstanceId) REFERENCES lum_ServiceInstance(serviceInstanceId)
);
	
CREATE UNIQUE INDEX LUM_IX_WSRPPPRODUCER1 ON lum_WsrpPProducer(serviceInstanceId);
	
CREATE UNIQUE INDEX LUM_IX_WSRPPPRODUCER2 ON lum_WsrpPProducer(producerKey);	
	
CREATE TABLE lum_WsrpPOfferedPortlet
(	id CHAR(32) NOT NULL,producerId CHAR(32) NOT NULL,interfaceInstanceId CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_WSRPPOFFEREDPORTLET PRIMARY KEY (id),
	CONSTRAINT LUM_FK_WSRPPOFFEREDPORTLET1 FOREIGN KEY (interfaceInstanceId) REFERENCES lum_InterfaceInstance(interfaceInstanceId),
	CONSTRAINT LUM_FK_WSRPPOFFEREDPORTLET2 FOREIGN KEY (producerId) REFERENCES lum_WsrpPProducer(id)
);
	
CREATE UNIQUE INDEX LUM_IX_WSRPPOFFEREDPORTLET1 ON lum_WsrpPOfferedPortlet(producerId,interfaceInstanceId);
	
CREATE TABLE lum_WsrpPRegistrationData
(	registrationHandle CHAR(32) NOT NULL,producerId CHAR(32) NOT NULL,consumerName NVARCHAR2(255) NOT NULL,consumerAgent NVARCHAR2(255) NOT NULL,methodGetSupported NUMBER(1) NOT NULL,consumerModes NVARCHAR2(128) NULL,consumerWindowStates NVARCHAR2(128) NULL,customUserProfileData NVARCHAR2(255) NULL,enabled NUMBER(1) NULL,lifetimeTerminationTime DATE NULL,consumerUserScopes NVARCHAR2(255) NULL,
	CONSTRAINT LUM_PK_WSRPPREGISTRATIONDATA PRIMARY KEY (registrationHandle)
);
	
	
CREATE INDEX LUM_IX_WSRPPREGISTRATIONDATA1 ON lum_WsrpPRegistrationData(producerId);
	
	
CREATE TABLE lum_WsrpPClonedPortlet
(	id CHAR(32) NOT NULL,originalPortletId CHAR(32) NOT NULL,registrationHandle CHAR(32) NOT NULL,
	CONSTRAINT LUM_PK_CLONEDPORTLET PRIMARY KEY (id),
	CONSTRAINT LUM_FK_CLONEDPORTLET1 FOREIGN KEY (id) REFERENCES lum_InterfaceInstance(interfaceInstanceId),
	CONSTRAINT LUM_FK_CLONEDPORTLET2 FOREIGN KEY (registrationHandle) REFERENCES lum_WsrpPRegistrationData(registrationHandle)
);
	
CREATE INDEX LUM_IX_WSRPPCLONEDPORTLET1 ON lum_WsrpPClonedPortlet(registrationHandle);


